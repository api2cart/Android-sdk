/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class CartShippingMethodRate {
  
  @SerializedName("min_weight")
  private String minWeight = null;
  @SerializedName("max_weight")
  private String maxWeight = null;
  @SerializedName("min_order_amount")
  private String minOrderAmount = null;
  @SerializedName("max_order_amount")
  private String maxOrderAmount = null;
  @SerializedName("min_items_count")
  private String minItemsCount = null;
  @SerializedName("max_items_count")
  private String maxItemsCount = null;
  @SerializedName("price")
  private String price = null;
  @SerializedName("additional_fields")
  private Object additionalFields = null;
  @SerializedName("custom_fields")
  private Object customFields = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getMinWeight() {
    return minWeight;
  }
  public void setMinWeight(String minWeight) {
    this.minWeight = minWeight;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getMaxWeight() {
    return maxWeight;
  }
  public void setMaxWeight(String maxWeight) {
    this.maxWeight = maxWeight;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getMinOrderAmount() {
    return minOrderAmount;
  }
  public void setMinOrderAmount(String minOrderAmount) {
    this.minOrderAmount = minOrderAmount;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getMaxOrderAmount() {
    return maxOrderAmount;
  }
  public void setMaxOrderAmount(String maxOrderAmount) {
    this.maxOrderAmount = maxOrderAmount;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getMinItemsCount() {
    return minItemsCount;
  }
  public void setMinItemsCount(String minItemsCount) {
    this.minItemsCount = minItemsCount;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getMaxItemsCount() {
    return maxItemsCount;
  }
  public void setMaxItemsCount(String maxItemsCount) {
    this.maxItemsCount = maxItemsCount;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getPrice() {
    return price;
  }
  public void setPrice(String price) {
    this.price = price;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Object getAdditionalFields() {
    return additionalFields;
  }
  public void setAdditionalFields(Object additionalFields) {
    this.additionalFields = additionalFields;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Object getCustomFields() {
    return customFields;
  }
  public void setCustomFields(Object customFields) {
    this.customFields = customFields;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CartShippingMethodRate cartShippingMethodRate = (CartShippingMethodRate) o;
    return (this.minWeight == null ? cartShippingMethodRate.minWeight == null : this.minWeight.equals(cartShippingMethodRate.minWeight)) &&
        (this.maxWeight == null ? cartShippingMethodRate.maxWeight == null : this.maxWeight.equals(cartShippingMethodRate.maxWeight)) &&
        (this.minOrderAmount == null ? cartShippingMethodRate.minOrderAmount == null : this.minOrderAmount.equals(cartShippingMethodRate.minOrderAmount)) &&
        (this.maxOrderAmount == null ? cartShippingMethodRate.maxOrderAmount == null : this.maxOrderAmount.equals(cartShippingMethodRate.maxOrderAmount)) &&
        (this.minItemsCount == null ? cartShippingMethodRate.minItemsCount == null : this.minItemsCount.equals(cartShippingMethodRate.minItemsCount)) &&
        (this.maxItemsCount == null ? cartShippingMethodRate.maxItemsCount == null : this.maxItemsCount.equals(cartShippingMethodRate.maxItemsCount)) &&
        (this.price == null ? cartShippingMethodRate.price == null : this.price.equals(cartShippingMethodRate.price)) &&
        (this.additionalFields == null ? cartShippingMethodRate.additionalFields == null : this.additionalFields.equals(cartShippingMethodRate.additionalFields)) &&
        (this.customFields == null ? cartShippingMethodRate.customFields == null : this.customFields.equals(cartShippingMethodRate.customFields));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.minWeight == null ? 0: this.minWeight.hashCode());
    result = 31 * result + (this.maxWeight == null ? 0: this.maxWeight.hashCode());
    result = 31 * result + (this.minOrderAmount == null ? 0: this.minOrderAmount.hashCode());
    result = 31 * result + (this.maxOrderAmount == null ? 0: this.maxOrderAmount.hashCode());
    result = 31 * result + (this.minItemsCount == null ? 0: this.minItemsCount.hashCode());
    result = 31 * result + (this.maxItemsCount == null ? 0: this.maxItemsCount.hashCode());
    result = 31 * result + (this.price == null ? 0: this.price.hashCode());
    result = 31 * result + (this.additionalFields == null ? 0: this.additionalFields.hashCode());
    result = 31 * result + (this.customFields == null ? 0: this.customFields.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CartShippingMethodRate {\n");
    
    sb.append("  minWeight: ").append(minWeight).append("\n");
    sb.append("  maxWeight: ").append(maxWeight).append("\n");
    sb.append("  minOrderAmount: ").append(minOrderAmount).append("\n");
    sb.append("  maxOrderAmount: ").append(maxOrderAmount).append("\n");
    sb.append("  minItemsCount: ").append(minItemsCount).append("\n");
    sb.append("  maxItemsCount: ").append(maxItemsCount).append("\n");
    sb.append("  price: ").append(price).append("\n");
    sb.append("  additionalFields: ").append(additionalFields).append("\n");
    sb.append("  customFields: ").append(customFields).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
