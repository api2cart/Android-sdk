/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import org.openapitools.client.model.ProductOptionAddValuesInner;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ProductOptionAdd {
  
  @SerializedName("name")
  private String name = null;
  public enum TypeEnum {
     option_type_select,  option_type_text,  option_type_radio,  option_type_checkbox,  option_type_textarea,  option_type_readonly,  option_type_multiselect,  option_type_multicheckbox,  option_type_file,  option_type_date,  option_type_datetime,  option_type_time, 
  };
  @SerializedName("type")
  private TypeEnum type = null;
  @SerializedName("product_id")
  private String productId = null;
  @SerializedName("default_option_value")
  private String defaultOptionValue = null;
  @SerializedName("option_values")
  private String optionValues = null;
  @SerializedName("description")
  private String description = null;
  @SerializedName("avail")
  private Boolean avail = true;
  @SerializedName("sort_order")
  private Integer sortOrder = 0;
  @SerializedName("required")
  private Boolean required = false;
  @SerializedName("values")
  private List<ProductOptionAddValuesInner> values = null;
  @SerializedName("clear_cache")
  private Boolean clearCache = true;

  /**
   * Defines option's name
   **/
  @ApiModelProperty(required = true, value = "Defines option's name")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * Defines option's type that has to be added
   **/
  @ApiModelProperty(required = true, value = "Defines option's type that has to be added")
  public TypeEnum getType() {
    return type;
  }
  public void setType(TypeEnum type) {
    this.type = type;
  }

  /**
   * Defines product id where the option should be added
   **/
  @ApiModelProperty(value = "Defines product id where the option should be added")
  public String getProductId() {
    return productId;
  }
  public void setProductId(String productId) {
    this.productId = productId;
  }

  /**
   * Defines default option value that has to be added
   **/
  @ApiModelProperty(value = "Defines default option value that has to be added")
  public String getDefaultOptionValue() {
    return defaultOptionValue;
  }
  public void setDefaultOptionValue(String defaultOptionValue) {
    this.defaultOptionValue = defaultOptionValue;
  }

  /**
   * Defines option values that has to be added
   **/
  @ApiModelProperty(value = "Defines option values that has to be added")
  public String getOptionValues() {
    return optionValues;
  }
  public void setOptionValues(String optionValues) {
    this.optionValues = optionValues;
  }

  /**
   * Defines option's description
   **/
  @ApiModelProperty(value = "Defines option's description")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }

  /**
   * Defines whether the option is available
   **/
  @ApiModelProperty(value = "Defines whether the option is available")
  public Boolean getAvail() {
    return avail;
  }
  public void setAvail(Boolean avail) {
    this.avail = avail;
  }

  /**
   * Sort number in the list
   **/
  @ApiModelProperty(value = "Sort number in the list")
  public Integer getSortOrder() {
    return sortOrder;
  }
  public void setSortOrder(Integer sortOrder) {
    this.sortOrder = sortOrder;
  }

  /**
   * Defines if the option is required
   **/
  @ApiModelProperty(value = "Defines if the option is required")
  public Boolean getRequired() {
    return required;
  }
  public void setRequired(Boolean required) {
    this.required = required;
  }

  /**
   * An array of option values.</b>
   **/
  @ApiModelProperty(value = "An array of option values.</b>")
  public List<ProductOptionAddValuesInner> getValues() {
    return values;
  }
  public void setValues(List<ProductOptionAddValuesInner> values) {
    this.values = values;
  }

  /**
   * Is cache clear required
   **/
  @ApiModelProperty(value = "Is cache clear required")
  public Boolean getClearCache() {
    return clearCache;
  }
  public void setClearCache(Boolean clearCache) {
    this.clearCache = clearCache;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductOptionAdd productOptionAdd = (ProductOptionAdd) o;
    return (this.name == null ? productOptionAdd.name == null : this.name.equals(productOptionAdd.name)) &&
        (this.type == null ? productOptionAdd.type == null : this.type.equals(productOptionAdd.type)) &&
        (this.productId == null ? productOptionAdd.productId == null : this.productId.equals(productOptionAdd.productId)) &&
        (this.defaultOptionValue == null ? productOptionAdd.defaultOptionValue == null : this.defaultOptionValue.equals(productOptionAdd.defaultOptionValue)) &&
        (this.optionValues == null ? productOptionAdd.optionValues == null : this.optionValues.equals(productOptionAdd.optionValues)) &&
        (this.description == null ? productOptionAdd.description == null : this.description.equals(productOptionAdd.description)) &&
        (this.avail == null ? productOptionAdd.avail == null : this.avail.equals(productOptionAdd.avail)) &&
        (this.sortOrder == null ? productOptionAdd.sortOrder == null : this.sortOrder.equals(productOptionAdd.sortOrder)) &&
        (this.required == null ? productOptionAdd.required == null : this.required.equals(productOptionAdd.required)) &&
        (this.values == null ? productOptionAdd.values == null : this.values.equals(productOptionAdd.values)) &&
        (this.clearCache == null ? productOptionAdd.clearCache == null : this.clearCache.equals(productOptionAdd.clearCache));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    result = 31 * result + (this.productId == null ? 0: this.productId.hashCode());
    result = 31 * result + (this.defaultOptionValue == null ? 0: this.defaultOptionValue.hashCode());
    result = 31 * result + (this.optionValues == null ? 0: this.optionValues.hashCode());
    result = 31 * result + (this.description == null ? 0: this.description.hashCode());
    result = 31 * result + (this.avail == null ? 0: this.avail.hashCode());
    result = 31 * result + (this.sortOrder == null ? 0: this.sortOrder.hashCode());
    result = 31 * result + (this.required == null ? 0: this.required.hashCode());
    result = 31 * result + (this.values == null ? 0: this.values.hashCode());
    result = 31 * result + (this.clearCache == null ? 0: this.clearCache.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductOptionAdd {\n");
    
    sb.append("  name: ").append(name).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("  productId: ").append(productId).append("\n");
    sb.append("  defaultOptionValue: ").append(defaultOptionValue).append("\n");
    sb.append("  optionValues: ").append(optionValues).append("\n");
    sb.append("  description: ").append(description).append("\n");
    sb.append("  avail: ").append(avail).append("\n");
    sb.append("  sortOrder: ").append(sortOrder).append("\n");
    sb.append("  required: ").append(required).append("\n");
    sb.append("  values: ").append(values).append("\n");
    sb.append("  clearCache: ").append(clearCache).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
