/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import org.openapitools.client.model.A2CDateTime;
import org.openapitools.client.model.BaseCustomer;
import org.openapitools.client.model.Currency;
import org.openapitools.client.model.CustomerAddress;
import org.openapitools.client.model.OrderItem;
import org.openapitools.client.model.OrderPaymentMethod;
import org.openapitools.client.model.OrderRefund;
import org.openapitools.client.model.OrderShippingMethod;
import org.openapitools.client.model.OrderStatus;
import org.openapitools.client.model.OrderTotal;
import org.openapitools.client.model.OrderTotals;
import org.openapitools.client.model.OrderTotalsNewDiscount;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Order {
  
  @SerializedName("id")
  private String id = null;
  @SerializedName("order_id")
  private String orderId = null;
  @SerializedName("basket_id")
  private String basketId = null;
  @SerializedName("channel_id")
  private String channelId = null;
  @SerializedName("customer")
  private BaseCustomer customer = null;
  @SerializedName("create_at")
  private A2CDateTime createAt = null;
  @SerializedName("currency")
  private Currency currency = null;
  @SerializedName("shipping_address")
  private CustomerAddress shippingAddress = null;
  @SerializedName("billing_address")
  private CustomerAddress billingAddress = null;
  @SerializedName("payment_method")
  private OrderPaymentMethod paymentMethod = null;
  @SerializedName("shipping_method")
  private OrderShippingMethod shippingMethod = null;
  @SerializedName("shipping_methods")
  private List<OrderShippingMethod> shippingMethods = null;
  @SerializedName("status")
  private OrderStatus status = null;
  @SerializedName("totals")
  private OrderTotals totals = null;
  @SerializedName("total")
  private OrderTotal total = null;
  @SerializedName("discounts")
  private List<OrderTotalsNewDiscount> discounts = null;
  @SerializedName("order_products")
  private List<OrderItem> orderProducts = null;
  @SerializedName("bundles")
  private List<OrderItem> bundles = null;
  @SerializedName("modified_at")
  private A2CDateTime modifiedAt = null;
  @SerializedName("finished_time")
  private A2CDateTime finishedTime = null;
  @SerializedName("comment")
  private String comment = null;
  @SerializedName("store_id")
  private String storeId = null;
  @SerializedName("warehouses_ids")
  private List<String> warehousesIds = null;
  @SerializedName("refunds")
  private List<OrderRefund> refunds = null;
  @SerializedName("gift_message")
  private String giftMessage = null;
  @SerializedName("order_details_url")
  private String orderDetailsUrl = null;
  @SerializedName("additional_fields")
  private Object additionalFields = null;
  @SerializedName("custom_fields")
  private Object customFields = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getOrderId() {
    return orderId;
  }
  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getBasketId() {
    return basketId;
  }
  public void setBasketId(String basketId) {
    this.basketId = basketId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getChannelId() {
    return channelId;
  }
  public void setChannelId(String channelId) {
    this.channelId = channelId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BaseCustomer getCustomer() {
    return customer;
  }
  public void setCustomer(BaseCustomer customer) {
    this.customer = customer;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public A2CDateTime getCreateAt() {
    return createAt;
  }
  public void setCreateAt(A2CDateTime createAt) {
    this.createAt = createAt;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Currency getCurrency() {
    return currency;
  }
  public void setCurrency(Currency currency) {
    this.currency = currency;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public CustomerAddress getShippingAddress() {
    return shippingAddress;
  }
  public void setShippingAddress(CustomerAddress shippingAddress) {
    this.shippingAddress = shippingAddress;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public CustomerAddress getBillingAddress() {
    return billingAddress;
  }
  public void setBillingAddress(CustomerAddress billingAddress) {
    this.billingAddress = billingAddress;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public OrderPaymentMethod getPaymentMethod() {
    return paymentMethod;
  }
  public void setPaymentMethod(OrderPaymentMethod paymentMethod) {
    this.paymentMethod = paymentMethod;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public OrderShippingMethod getShippingMethod() {
    return shippingMethod;
  }
  public void setShippingMethod(OrderShippingMethod shippingMethod) {
    this.shippingMethod = shippingMethod;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<OrderShippingMethod> getShippingMethods() {
    return shippingMethods;
  }
  public void setShippingMethods(List<OrderShippingMethod> shippingMethods) {
    this.shippingMethods = shippingMethods;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public OrderStatus getStatus() {
    return status;
  }
  public void setStatus(OrderStatus status) {
    this.status = status;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public OrderTotals getTotals() {
    return totals;
  }
  public void setTotals(OrderTotals totals) {
    this.totals = totals;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public OrderTotal getTotal() {
    return total;
  }
  public void setTotal(OrderTotal total) {
    this.total = total;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<OrderTotalsNewDiscount> getDiscounts() {
    return discounts;
  }
  public void setDiscounts(List<OrderTotalsNewDiscount> discounts) {
    this.discounts = discounts;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<OrderItem> getOrderProducts() {
    return orderProducts;
  }
  public void setOrderProducts(List<OrderItem> orderProducts) {
    this.orderProducts = orderProducts;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<OrderItem> getBundles() {
    return bundles;
  }
  public void setBundles(List<OrderItem> bundles) {
    this.bundles = bundles;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public A2CDateTime getModifiedAt() {
    return modifiedAt;
  }
  public void setModifiedAt(A2CDateTime modifiedAt) {
    this.modifiedAt = modifiedAt;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public A2CDateTime getFinishedTime() {
    return finishedTime;
  }
  public void setFinishedTime(A2CDateTime finishedTime) {
    this.finishedTime = finishedTime;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getComment() {
    return comment;
  }
  public void setComment(String comment) {
    this.comment = comment;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getStoreId() {
    return storeId;
  }
  public void setStoreId(String storeId) {
    this.storeId = storeId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<String> getWarehousesIds() {
    return warehousesIds;
  }
  public void setWarehousesIds(List<String> warehousesIds) {
    this.warehousesIds = warehousesIds;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<OrderRefund> getRefunds() {
    return refunds;
  }
  public void setRefunds(List<OrderRefund> refunds) {
    this.refunds = refunds;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getGiftMessage() {
    return giftMessage;
  }
  public void setGiftMessage(String giftMessage) {
    this.giftMessage = giftMessage;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getOrderDetailsUrl() {
    return orderDetailsUrl;
  }
  public void setOrderDetailsUrl(String orderDetailsUrl) {
    this.orderDetailsUrl = orderDetailsUrl;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Object getAdditionalFields() {
    return additionalFields;
  }
  public void setAdditionalFields(Object additionalFields) {
    this.additionalFields = additionalFields;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Object getCustomFields() {
    return customFields;
  }
  public void setCustomFields(Object customFields) {
    this.customFields = customFields;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Order order = (Order) o;
    return (this.id == null ? order.id == null : this.id.equals(order.id)) &&
        (this.orderId == null ? order.orderId == null : this.orderId.equals(order.orderId)) &&
        (this.basketId == null ? order.basketId == null : this.basketId.equals(order.basketId)) &&
        (this.channelId == null ? order.channelId == null : this.channelId.equals(order.channelId)) &&
        (this.customer == null ? order.customer == null : this.customer.equals(order.customer)) &&
        (this.createAt == null ? order.createAt == null : this.createAt.equals(order.createAt)) &&
        (this.currency == null ? order.currency == null : this.currency.equals(order.currency)) &&
        (this.shippingAddress == null ? order.shippingAddress == null : this.shippingAddress.equals(order.shippingAddress)) &&
        (this.billingAddress == null ? order.billingAddress == null : this.billingAddress.equals(order.billingAddress)) &&
        (this.paymentMethod == null ? order.paymentMethod == null : this.paymentMethod.equals(order.paymentMethod)) &&
        (this.shippingMethod == null ? order.shippingMethod == null : this.shippingMethod.equals(order.shippingMethod)) &&
        (this.shippingMethods == null ? order.shippingMethods == null : this.shippingMethods.equals(order.shippingMethods)) &&
        (this.status == null ? order.status == null : this.status.equals(order.status)) &&
        (this.totals == null ? order.totals == null : this.totals.equals(order.totals)) &&
        (this.total == null ? order.total == null : this.total.equals(order.total)) &&
        (this.discounts == null ? order.discounts == null : this.discounts.equals(order.discounts)) &&
        (this.orderProducts == null ? order.orderProducts == null : this.orderProducts.equals(order.orderProducts)) &&
        (this.bundles == null ? order.bundles == null : this.bundles.equals(order.bundles)) &&
        (this.modifiedAt == null ? order.modifiedAt == null : this.modifiedAt.equals(order.modifiedAt)) &&
        (this.finishedTime == null ? order.finishedTime == null : this.finishedTime.equals(order.finishedTime)) &&
        (this.comment == null ? order.comment == null : this.comment.equals(order.comment)) &&
        (this.storeId == null ? order.storeId == null : this.storeId.equals(order.storeId)) &&
        (this.warehousesIds == null ? order.warehousesIds == null : this.warehousesIds.equals(order.warehousesIds)) &&
        (this.refunds == null ? order.refunds == null : this.refunds.equals(order.refunds)) &&
        (this.giftMessage == null ? order.giftMessage == null : this.giftMessage.equals(order.giftMessage)) &&
        (this.orderDetailsUrl == null ? order.orderDetailsUrl == null : this.orderDetailsUrl.equals(order.orderDetailsUrl)) &&
        (this.additionalFields == null ? order.additionalFields == null : this.additionalFields.equals(order.additionalFields)) &&
        (this.customFields == null ? order.customFields == null : this.customFields.equals(order.customFields));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.orderId == null ? 0: this.orderId.hashCode());
    result = 31 * result + (this.basketId == null ? 0: this.basketId.hashCode());
    result = 31 * result + (this.channelId == null ? 0: this.channelId.hashCode());
    result = 31 * result + (this.customer == null ? 0: this.customer.hashCode());
    result = 31 * result + (this.createAt == null ? 0: this.createAt.hashCode());
    result = 31 * result + (this.currency == null ? 0: this.currency.hashCode());
    result = 31 * result + (this.shippingAddress == null ? 0: this.shippingAddress.hashCode());
    result = 31 * result + (this.billingAddress == null ? 0: this.billingAddress.hashCode());
    result = 31 * result + (this.paymentMethod == null ? 0: this.paymentMethod.hashCode());
    result = 31 * result + (this.shippingMethod == null ? 0: this.shippingMethod.hashCode());
    result = 31 * result + (this.shippingMethods == null ? 0: this.shippingMethods.hashCode());
    result = 31 * result + (this.status == null ? 0: this.status.hashCode());
    result = 31 * result + (this.totals == null ? 0: this.totals.hashCode());
    result = 31 * result + (this.total == null ? 0: this.total.hashCode());
    result = 31 * result + (this.discounts == null ? 0: this.discounts.hashCode());
    result = 31 * result + (this.orderProducts == null ? 0: this.orderProducts.hashCode());
    result = 31 * result + (this.bundles == null ? 0: this.bundles.hashCode());
    result = 31 * result + (this.modifiedAt == null ? 0: this.modifiedAt.hashCode());
    result = 31 * result + (this.finishedTime == null ? 0: this.finishedTime.hashCode());
    result = 31 * result + (this.comment == null ? 0: this.comment.hashCode());
    result = 31 * result + (this.storeId == null ? 0: this.storeId.hashCode());
    result = 31 * result + (this.warehousesIds == null ? 0: this.warehousesIds.hashCode());
    result = 31 * result + (this.refunds == null ? 0: this.refunds.hashCode());
    result = 31 * result + (this.giftMessage == null ? 0: this.giftMessage.hashCode());
    result = 31 * result + (this.orderDetailsUrl == null ? 0: this.orderDetailsUrl.hashCode());
    result = 31 * result + (this.additionalFields == null ? 0: this.additionalFields.hashCode());
    result = 31 * result + (this.customFields == null ? 0: this.customFields.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Order {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  orderId: ").append(orderId).append("\n");
    sb.append("  basketId: ").append(basketId).append("\n");
    sb.append("  channelId: ").append(channelId).append("\n");
    sb.append("  customer: ").append(customer).append("\n");
    sb.append("  createAt: ").append(createAt).append("\n");
    sb.append("  currency: ").append(currency).append("\n");
    sb.append("  shippingAddress: ").append(shippingAddress).append("\n");
    sb.append("  billingAddress: ").append(billingAddress).append("\n");
    sb.append("  paymentMethod: ").append(paymentMethod).append("\n");
    sb.append("  shippingMethod: ").append(shippingMethod).append("\n");
    sb.append("  shippingMethods: ").append(shippingMethods).append("\n");
    sb.append("  status: ").append(status).append("\n");
    sb.append("  totals: ").append(totals).append("\n");
    sb.append("  total: ").append(total).append("\n");
    sb.append("  discounts: ").append(discounts).append("\n");
    sb.append("  orderProducts: ").append(orderProducts).append("\n");
    sb.append("  bundles: ").append(bundles).append("\n");
    sb.append("  modifiedAt: ").append(modifiedAt).append("\n");
    sb.append("  finishedTime: ").append(finishedTime).append("\n");
    sb.append("  comment: ").append(comment).append("\n");
    sb.append("  storeId: ").append(storeId).append("\n");
    sb.append("  warehousesIds: ").append(warehousesIds).append("\n");
    sb.append("  refunds: ").append(refunds).append("\n");
    sb.append("  giftMessage: ").append(giftMessage).append("\n");
    sb.append("  orderDetailsUrl: ").append(orderDetailsUrl).append("\n");
    sb.append("  additionalFields: ").append(additionalFields).append("\n");
    sb.append("  customFields: ").append(customFields).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
