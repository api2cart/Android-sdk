/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import org.openapitools.client.model.Carrier;
import org.openapitools.client.model.CartChannel;
import org.openapitools.client.model.Currency;
import org.openapitools.client.model.Info;
import org.openapitools.client.model.Language;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class CartStoreInfo {
  
  @SerializedName("store_id")
  private String storeId = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("language")
  private String language = null;
  @SerializedName("store_languages")
  private List<Language> storeLanguages = null;
  @SerializedName("currency")
  private Currency currency = null;
  @SerializedName("store_currencies")
  private List<Currency> storeCurrencies = null;
  @SerializedName("timezone")
  private String timezone = null;
  @SerializedName("country")
  private String country = null;
  @SerializedName("root_category_id")
  private String rootCategoryId = null;
  @SerializedName("multi_store_url")
  private String multiStoreUrl = null;
  @SerializedName("active")
  private Boolean active = null;
  @SerializedName("weight_unit")
  private String weightUnit = null;
  @SerializedName("dimension_unit")
  private String dimensionUnit = null;
  @SerializedName("prices_include_tax")
  private Boolean pricesIncludeTax = null;
  @SerializedName("carrier_info")
  private List<Carrier> carrierInfo = null;
  @SerializedName("store_owner_info")
  private Info storeOwnerInfo = null;
  @SerializedName("default_warehouse_id")
  private String defaultWarehouseId = null;
  @SerializedName("channels")
  private List<CartChannel> channels = null;
  @SerializedName("additional_fields")
  private Object additionalFields = null;
  @SerializedName("custom_fields")
  private Object customFields = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getStoreId() {
    return storeId;
  }
  public void setStoreId(String storeId) {
    this.storeId = storeId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getLanguage() {
    return language;
  }
  public void setLanguage(String language) {
    this.language = language;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<Language> getStoreLanguages() {
    return storeLanguages;
  }
  public void setStoreLanguages(List<Language> storeLanguages) {
    this.storeLanguages = storeLanguages;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Currency getCurrency() {
    return currency;
  }
  public void setCurrency(Currency currency) {
    this.currency = currency;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<Currency> getStoreCurrencies() {
    return storeCurrencies;
  }
  public void setStoreCurrencies(List<Currency> storeCurrencies) {
    this.storeCurrencies = storeCurrencies;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getTimezone() {
    return timezone;
  }
  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getCountry() {
    return country;
  }
  public void setCountry(String country) {
    this.country = country;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getRootCategoryId() {
    return rootCategoryId;
  }
  public void setRootCategoryId(String rootCategoryId) {
    this.rootCategoryId = rootCategoryId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getMultiStoreUrl() {
    return multiStoreUrl;
  }
  public void setMultiStoreUrl(String multiStoreUrl) {
    this.multiStoreUrl = multiStoreUrl;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getActive() {
    return active;
  }
  public void setActive(Boolean active) {
    this.active = active;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getWeightUnit() {
    return weightUnit;
  }
  public void setWeightUnit(String weightUnit) {
    this.weightUnit = weightUnit;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getDimensionUnit() {
    return dimensionUnit;
  }
  public void setDimensionUnit(String dimensionUnit) {
    this.dimensionUnit = dimensionUnit;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getPricesIncludeTax() {
    return pricesIncludeTax;
  }
  public void setPricesIncludeTax(Boolean pricesIncludeTax) {
    this.pricesIncludeTax = pricesIncludeTax;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<Carrier> getCarrierInfo() {
    return carrierInfo;
  }
  public void setCarrierInfo(List<Carrier> carrierInfo) {
    this.carrierInfo = carrierInfo;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Info getStoreOwnerInfo() {
    return storeOwnerInfo;
  }
  public void setStoreOwnerInfo(Info storeOwnerInfo) {
    this.storeOwnerInfo = storeOwnerInfo;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getDefaultWarehouseId() {
    return defaultWarehouseId;
  }
  public void setDefaultWarehouseId(String defaultWarehouseId) {
    this.defaultWarehouseId = defaultWarehouseId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<CartChannel> getChannels() {
    return channels;
  }
  public void setChannels(List<CartChannel> channels) {
    this.channels = channels;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Object getAdditionalFields() {
    return additionalFields;
  }
  public void setAdditionalFields(Object additionalFields) {
    this.additionalFields = additionalFields;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Object getCustomFields() {
    return customFields;
  }
  public void setCustomFields(Object customFields) {
    this.customFields = customFields;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CartStoreInfo cartStoreInfo = (CartStoreInfo) o;
    return (this.storeId == null ? cartStoreInfo.storeId == null : this.storeId.equals(cartStoreInfo.storeId)) &&
        (this.name == null ? cartStoreInfo.name == null : this.name.equals(cartStoreInfo.name)) &&
        (this.language == null ? cartStoreInfo.language == null : this.language.equals(cartStoreInfo.language)) &&
        (this.storeLanguages == null ? cartStoreInfo.storeLanguages == null : this.storeLanguages.equals(cartStoreInfo.storeLanguages)) &&
        (this.currency == null ? cartStoreInfo.currency == null : this.currency.equals(cartStoreInfo.currency)) &&
        (this.storeCurrencies == null ? cartStoreInfo.storeCurrencies == null : this.storeCurrencies.equals(cartStoreInfo.storeCurrencies)) &&
        (this.timezone == null ? cartStoreInfo.timezone == null : this.timezone.equals(cartStoreInfo.timezone)) &&
        (this.country == null ? cartStoreInfo.country == null : this.country.equals(cartStoreInfo.country)) &&
        (this.rootCategoryId == null ? cartStoreInfo.rootCategoryId == null : this.rootCategoryId.equals(cartStoreInfo.rootCategoryId)) &&
        (this.multiStoreUrl == null ? cartStoreInfo.multiStoreUrl == null : this.multiStoreUrl.equals(cartStoreInfo.multiStoreUrl)) &&
        (this.active == null ? cartStoreInfo.active == null : this.active.equals(cartStoreInfo.active)) &&
        (this.weightUnit == null ? cartStoreInfo.weightUnit == null : this.weightUnit.equals(cartStoreInfo.weightUnit)) &&
        (this.dimensionUnit == null ? cartStoreInfo.dimensionUnit == null : this.dimensionUnit.equals(cartStoreInfo.dimensionUnit)) &&
        (this.pricesIncludeTax == null ? cartStoreInfo.pricesIncludeTax == null : this.pricesIncludeTax.equals(cartStoreInfo.pricesIncludeTax)) &&
        (this.carrierInfo == null ? cartStoreInfo.carrierInfo == null : this.carrierInfo.equals(cartStoreInfo.carrierInfo)) &&
        (this.storeOwnerInfo == null ? cartStoreInfo.storeOwnerInfo == null : this.storeOwnerInfo.equals(cartStoreInfo.storeOwnerInfo)) &&
        (this.defaultWarehouseId == null ? cartStoreInfo.defaultWarehouseId == null : this.defaultWarehouseId.equals(cartStoreInfo.defaultWarehouseId)) &&
        (this.channels == null ? cartStoreInfo.channels == null : this.channels.equals(cartStoreInfo.channels)) &&
        (this.additionalFields == null ? cartStoreInfo.additionalFields == null : this.additionalFields.equals(cartStoreInfo.additionalFields)) &&
        (this.customFields == null ? cartStoreInfo.customFields == null : this.customFields.equals(cartStoreInfo.customFields));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.storeId == null ? 0: this.storeId.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.language == null ? 0: this.language.hashCode());
    result = 31 * result + (this.storeLanguages == null ? 0: this.storeLanguages.hashCode());
    result = 31 * result + (this.currency == null ? 0: this.currency.hashCode());
    result = 31 * result + (this.storeCurrencies == null ? 0: this.storeCurrencies.hashCode());
    result = 31 * result + (this.timezone == null ? 0: this.timezone.hashCode());
    result = 31 * result + (this.country == null ? 0: this.country.hashCode());
    result = 31 * result + (this.rootCategoryId == null ? 0: this.rootCategoryId.hashCode());
    result = 31 * result + (this.multiStoreUrl == null ? 0: this.multiStoreUrl.hashCode());
    result = 31 * result + (this.active == null ? 0: this.active.hashCode());
    result = 31 * result + (this.weightUnit == null ? 0: this.weightUnit.hashCode());
    result = 31 * result + (this.dimensionUnit == null ? 0: this.dimensionUnit.hashCode());
    result = 31 * result + (this.pricesIncludeTax == null ? 0: this.pricesIncludeTax.hashCode());
    result = 31 * result + (this.carrierInfo == null ? 0: this.carrierInfo.hashCode());
    result = 31 * result + (this.storeOwnerInfo == null ? 0: this.storeOwnerInfo.hashCode());
    result = 31 * result + (this.defaultWarehouseId == null ? 0: this.defaultWarehouseId.hashCode());
    result = 31 * result + (this.channels == null ? 0: this.channels.hashCode());
    result = 31 * result + (this.additionalFields == null ? 0: this.additionalFields.hashCode());
    result = 31 * result + (this.customFields == null ? 0: this.customFields.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CartStoreInfo {\n");
    
    sb.append("  storeId: ").append(storeId).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  language: ").append(language).append("\n");
    sb.append("  storeLanguages: ").append(storeLanguages).append("\n");
    sb.append("  currency: ").append(currency).append("\n");
    sb.append("  storeCurrencies: ").append(storeCurrencies).append("\n");
    sb.append("  timezone: ").append(timezone).append("\n");
    sb.append("  country: ").append(country).append("\n");
    sb.append("  rootCategoryId: ").append(rootCategoryId).append("\n");
    sb.append("  multiStoreUrl: ").append(multiStoreUrl).append("\n");
    sb.append("  active: ").append(active).append("\n");
    sb.append("  weightUnit: ").append(weightUnit).append("\n");
    sb.append("  dimensionUnit: ").append(dimensionUnit).append("\n");
    sb.append("  pricesIncludeTax: ").append(pricesIncludeTax).append("\n");
    sb.append("  carrierInfo: ").append(carrierInfo).append("\n");
    sb.append("  storeOwnerInfo: ").append(storeOwnerInfo).append("\n");
    sb.append("  defaultWarehouseId: ").append(defaultWarehouseId).append("\n");
    sb.append("  channels: ").append(channels).append("\n");
    sb.append("  additionalFields: ").append(additionalFields).append("\n");
    sb.append("  customFields: ").append(customFields).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
