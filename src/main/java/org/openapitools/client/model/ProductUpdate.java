/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.math.BigDecimal;
import java.util.*;
import org.openapitools.client.model.ProductAddManufacturerInfo;
import org.openapitools.client.model.ProductAddPackageDetails;
import org.openapitools.client.model.ProductAddPersonalizationDetails;
import org.openapitools.client.model.ProductAddSpecificsInner;
import org.openapitools.client.model.ProductAddTierPricesInner;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ProductUpdate {
  
  @SerializedName("id")
  private String id = null;
  @SerializedName("model")
  private String model = null;
  @SerializedName("sku")
  private String sku = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("description")
  private String description = null;
  @SerializedName("short_description")
  private String shortDescription = null;
  @SerializedName("price")
  private BigDecimal price = null;
  @SerializedName("old_price")
  private BigDecimal oldPrice = null;
  @SerializedName("special_price")
  private BigDecimal specialPrice = null;
  @SerializedName("sprice_create")
  private String spriceCreate = null;
  @SerializedName("sprice_expire")
  private String spriceExpire = null;
  @SerializedName("cost_price")
  private BigDecimal costPrice = null;
  @SerializedName("fixed_cost_shipping_price")
  private BigDecimal fixedCostShippingPrice = null;
  @SerializedName("retail_price")
  private BigDecimal retailPrice = null;
  @SerializedName("tier_prices")
  private List<ProductAddTierPricesInner> tierPrices = null;
  @SerializedName("reserve_price")
  private BigDecimal reservePrice = null;
  @SerializedName("buyitnow_price")
  private BigDecimal buyitnowPrice = null;
  @SerializedName("taxable")
  private Boolean taxable = true;
  @SerializedName("tax_class_id")
  private String taxClassId = null;
  @SerializedName("type")
  private String type = null;
  @SerializedName("status")
  private String status = null;
  @SerializedName("condition")
  private String condition = null;
  @SerializedName("visible")
  private String visible = null;
  @SerializedName("in_stock")
  private Boolean inStock = null;
  @SerializedName("avail")
  private Boolean avail = true;
  @SerializedName("avail_from")
  private String availFrom = null;
  @SerializedName("product_class")
  private String productClass = null;
  @SerializedName("available_for_view")
  private Boolean availableForView = null;
  @SerializedName("stores_ids")
  private String storesIds = null;
  @SerializedName("store_id")
  private String storeId = null;
  @SerializedName("lang_id")
  private String langId = null;
  @SerializedName("quantity")
  private BigDecimal quantity = null;
  @SerializedName("reserve_quantity")
  private BigDecimal reserveQuantity = null;
  @SerializedName("manage_stock")
  private Boolean manageStock = null;
  @SerializedName("backorder_status")
  private String backorderStatus = null;
  @SerializedName("increase_quantity")
  private BigDecimal increaseQuantity = null;
  @SerializedName("reduce_quantity")
  private BigDecimal reduceQuantity = null;
  @SerializedName("low_stock_threshold")
  private BigDecimal lowStockThreshold = null;
  @SerializedName("warehouse_id")
  private String warehouseId = null;
  @SerializedName("weight")
  private BigDecimal weight = null;
  @SerializedName("weight_unit")
  private String weightUnit = null;
  @SerializedName("height")
  private BigDecimal height = null;
  @SerializedName("length")
  private BigDecimal length = null;
  @SerializedName("width")
  private BigDecimal width = null;
  @SerializedName("dimensions_unit")
  private String dimensionsUnit = null;
  @SerializedName("is_virtual")
  private Boolean isVirtual = false;
  @SerializedName("is_free_shipping")
  private Boolean isFreeShipping = null;
  @SerializedName("gtin")
  private String gtin = null;
  @SerializedName("upc")
  private String upc = null;
  @SerializedName("mpn")
  private String mpn = null;
  @SerializedName("ean")
  private String ean = null;
  @SerializedName("isbn")
  private String isbn = null;
  @SerializedName("barcode")
  private String barcode = null;
  @SerializedName("manufacturer")
  private String manufacturer = null;
  @SerializedName("manufacturer_id")
  private String manufacturerId = null;
  @SerializedName("categories_ids")
  private String categoriesIds = null;
  @SerializedName("related_products_ids")
  private String relatedProductsIds = null;
  @SerializedName("up_sell_products_ids")
  private String upSellProductsIds = null;
  @SerializedName("cross_sell_products_ids")
  private String crossSellProductsIds = null;
  @SerializedName("meta_title")
  private String metaTitle = null;
  @SerializedName("meta_keywords")
  private String metaKeywords = null;
  @SerializedName("meta_description")
  private String metaDescription = null;
  @SerializedName("seo_url")
  private String seoUrl = null;
  @SerializedName("search_keywords")
  private String searchKeywords = null;
  @SerializedName("tags")
  private String tags = null;
  @SerializedName("delivery_code")
  private String deliveryCode = null;
  @SerializedName("package_details")
  private ProductAddPackageDetails packageDetails = null;
  @SerializedName("country_of_origin")
  private String countryOfOrigin = null;
  @SerializedName("harmonized_system_code")
  private String harmonizedSystemCode = null;
  @SerializedName("shipping_template_id")
  private Integer shippingTemplateId = 0;
  @SerializedName("when_made")
  private String whenMade = made_to_order;
  @SerializedName("is_supply")
  private Boolean isSupply = true;
  @SerializedName("downloadable")
  private Boolean downloadable = false;
  @SerializedName("materials")
  private List<String> materials = null;
  @SerializedName("auto_renew")
  private Boolean autoRenew = false;
  @SerializedName("on_sale")
  private Boolean onSale = false;
  @SerializedName("production_partner_ids")
  private String productionPartnerIds = null;
  @SerializedName("manufacturer_info")
  private ProductAddManufacturerInfo manufacturerInfo = null;
  @SerializedName("report_request_id")
  private String reportRequestId = null;
  @SerializedName("disable_report_cache")
  private Boolean disableReportCache = false;
  @SerializedName("reindex")
  private Boolean reindex = true;
  @SerializedName("clear_cache")
  private Boolean clearCache = true;
  @SerializedName("check_process_status")
  private Boolean checkProcessStatus = false;
  @SerializedName("specifics")
  private List<ProductAddSpecificsInner> specifics = null;
  @SerializedName("shop_section_id")
  private Integer shopSectionId = null;
  @SerializedName("personalization_details")
  private ProductAddPersonalizationDetails personalizationDetails = null;
  @SerializedName("marketplace_item_properties")
  private String marketplaceItemProperties = null;
  @SerializedName("min_order_quantity")
  private BigDecimal minOrderQuantity = null;

  /**
   * Defines product id that has to be updated
   **/
  @ApiModelProperty(value = "Defines product id that has to be updated")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   * Defines product model that has to be updated
   **/
  @ApiModelProperty(value = "Defines product model that has to be updated")
  public String getModel() {
    return model;
  }
  public void setModel(String model) {
    this.model = model;
  }

  /**
   * Defines new product's sku
   **/
  @ApiModelProperty(value = "Defines new product's sku")
  public String getSku() {
    return sku;
  }
  public void setSku(String sku) {
    this.sku = sku;
  }

  /**
   * Defines product's name that has to be updated
   **/
  @ApiModelProperty(value = "Defines product's name that has to be updated")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * Defines new product's description
   **/
  @ApiModelProperty(value = "Defines new product's description")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }

  /**
   * Defines short description
   **/
  @ApiModelProperty(value = "Defines short description")
  public String getShortDescription() {
    return shortDescription;
  }
  public void setShortDescription(String shortDescription) {
    this.shortDescription = shortDescription;
  }

  /**
   * Defines new product's price
   **/
  @ApiModelProperty(value = "Defines new product's price")
  public BigDecimal getPrice() {
    return price;
  }
  public void setPrice(BigDecimal price) {
    this.price = price;
  }

  /**
   * Defines product's old price
   **/
  @ApiModelProperty(value = "Defines product's old price")
  public BigDecimal getOldPrice() {
    return oldPrice;
  }
  public void setOldPrice(BigDecimal oldPrice) {
    this.oldPrice = oldPrice;
  }

  /**
   * Defines new product's special price
   **/
  @ApiModelProperty(value = "Defines new product's special price")
  public BigDecimal getSpecialPrice() {
    return specialPrice;
  }
  public void setSpecialPrice(BigDecimal specialPrice) {
    this.specialPrice = specialPrice;
  }

  /**
   * Defines the date of special price creation
   **/
  @ApiModelProperty(value = "Defines the date of special price creation")
  public String getSpriceCreate() {
    return spriceCreate;
  }
  public void setSpriceCreate(String spriceCreate) {
    this.spriceCreate = spriceCreate;
  }

  /**
   * Defines the term of special price offer duration
   **/
  @ApiModelProperty(value = "Defines the term of special price offer duration")
  public String getSpriceExpire() {
    return spriceExpire;
  }
  public void setSpriceExpire(String spriceExpire) {
    this.spriceExpire = spriceExpire;
  }

  /**
   * Defines new product's cost price
   **/
  @ApiModelProperty(value = "Defines new product's cost price")
  public BigDecimal getCostPrice() {
    return costPrice;
  }
  public void setCostPrice(BigDecimal costPrice) {
    this.costPrice = costPrice;
  }

  /**
   * Specifies product's fixed cost shipping price
   **/
  @ApiModelProperty(value = "Specifies product's fixed cost shipping price")
  public BigDecimal getFixedCostShippingPrice() {
    return fixedCostShippingPrice;
  }
  public void setFixedCostShippingPrice(BigDecimal fixedCostShippingPrice) {
    this.fixedCostShippingPrice = fixedCostShippingPrice;
  }

  /**
   * Defines new product's retail price
   **/
  @ApiModelProperty(value = "Defines new product's retail price")
  public BigDecimal getRetailPrice() {
    return retailPrice;
  }
  public void setRetailPrice(BigDecimal retailPrice) {
    this.retailPrice = retailPrice;
  }

  /**
   * Defines product's tier prices
   **/
  @ApiModelProperty(value = "Defines product's tier prices")
  public List<ProductAddTierPricesInner> getTierPrices() {
    return tierPrices;
  }
  public void setTierPrices(List<ProductAddTierPricesInner> tierPrices) {
    this.tierPrices = tierPrices;
  }

  /**
   * Defines reserve price value
   **/
  @ApiModelProperty(value = "Defines reserve price value")
  public BigDecimal getReservePrice() {
    return reservePrice;
  }
  public void setReservePrice(BigDecimal reservePrice) {
    this.reservePrice = reservePrice;
  }

  /**
   * Defines buy it now value
   **/
  @ApiModelProperty(value = "Defines buy it now value")
  public BigDecimal getBuyitnowPrice() {
    return buyitnowPrice;
  }
  public void setBuyitnowPrice(BigDecimal buyitnowPrice) {
    this.buyitnowPrice = buyitnowPrice;
  }

  /**
   * Specifies whether a tax is charged
   **/
  @ApiModelProperty(value = "Specifies whether a tax is charged")
  public Boolean getTaxable() {
    return taxable;
  }
  public void setTaxable(Boolean taxable) {
    this.taxable = taxable;
  }

  /**
   * Defines tax classes where entity has to be added
   **/
  @ApiModelProperty(value = "Defines tax classes where entity has to be added")
  public String getTaxClassId() {
    return taxClassId;
  }
  public void setTaxClassId(String taxClassId) {
    this.taxClassId = taxClassId;
  }

  /**
   * Defines product's type
   **/
  @ApiModelProperty(value = "Defines product's type")
  public String getType() {
    return type;
  }
  public void setType(String type) {
    this.type = type;
  }

  /**
   * Defines product's status
   **/
  @ApiModelProperty(value = "Defines product's status")
  public String getStatus() {
    return status;
  }
  public void setStatus(String status) {
    this.status = status;
  }

  /**
   * The human-readable label for the condition (e.g., \"New\").
   **/
  @ApiModelProperty(value = "The human-readable label for the condition (e.g., \"New\").")
  public String getCondition() {
    return condition;
  }
  public void setCondition(String condition) {
    this.condition = condition;
  }

  /**
   * Set visibility status
   **/
  @ApiModelProperty(value = "Set visibility status")
  public String getVisible() {
    return visible;
  }
  public void setVisible(String visible) {
    this.visible = visible;
  }

  /**
   * Set stock status
   **/
  @ApiModelProperty(value = "Set stock status")
  public Boolean getInStock() {
    return inStock;
  }
  public void setInStock(Boolean inStock) {
    this.inStock = inStock;
  }

  /**
   * Defines category's visibility status
   **/
  @ApiModelProperty(value = "Defines category's visibility status")
  public Boolean getAvail() {
    return avail;
  }
  public void setAvail(Boolean avail) {
    this.avail = avail;
  }

  /**
   * Allows to schedule a time in the future that the item becomes available. The value should be greater than the current date and time.
   **/
  @ApiModelProperty(value = "Allows to schedule a time in the future that the item becomes available. The value should be greater than the current date and time.")
  public String getAvailFrom() {
    return availFrom;
  }
  public void setAvailFrom(String availFrom) {
    this.availFrom = availFrom;
  }

  /**
   * A categorization for the product
   **/
  @ApiModelProperty(value = "A categorization for the product")
  public String getProductClass() {
    return productClass;
  }
  public void setProductClass(String productClass) {
    this.productClass = productClass;
  }

  /**
   * Specifies the set of visible/invisible products for users
   **/
  @ApiModelProperty(value = "Specifies the set of visible/invisible products for users")
  public Boolean getAvailableForView() {
    return availableForView;
  }
  public void setAvailableForView(Boolean availableForView) {
    this.availableForView = availableForView;
  }

  /**
   * Assign product to the stores that is specified by comma-separated stores' id
   **/
  @ApiModelProperty(value = "Assign product to the stores that is specified by comma-separated stores' id")
  public String getStoresIds() {
    return storesIds;
  }
  public void setStoresIds(String storesIds) {
    this.storesIds = storesIds;
  }

  /**
   * Defines store id where the product should be found
   **/
  @ApiModelProperty(value = "Defines store id where the product should be found")
  public String getStoreId() {
    return storeId;
  }
  public void setStoreId(String storeId) {
    this.storeId = storeId;
  }

  /**
   * Language id
   **/
  @ApiModelProperty(value = "Language id")
  public String getLangId() {
    return langId;
  }
  public void setLangId(String langId) {
    this.langId = langId;
  }

  /**
   * Defines new product's quantity
   **/
  @ApiModelProperty(value = "Defines new product's quantity")
  public BigDecimal getQuantity() {
    return quantity;
  }
  public void setQuantity(BigDecimal quantity) {
    this.quantity = quantity;
  }

  /**
   * This parameter allows to reserve/unreserve product quantity.
   **/
  @ApiModelProperty(value = "This parameter allows to reserve/unreserve product quantity.")
  public BigDecimal getReserveQuantity() {
    return reserveQuantity;
  }
  public void setReserveQuantity(BigDecimal reserveQuantity) {
    this.reserveQuantity = reserveQuantity;
  }

  /**
   * Defines inventory tracking for product
   **/
  @ApiModelProperty(value = "Defines inventory tracking for product")
  public Boolean getManageStock() {
    return manageStock;
  }
  public void setManageStock(Boolean manageStock) {
    this.manageStock = manageStock;
  }

  /**
   * Set backorder status
   **/
  @ApiModelProperty(value = "Set backorder status")
  public String getBackorderStatus() {
    return backorderStatus;
  }
  public void setBackorderStatus(String backorderStatus) {
    this.backorderStatus = backorderStatus;
  }

  /**
   * Defines the incremental changes in product quantity
   **/
  @ApiModelProperty(value = "Defines the incremental changes in product quantity")
  public BigDecimal getIncreaseQuantity() {
    return increaseQuantity;
  }
  public void setIncreaseQuantity(BigDecimal increaseQuantity) {
    this.increaseQuantity = increaseQuantity;
  }

  /**
   * Defines the decrement changes in product quantity
   **/
  @ApiModelProperty(value = "Defines the decrement changes in product quantity")
  public BigDecimal getReduceQuantity() {
    return reduceQuantity;
  }
  public void setReduceQuantity(BigDecimal reduceQuantity) {
    this.reduceQuantity = reduceQuantity;
  }

  /**
   * Specify the quantity threshold below which the product is considered low in stock
   **/
  @ApiModelProperty(value = "Specify the quantity threshold below which the product is considered low in stock")
  public BigDecimal getLowStockThreshold() {
    return lowStockThreshold;
  }
  public void setLowStockThreshold(BigDecimal lowStockThreshold) {
    this.lowStockThreshold = lowStockThreshold;
  }

  /**
   * This parameter is used for selecting a warehouse where you need to set/modify a product quantity.
   **/
  @ApiModelProperty(value = "This parameter is used for selecting a warehouse where you need to set/modify a product quantity.")
  public String getWarehouseId() {
    return warehouseId;
  }
  public void setWarehouseId(String warehouseId) {
    this.warehouseId = warehouseId;
  }

  /**
   * Weight
   **/
  @ApiModelProperty(value = "Weight")
  public BigDecimal getWeight() {
    return weight;
  }
  public void setWeight(BigDecimal weight) {
    this.weight = weight;
  }

  /**
   * Weight Unit
   **/
  @ApiModelProperty(value = "Weight Unit")
  public String getWeightUnit() {
    return weightUnit;
  }
  public void setWeightUnit(String weightUnit) {
    this.weightUnit = weightUnit;
  }

  /**
   * Defines product's height
   **/
  @ApiModelProperty(value = "Defines product's height")
  public BigDecimal getHeight() {
    return height;
  }
  public void setHeight(BigDecimal height) {
    this.height = height;
  }

  /**
   * Defines product's length
   **/
  @ApiModelProperty(value = "Defines product's length")
  public BigDecimal getLength() {
    return length;
  }
  public void setLength(BigDecimal length) {
    this.length = length;
  }

  /**
   * Defines product's width
   **/
  @ApiModelProperty(value = "Defines product's width")
  public BigDecimal getWidth() {
    return width;
  }
  public void setWidth(BigDecimal width) {
    this.width = width;
  }

  /**
   * Weight Unit
   **/
  @ApiModelProperty(value = "Weight Unit")
  public String getDimensionsUnit() {
    return dimensionsUnit;
  }
  public void setDimensionsUnit(String dimensionsUnit) {
    this.dimensionsUnit = dimensionsUnit;
  }

  /**
   * Defines whether the product is virtual
   **/
  @ApiModelProperty(value = "Defines whether the product is virtual")
  public Boolean getIsVirtual() {
    return isVirtual;
  }
  public void setIsVirtual(Boolean isVirtual) {
    this.isVirtual = isVirtual;
  }

  /**
   * Specifies product free shipping flag that has to be updated
   **/
  @ApiModelProperty(value = "Specifies product free shipping flag that has to be updated")
  public Boolean getIsFreeShipping() {
    return isFreeShipping;
  }
  public void setIsFreeShipping(Boolean isFreeShipping) {
    this.isFreeShipping = isFreeShipping;
  }

  /**
   * Global Trade Item Number. An GTIN is an identifier for trade items.
   **/
  @ApiModelProperty(value = "Global Trade Item Number. An GTIN is an identifier for trade items.")
  public String getGtin() {
    return gtin;
  }
  public void setGtin(String gtin) {
    this.gtin = gtin;
  }

  /**
   * Universal Product Code. A UPC (UPC-A) is a commonly used identifer for many different products.
   **/
  @ApiModelProperty(value = "Universal Product Code. A UPC (UPC-A) is a commonly used identifer for many different products.")
  public String getUpc() {
    return upc;
  }
  public void setUpc(String upc) {
    this.upc = upc;
  }

  /**
   * Manufacturer Part Number. A MPN is an identifier of a particular part design or material used.
   **/
  @ApiModelProperty(value = "Manufacturer Part Number. A MPN is an identifier of a particular part design or material used.")
  public String getMpn() {
    return mpn;
  }
  public void setMpn(String mpn) {
    this.mpn = mpn;
  }

  /**
   * European Article Number. An EAN is a unique 8 or 13-digit identifier that many industries (such as book publishers) use to identify products.
   **/
  @ApiModelProperty(value = "European Article Number. An EAN is a unique 8 or 13-digit identifier that many industries (such as book publishers) use to identify products.")
  public String getEan() {
    return ean;
  }
  public void setEan(String ean) {
    this.ean = ean;
  }

  /**
   * International Standard Book Number. An ISBN is a unique identifier for books.
   **/
  @ApiModelProperty(value = "International Standard Book Number. An ISBN is a unique identifier for books.")
  public String getIsbn() {
    return isbn;
  }
  public void setIsbn(String isbn) {
    this.isbn = isbn;
  }

  /**
   * A barcode is a unique code composed of numbers used as a product identifier.
   **/
  @ApiModelProperty(value = "A barcode is a unique code composed of numbers used as a product identifier.")
  public String getBarcode() {
    return barcode;
  }
  public void setBarcode(String barcode) {
    this.barcode = barcode;
  }

  /**
   * Defines product's manufacturer
   **/
  @ApiModelProperty(value = "Defines product's manufacturer")
  public String getManufacturer() {
    return manufacturer;
  }
  public void setManufacturer(String manufacturer) {
    this.manufacturer = manufacturer;
  }

  /**
   * Defines product's manufacturer by manufacturer_id
   **/
  @ApiModelProperty(value = "Defines product's manufacturer by manufacturer_id")
  public String getManufacturerId() {
    return manufacturerId;
  }
  public void setManufacturerId(String manufacturerId) {
    this.manufacturerId = manufacturerId;
  }

  /**
   * Defines product add that is specified by comma-separated categories id
   **/
  @ApiModelProperty(value = "Defines product add that is specified by comma-separated categories id")
  public String getCategoriesIds() {
    return categoriesIds;
  }
  public void setCategoriesIds(String categoriesIds) {
    this.categoriesIds = categoriesIds;
  }

  /**
   * Defines product related products ids that has to be updated
   **/
  @ApiModelProperty(value = "Defines product related products ids that has to be updated")
  public String getRelatedProductsIds() {
    return relatedProductsIds;
  }
  public void setRelatedProductsIds(String relatedProductsIds) {
    this.relatedProductsIds = relatedProductsIds;
  }

  /**
   * Defines product up-sell products ids that has to be updated
   **/
  @ApiModelProperty(value = "Defines product up-sell products ids that has to be updated")
  public String getUpSellProductsIds() {
    return upSellProductsIds;
  }
  public void setUpSellProductsIds(String upSellProductsIds) {
    this.upSellProductsIds = upSellProductsIds;
  }

  /**
   * Defines product cross-sells products ids that has to be updated
   **/
  @ApiModelProperty(value = "Defines product cross-sells products ids that has to be updated")
  public String getCrossSellProductsIds() {
    return crossSellProductsIds;
  }
  public void setCrossSellProductsIds(String crossSellProductsIds) {
    this.crossSellProductsIds = crossSellProductsIds;
  }

  /**
   * Defines unique meta title for each entity
   **/
  @ApiModelProperty(value = "Defines unique meta title for each entity")
  public String getMetaTitle() {
    return metaTitle;
  }
  public void setMetaTitle(String metaTitle) {
    this.metaTitle = metaTitle;
  }

  /**
   * Defines unique meta keywords for each entity
   **/
  @ApiModelProperty(value = "Defines unique meta keywords for each entity")
  public String getMetaKeywords() {
    return metaKeywords;
  }
  public void setMetaKeywords(String metaKeywords) {
    this.metaKeywords = metaKeywords;
  }

  /**
   * Defines unique meta description of a entity
   **/
  @ApiModelProperty(value = "Defines unique meta description of a entity")
  public String getMetaDescription() {
    return metaDescription;
  }
  public void setMetaDescription(String metaDescription) {
    this.metaDescription = metaDescription;
  }

  /**
   * Defines unique URL for SEO
   **/
  @ApiModelProperty(value = "Defines unique URL for SEO")
  public String getSeoUrl() {
    return seoUrl;
  }
  public void setSeoUrl(String seoUrl) {
    this.seoUrl = seoUrl;
  }

  /**
   * Defines unique search keywords
   **/
  @ApiModelProperty(value = "Defines unique search keywords")
  public String getSearchKeywords() {
    return searchKeywords;
  }
  public void setSearchKeywords(String searchKeywords) {
    this.searchKeywords = searchKeywords;
  }

  /**
   * Product tags
   **/
  @ApiModelProperty(value = "Product tags")
  public String getTags() {
    return tags;
  }
  public void setTags(String tags) {
    this.tags = tags;
  }

  /**
   * The delivery promise that applies to offer
   **/
  @ApiModelProperty(value = "The delivery promise that applies to offer")
  public String getDeliveryCode() {
    return deliveryCode;
  }
  public void setDeliveryCode(String deliveryCode) {
    this.deliveryCode = deliveryCode;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ProductAddPackageDetails getPackageDetails() {
    return packageDetails;
  }
  public void setPackageDetails(ProductAddPackageDetails packageDetails) {
    this.packageDetails = packageDetails;
  }

  /**
   * The country where the inventory item was made
   **/
  @ApiModelProperty(value = "The country where the inventory item was made")
  public String getCountryOfOrigin() {
    return countryOfOrigin;
  }
  public void setCountryOfOrigin(String countryOfOrigin) {
    this.countryOfOrigin = countryOfOrigin;
  }

  /**
   * Harmonized System Code. An HSC is a 6-digit identifier that allows participating countries to classify traded goods on a common basis for customs purposes
   **/
  @ApiModelProperty(value = "Harmonized System Code. An HSC is a 6-digit identifier that allows participating countries to classify traded goods on a common basis for customs purposes")
  public String getHarmonizedSystemCode() {
    return harmonizedSystemCode;
  }
  public void setHarmonizedSystemCode(String harmonizedSystemCode) {
    this.harmonizedSystemCode = harmonizedSystemCode;
  }

  /**
   * The numeric ID of the shipping template associated with the products in Etsy. You can find possible values in the \"cart.info\" API method response, in the field shipping_zones[]->id.
   **/
  @ApiModelProperty(value = "The numeric ID of the shipping template associated with the products in Etsy. You can find possible values in the \"cart.info\" API method response, in the field shipping_zones[]->id.")
  public Integer getShippingTemplateId() {
    return shippingTemplateId;
  }
  public void setShippingTemplateId(Integer shippingTemplateId) {
    this.shippingTemplateId = shippingTemplateId;
  }

  /**
   * An enumerated string for the era in which the maker made the product.
   **/
  @ApiModelProperty(value = "An enumerated string for the era in which the maker made the product.")
  public String getWhenMade() {
    return whenMade;
  }
  public void setWhenMade(String whenMade) {
    this.whenMade = whenMade;
  }

  /**
   * If true, it indicates the product as a supply, otherwise it indicates that it is a finished product.
   **/
  @ApiModelProperty(value = "If true, it indicates the product as a supply, otherwise it indicates that it is a finished product.")
  public Boolean getIsSupply() {
    return isSupply;
  }
  public void setIsSupply(Boolean isSupply) {
    this.isSupply = isSupply;
  }

  /**
   * Defines whether the product is downloadable
   **/
  @ApiModelProperty(value = "Defines whether the product is downloadable")
  public Boolean getDownloadable() {
    return downloadable;
  }
  public void setDownloadable(Boolean downloadable) {
    this.downloadable = downloadable;
  }

  /**
   * A list of material strings for materials used in the product.
   **/
  @ApiModelProperty(value = "A list of material strings for materials used in the product.")
  public List<String> getMaterials() {
    return materials;
  }
  public void setMaterials(List<String> materials) {
    this.materials = materials;
  }

  /**
   * When true, automatically renews a listing upon its expiration.
   **/
  @ApiModelProperty(value = "When true, automatically renews a listing upon its expiration.")
  public Boolean getAutoRenew() {
    return autoRenew;
  }
  public void setAutoRenew(Boolean autoRenew) {
    this.autoRenew = autoRenew;
  }

  /**
   * Set whether the product on sale
   **/
  @ApiModelProperty(value = "Set whether the product on sale")
  public Boolean getOnSale() {
    return onSale;
  }
  public void setOnSale(Boolean onSale) {
    this.onSale = onSale;
  }

  /**
   * Defines product production partner ids that has to be updated
   **/
  @ApiModelProperty(value = "Defines product production partner ids that has to be updated")
  public String getProductionPartnerIds() {
    return productionPartnerIds;
  }
  public void setProductionPartnerIds(String productionPartnerIds) {
    this.productionPartnerIds = productionPartnerIds;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ProductAddManufacturerInfo getManufacturerInfo() {
    return manufacturerInfo;
  }
  public void setManufacturerInfo(ProductAddManufacturerInfo manufacturerInfo) {
    this.manufacturerInfo = manufacturerInfo;
  }

  /**
   * Report request id
   **/
  @ApiModelProperty(value = "Report request id")
  public String getReportRequestId() {
    return reportRequestId;
  }
  public void setReportRequestId(String reportRequestId) {
    this.reportRequestId = reportRequestId;
  }

  /**
   * Disable report cache for current request
   **/
  @ApiModelProperty(value = "Disable report cache for current request")
  public Boolean getDisableReportCache() {
    return disableReportCache;
  }
  public void setDisableReportCache(Boolean disableReportCache) {
    this.disableReportCache = disableReportCache;
  }

  /**
   * Is reindex required
   **/
  @ApiModelProperty(value = "Is reindex required")
  public Boolean getReindex() {
    return reindex;
  }
  public void setReindex(Boolean reindex) {
    this.reindex = reindex;
  }

  /**
   * Is cache clear required
   **/
  @ApiModelProperty(value = "Is cache clear required")
  public Boolean getClearCache() {
    return clearCache;
  }
  public void setClearCache(Boolean clearCache) {
    this.clearCache = clearCache;
  }

  /**
   * Disable or enable check process status. Please note that the response will be slower due to additional requests to the store.
   **/
  @ApiModelProperty(value = "Disable or enable check process status. Please note that the response will be slower due to additional requests to the store.")
  public Boolean getCheckProcessStatus() {
    return checkProcessStatus;
  }
  public void setCheckProcessStatus(Boolean checkProcessStatus) {
    this.checkProcessStatus = checkProcessStatus;
  }

  /**
   * An array of Item Specific Name/Value pairs used by the seller to provide descriptive details of an item in a structured manner.         The list of possible specifications can be obtained using the category.info method (additional_fields->product_specifics).         <b>The structure of the parameter is different for specific platforms.</b>
   **/
  @ApiModelProperty(value = "An array of Item Specific Name/Value pairs used by the seller to provide descriptive details of an item in a structured manner.         The list of possible specifications can be obtained using the category.info method (additional_fields->product_specifics).         <b>The structure of the parameter is different for specific platforms.</b>")
  public List<ProductAddSpecificsInner> getSpecifics() {
    return specifics;
  }
  public void setSpecifics(List<ProductAddSpecificsInner> specifics) {
    this.specifics = specifics;
  }

  /**
   * Add Shop Section Id
   **/
  @ApiModelProperty(value = "Add Shop Section Id")
  public Integer getShopSectionId() {
    return shopSectionId;
  }
  public void setShopSectionId(Integer shopSectionId) {
    this.shopSectionId = shopSectionId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ProductAddPersonalizationDetails getPersonalizationDetails() {
    return personalizationDetails;
  }
  public void setPersonalizationDetails(ProductAddPersonalizationDetails personalizationDetails) {
    this.personalizationDetails = personalizationDetails;
  }

  /**
   * String containing the JSON representation of the supplied data
   **/
  @ApiModelProperty(value = "String containing the JSON representation of the supplied data")
  public String getMarketplaceItemProperties() {
    return marketplaceItemProperties;
  }
  public void setMarketplaceItemProperties(String marketplaceItemProperties) {
    this.marketplaceItemProperties = marketplaceItemProperties;
  }

  /**
   * The minimum quantity an order must contain, to be eligible to purchase this product.
   **/
  @ApiModelProperty(value = "The minimum quantity an order must contain, to be eligible to purchase this product.")
  public BigDecimal getMinOrderQuantity() {
    return minOrderQuantity;
  }
  public void setMinOrderQuantity(BigDecimal minOrderQuantity) {
    this.minOrderQuantity = minOrderQuantity;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductUpdate productUpdate = (ProductUpdate) o;
    return (this.id == null ? productUpdate.id == null : this.id.equals(productUpdate.id)) &&
        (this.model == null ? productUpdate.model == null : this.model.equals(productUpdate.model)) &&
        (this.sku == null ? productUpdate.sku == null : this.sku.equals(productUpdate.sku)) &&
        (this.name == null ? productUpdate.name == null : this.name.equals(productUpdate.name)) &&
        (this.description == null ? productUpdate.description == null : this.description.equals(productUpdate.description)) &&
        (this.shortDescription == null ? productUpdate.shortDescription == null : this.shortDescription.equals(productUpdate.shortDescription)) &&
        (this.price == null ? productUpdate.price == null : this.price.equals(productUpdate.price)) &&
        (this.oldPrice == null ? productUpdate.oldPrice == null : this.oldPrice.equals(productUpdate.oldPrice)) &&
        (this.specialPrice == null ? productUpdate.specialPrice == null : this.specialPrice.equals(productUpdate.specialPrice)) &&
        (this.spriceCreate == null ? productUpdate.spriceCreate == null : this.spriceCreate.equals(productUpdate.spriceCreate)) &&
        (this.spriceExpire == null ? productUpdate.spriceExpire == null : this.spriceExpire.equals(productUpdate.spriceExpire)) &&
        (this.costPrice == null ? productUpdate.costPrice == null : this.costPrice.equals(productUpdate.costPrice)) &&
        (this.fixedCostShippingPrice == null ? productUpdate.fixedCostShippingPrice == null : this.fixedCostShippingPrice.equals(productUpdate.fixedCostShippingPrice)) &&
        (this.retailPrice == null ? productUpdate.retailPrice == null : this.retailPrice.equals(productUpdate.retailPrice)) &&
        (this.tierPrices == null ? productUpdate.tierPrices == null : this.tierPrices.equals(productUpdate.tierPrices)) &&
        (this.reservePrice == null ? productUpdate.reservePrice == null : this.reservePrice.equals(productUpdate.reservePrice)) &&
        (this.buyitnowPrice == null ? productUpdate.buyitnowPrice == null : this.buyitnowPrice.equals(productUpdate.buyitnowPrice)) &&
        (this.taxable == null ? productUpdate.taxable == null : this.taxable.equals(productUpdate.taxable)) &&
        (this.taxClassId == null ? productUpdate.taxClassId == null : this.taxClassId.equals(productUpdate.taxClassId)) &&
        (this.type == null ? productUpdate.type == null : this.type.equals(productUpdate.type)) &&
        (this.status == null ? productUpdate.status == null : this.status.equals(productUpdate.status)) &&
        (this.condition == null ? productUpdate.condition == null : this.condition.equals(productUpdate.condition)) &&
        (this.visible == null ? productUpdate.visible == null : this.visible.equals(productUpdate.visible)) &&
        (this.inStock == null ? productUpdate.inStock == null : this.inStock.equals(productUpdate.inStock)) &&
        (this.avail == null ? productUpdate.avail == null : this.avail.equals(productUpdate.avail)) &&
        (this.availFrom == null ? productUpdate.availFrom == null : this.availFrom.equals(productUpdate.availFrom)) &&
        (this.productClass == null ? productUpdate.productClass == null : this.productClass.equals(productUpdate.productClass)) &&
        (this.availableForView == null ? productUpdate.availableForView == null : this.availableForView.equals(productUpdate.availableForView)) &&
        (this.storesIds == null ? productUpdate.storesIds == null : this.storesIds.equals(productUpdate.storesIds)) &&
        (this.storeId == null ? productUpdate.storeId == null : this.storeId.equals(productUpdate.storeId)) &&
        (this.langId == null ? productUpdate.langId == null : this.langId.equals(productUpdate.langId)) &&
        (this.quantity == null ? productUpdate.quantity == null : this.quantity.equals(productUpdate.quantity)) &&
        (this.reserveQuantity == null ? productUpdate.reserveQuantity == null : this.reserveQuantity.equals(productUpdate.reserveQuantity)) &&
        (this.manageStock == null ? productUpdate.manageStock == null : this.manageStock.equals(productUpdate.manageStock)) &&
        (this.backorderStatus == null ? productUpdate.backorderStatus == null : this.backorderStatus.equals(productUpdate.backorderStatus)) &&
        (this.increaseQuantity == null ? productUpdate.increaseQuantity == null : this.increaseQuantity.equals(productUpdate.increaseQuantity)) &&
        (this.reduceQuantity == null ? productUpdate.reduceQuantity == null : this.reduceQuantity.equals(productUpdate.reduceQuantity)) &&
        (this.lowStockThreshold == null ? productUpdate.lowStockThreshold == null : this.lowStockThreshold.equals(productUpdate.lowStockThreshold)) &&
        (this.warehouseId == null ? productUpdate.warehouseId == null : this.warehouseId.equals(productUpdate.warehouseId)) &&
        (this.weight == null ? productUpdate.weight == null : this.weight.equals(productUpdate.weight)) &&
        (this.weightUnit == null ? productUpdate.weightUnit == null : this.weightUnit.equals(productUpdate.weightUnit)) &&
        (this.height == null ? productUpdate.height == null : this.height.equals(productUpdate.height)) &&
        (this.length == null ? productUpdate.length == null : this.length.equals(productUpdate.length)) &&
        (this.width == null ? productUpdate.width == null : this.width.equals(productUpdate.width)) &&
        (this.dimensionsUnit == null ? productUpdate.dimensionsUnit == null : this.dimensionsUnit.equals(productUpdate.dimensionsUnit)) &&
        (this.isVirtual == null ? productUpdate.isVirtual == null : this.isVirtual.equals(productUpdate.isVirtual)) &&
        (this.isFreeShipping == null ? productUpdate.isFreeShipping == null : this.isFreeShipping.equals(productUpdate.isFreeShipping)) &&
        (this.gtin == null ? productUpdate.gtin == null : this.gtin.equals(productUpdate.gtin)) &&
        (this.upc == null ? productUpdate.upc == null : this.upc.equals(productUpdate.upc)) &&
        (this.mpn == null ? productUpdate.mpn == null : this.mpn.equals(productUpdate.mpn)) &&
        (this.ean == null ? productUpdate.ean == null : this.ean.equals(productUpdate.ean)) &&
        (this.isbn == null ? productUpdate.isbn == null : this.isbn.equals(productUpdate.isbn)) &&
        (this.barcode == null ? productUpdate.barcode == null : this.barcode.equals(productUpdate.barcode)) &&
        (this.manufacturer == null ? productUpdate.manufacturer == null : this.manufacturer.equals(productUpdate.manufacturer)) &&
        (this.manufacturerId == null ? productUpdate.manufacturerId == null : this.manufacturerId.equals(productUpdate.manufacturerId)) &&
        (this.categoriesIds == null ? productUpdate.categoriesIds == null : this.categoriesIds.equals(productUpdate.categoriesIds)) &&
        (this.relatedProductsIds == null ? productUpdate.relatedProductsIds == null : this.relatedProductsIds.equals(productUpdate.relatedProductsIds)) &&
        (this.upSellProductsIds == null ? productUpdate.upSellProductsIds == null : this.upSellProductsIds.equals(productUpdate.upSellProductsIds)) &&
        (this.crossSellProductsIds == null ? productUpdate.crossSellProductsIds == null : this.crossSellProductsIds.equals(productUpdate.crossSellProductsIds)) &&
        (this.metaTitle == null ? productUpdate.metaTitle == null : this.metaTitle.equals(productUpdate.metaTitle)) &&
        (this.metaKeywords == null ? productUpdate.metaKeywords == null : this.metaKeywords.equals(productUpdate.metaKeywords)) &&
        (this.metaDescription == null ? productUpdate.metaDescription == null : this.metaDescription.equals(productUpdate.metaDescription)) &&
        (this.seoUrl == null ? productUpdate.seoUrl == null : this.seoUrl.equals(productUpdate.seoUrl)) &&
        (this.searchKeywords == null ? productUpdate.searchKeywords == null : this.searchKeywords.equals(productUpdate.searchKeywords)) &&
        (this.tags == null ? productUpdate.tags == null : this.tags.equals(productUpdate.tags)) &&
        (this.deliveryCode == null ? productUpdate.deliveryCode == null : this.deliveryCode.equals(productUpdate.deliveryCode)) &&
        (this.packageDetails == null ? productUpdate.packageDetails == null : this.packageDetails.equals(productUpdate.packageDetails)) &&
        (this.countryOfOrigin == null ? productUpdate.countryOfOrigin == null : this.countryOfOrigin.equals(productUpdate.countryOfOrigin)) &&
        (this.harmonizedSystemCode == null ? productUpdate.harmonizedSystemCode == null : this.harmonizedSystemCode.equals(productUpdate.harmonizedSystemCode)) &&
        (this.shippingTemplateId == null ? productUpdate.shippingTemplateId == null : this.shippingTemplateId.equals(productUpdate.shippingTemplateId)) &&
        (this.whenMade == null ? productUpdate.whenMade == null : this.whenMade.equals(productUpdate.whenMade)) &&
        (this.isSupply == null ? productUpdate.isSupply == null : this.isSupply.equals(productUpdate.isSupply)) &&
        (this.downloadable == null ? productUpdate.downloadable == null : this.downloadable.equals(productUpdate.downloadable)) &&
        (this.materials == null ? productUpdate.materials == null : this.materials.equals(productUpdate.materials)) &&
        (this.autoRenew == null ? productUpdate.autoRenew == null : this.autoRenew.equals(productUpdate.autoRenew)) &&
        (this.onSale == null ? productUpdate.onSale == null : this.onSale.equals(productUpdate.onSale)) &&
        (this.productionPartnerIds == null ? productUpdate.productionPartnerIds == null : this.productionPartnerIds.equals(productUpdate.productionPartnerIds)) &&
        (this.manufacturerInfo == null ? productUpdate.manufacturerInfo == null : this.manufacturerInfo.equals(productUpdate.manufacturerInfo)) &&
        (this.reportRequestId == null ? productUpdate.reportRequestId == null : this.reportRequestId.equals(productUpdate.reportRequestId)) &&
        (this.disableReportCache == null ? productUpdate.disableReportCache == null : this.disableReportCache.equals(productUpdate.disableReportCache)) &&
        (this.reindex == null ? productUpdate.reindex == null : this.reindex.equals(productUpdate.reindex)) &&
        (this.clearCache == null ? productUpdate.clearCache == null : this.clearCache.equals(productUpdate.clearCache)) &&
        (this.checkProcessStatus == null ? productUpdate.checkProcessStatus == null : this.checkProcessStatus.equals(productUpdate.checkProcessStatus)) &&
        (this.specifics == null ? productUpdate.specifics == null : this.specifics.equals(productUpdate.specifics)) &&
        (this.shopSectionId == null ? productUpdate.shopSectionId == null : this.shopSectionId.equals(productUpdate.shopSectionId)) &&
        (this.personalizationDetails == null ? productUpdate.personalizationDetails == null : this.personalizationDetails.equals(productUpdate.personalizationDetails)) &&
        (this.marketplaceItemProperties == null ? productUpdate.marketplaceItemProperties == null : this.marketplaceItemProperties.equals(productUpdate.marketplaceItemProperties)) &&
        (this.minOrderQuantity == null ? productUpdate.minOrderQuantity == null : this.minOrderQuantity.equals(productUpdate.minOrderQuantity));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.model == null ? 0: this.model.hashCode());
    result = 31 * result + (this.sku == null ? 0: this.sku.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.description == null ? 0: this.description.hashCode());
    result = 31 * result + (this.shortDescription == null ? 0: this.shortDescription.hashCode());
    result = 31 * result + (this.price == null ? 0: this.price.hashCode());
    result = 31 * result + (this.oldPrice == null ? 0: this.oldPrice.hashCode());
    result = 31 * result + (this.specialPrice == null ? 0: this.specialPrice.hashCode());
    result = 31 * result + (this.spriceCreate == null ? 0: this.spriceCreate.hashCode());
    result = 31 * result + (this.spriceExpire == null ? 0: this.spriceExpire.hashCode());
    result = 31 * result + (this.costPrice == null ? 0: this.costPrice.hashCode());
    result = 31 * result + (this.fixedCostShippingPrice == null ? 0: this.fixedCostShippingPrice.hashCode());
    result = 31 * result + (this.retailPrice == null ? 0: this.retailPrice.hashCode());
    result = 31 * result + (this.tierPrices == null ? 0: this.tierPrices.hashCode());
    result = 31 * result + (this.reservePrice == null ? 0: this.reservePrice.hashCode());
    result = 31 * result + (this.buyitnowPrice == null ? 0: this.buyitnowPrice.hashCode());
    result = 31 * result + (this.taxable == null ? 0: this.taxable.hashCode());
    result = 31 * result + (this.taxClassId == null ? 0: this.taxClassId.hashCode());
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    result = 31 * result + (this.status == null ? 0: this.status.hashCode());
    result = 31 * result + (this.condition == null ? 0: this.condition.hashCode());
    result = 31 * result + (this.visible == null ? 0: this.visible.hashCode());
    result = 31 * result + (this.inStock == null ? 0: this.inStock.hashCode());
    result = 31 * result + (this.avail == null ? 0: this.avail.hashCode());
    result = 31 * result + (this.availFrom == null ? 0: this.availFrom.hashCode());
    result = 31 * result + (this.productClass == null ? 0: this.productClass.hashCode());
    result = 31 * result + (this.availableForView == null ? 0: this.availableForView.hashCode());
    result = 31 * result + (this.storesIds == null ? 0: this.storesIds.hashCode());
    result = 31 * result + (this.storeId == null ? 0: this.storeId.hashCode());
    result = 31 * result + (this.langId == null ? 0: this.langId.hashCode());
    result = 31 * result + (this.quantity == null ? 0: this.quantity.hashCode());
    result = 31 * result + (this.reserveQuantity == null ? 0: this.reserveQuantity.hashCode());
    result = 31 * result + (this.manageStock == null ? 0: this.manageStock.hashCode());
    result = 31 * result + (this.backorderStatus == null ? 0: this.backorderStatus.hashCode());
    result = 31 * result + (this.increaseQuantity == null ? 0: this.increaseQuantity.hashCode());
    result = 31 * result + (this.reduceQuantity == null ? 0: this.reduceQuantity.hashCode());
    result = 31 * result + (this.lowStockThreshold == null ? 0: this.lowStockThreshold.hashCode());
    result = 31 * result + (this.warehouseId == null ? 0: this.warehouseId.hashCode());
    result = 31 * result + (this.weight == null ? 0: this.weight.hashCode());
    result = 31 * result + (this.weightUnit == null ? 0: this.weightUnit.hashCode());
    result = 31 * result + (this.height == null ? 0: this.height.hashCode());
    result = 31 * result + (this.length == null ? 0: this.length.hashCode());
    result = 31 * result + (this.width == null ? 0: this.width.hashCode());
    result = 31 * result + (this.dimensionsUnit == null ? 0: this.dimensionsUnit.hashCode());
    result = 31 * result + (this.isVirtual == null ? 0: this.isVirtual.hashCode());
    result = 31 * result + (this.isFreeShipping == null ? 0: this.isFreeShipping.hashCode());
    result = 31 * result + (this.gtin == null ? 0: this.gtin.hashCode());
    result = 31 * result + (this.upc == null ? 0: this.upc.hashCode());
    result = 31 * result + (this.mpn == null ? 0: this.mpn.hashCode());
    result = 31 * result + (this.ean == null ? 0: this.ean.hashCode());
    result = 31 * result + (this.isbn == null ? 0: this.isbn.hashCode());
    result = 31 * result + (this.barcode == null ? 0: this.barcode.hashCode());
    result = 31 * result + (this.manufacturer == null ? 0: this.manufacturer.hashCode());
    result = 31 * result + (this.manufacturerId == null ? 0: this.manufacturerId.hashCode());
    result = 31 * result + (this.categoriesIds == null ? 0: this.categoriesIds.hashCode());
    result = 31 * result + (this.relatedProductsIds == null ? 0: this.relatedProductsIds.hashCode());
    result = 31 * result + (this.upSellProductsIds == null ? 0: this.upSellProductsIds.hashCode());
    result = 31 * result + (this.crossSellProductsIds == null ? 0: this.crossSellProductsIds.hashCode());
    result = 31 * result + (this.metaTitle == null ? 0: this.metaTitle.hashCode());
    result = 31 * result + (this.metaKeywords == null ? 0: this.metaKeywords.hashCode());
    result = 31 * result + (this.metaDescription == null ? 0: this.metaDescription.hashCode());
    result = 31 * result + (this.seoUrl == null ? 0: this.seoUrl.hashCode());
    result = 31 * result + (this.searchKeywords == null ? 0: this.searchKeywords.hashCode());
    result = 31 * result + (this.tags == null ? 0: this.tags.hashCode());
    result = 31 * result + (this.deliveryCode == null ? 0: this.deliveryCode.hashCode());
    result = 31 * result + (this.packageDetails == null ? 0: this.packageDetails.hashCode());
    result = 31 * result + (this.countryOfOrigin == null ? 0: this.countryOfOrigin.hashCode());
    result = 31 * result + (this.harmonizedSystemCode == null ? 0: this.harmonizedSystemCode.hashCode());
    result = 31 * result + (this.shippingTemplateId == null ? 0: this.shippingTemplateId.hashCode());
    result = 31 * result + (this.whenMade == null ? 0: this.whenMade.hashCode());
    result = 31 * result + (this.isSupply == null ? 0: this.isSupply.hashCode());
    result = 31 * result + (this.downloadable == null ? 0: this.downloadable.hashCode());
    result = 31 * result + (this.materials == null ? 0: this.materials.hashCode());
    result = 31 * result + (this.autoRenew == null ? 0: this.autoRenew.hashCode());
    result = 31 * result + (this.onSale == null ? 0: this.onSale.hashCode());
    result = 31 * result + (this.productionPartnerIds == null ? 0: this.productionPartnerIds.hashCode());
    result = 31 * result + (this.manufacturerInfo == null ? 0: this.manufacturerInfo.hashCode());
    result = 31 * result + (this.reportRequestId == null ? 0: this.reportRequestId.hashCode());
    result = 31 * result + (this.disableReportCache == null ? 0: this.disableReportCache.hashCode());
    result = 31 * result + (this.reindex == null ? 0: this.reindex.hashCode());
    result = 31 * result + (this.clearCache == null ? 0: this.clearCache.hashCode());
    result = 31 * result + (this.checkProcessStatus == null ? 0: this.checkProcessStatus.hashCode());
    result = 31 * result + (this.specifics == null ? 0: this.specifics.hashCode());
    result = 31 * result + (this.shopSectionId == null ? 0: this.shopSectionId.hashCode());
    result = 31 * result + (this.personalizationDetails == null ? 0: this.personalizationDetails.hashCode());
    result = 31 * result + (this.marketplaceItemProperties == null ? 0: this.marketplaceItemProperties.hashCode());
    result = 31 * result + (this.minOrderQuantity == null ? 0: this.minOrderQuantity.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductUpdate {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  model: ").append(model).append("\n");
    sb.append("  sku: ").append(sku).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  description: ").append(description).append("\n");
    sb.append("  shortDescription: ").append(shortDescription).append("\n");
    sb.append("  price: ").append(price).append("\n");
    sb.append("  oldPrice: ").append(oldPrice).append("\n");
    sb.append("  specialPrice: ").append(specialPrice).append("\n");
    sb.append("  spriceCreate: ").append(spriceCreate).append("\n");
    sb.append("  spriceExpire: ").append(spriceExpire).append("\n");
    sb.append("  costPrice: ").append(costPrice).append("\n");
    sb.append("  fixedCostShippingPrice: ").append(fixedCostShippingPrice).append("\n");
    sb.append("  retailPrice: ").append(retailPrice).append("\n");
    sb.append("  tierPrices: ").append(tierPrices).append("\n");
    sb.append("  reservePrice: ").append(reservePrice).append("\n");
    sb.append("  buyitnowPrice: ").append(buyitnowPrice).append("\n");
    sb.append("  taxable: ").append(taxable).append("\n");
    sb.append("  taxClassId: ").append(taxClassId).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("  status: ").append(status).append("\n");
    sb.append("  condition: ").append(condition).append("\n");
    sb.append("  visible: ").append(visible).append("\n");
    sb.append("  inStock: ").append(inStock).append("\n");
    sb.append("  avail: ").append(avail).append("\n");
    sb.append("  availFrom: ").append(availFrom).append("\n");
    sb.append("  productClass: ").append(productClass).append("\n");
    sb.append("  availableForView: ").append(availableForView).append("\n");
    sb.append("  storesIds: ").append(storesIds).append("\n");
    sb.append("  storeId: ").append(storeId).append("\n");
    sb.append("  langId: ").append(langId).append("\n");
    sb.append("  quantity: ").append(quantity).append("\n");
    sb.append("  reserveQuantity: ").append(reserveQuantity).append("\n");
    sb.append("  manageStock: ").append(manageStock).append("\n");
    sb.append("  backorderStatus: ").append(backorderStatus).append("\n");
    sb.append("  increaseQuantity: ").append(increaseQuantity).append("\n");
    sb.append("  reduceQuantity: ").append(reduceQuantity).append("\n");
    sb.append("  lowStockThreshold: ").append(lowStockThreshold).append("\n");
    sb.append("  warehouseId: ").append(warehouseId).append("\n");
    sb.append("  weight: ").append(weight).append("\n");
    sb.append("  weightUnit: ").append(weightUnit).append("\n");
    sb.append("  height: ").append(height).append("\n");
    sb.append("  length: ").append(length).append("\n");
    sb.append("  width: ").append(width).append("\n");
    sb.append("  dimensionsUnit: ").append(dimensionsUnit).append("\n");
    sb.append("  isVirtual: ").append(isVirtual).append("\n");
    sb.append("  isFreeShipping: ").append(isFreeShipping).append("\n");
    sb.append("  gtin: ").append(gtin).append("\n");
    sb.append("  upc: ").append(upc).append("\n");
    sb.append("  mpn: ").append(mpn).append("\n");
    sb.append("  ean: ").append(ean).append("\n");
    sb.append("  isbn: ").append(isbn).append("\n");
    sb.append("  barcode: ").append(barcode).append("\n");
    sb.append("  manufacturer: ").append(manufacturer).append("\n");
    sb.append("  manufacturerId: ").append(manufacturerId).append("\n");
    sb.append("  categoriesIds: ").append(categoriesIds).append("\n");
    sb.append("  relatedProductsIds: ").append(relatedProductsIds).append("\n");
    sb.append("  upSellProductsIds: ").append(upSellProductsIds).append("\n");
    sb.append("  crossSellProductsIds: ").append(crossSellProductsIds).append("\n");
    sb.append("  metaTitle: ").append(metaTitle).append("\n");
    sb.append("  metaKeywords: ").append(metaKeywords).append("\n");
    sb.append("  metaDescription: ").append(metaDescription).append("\n");
    sb.append("  seoUrl: ").append(seoUrl).append("\n");
    sb.append("  searchKeywords: ").append(searchKeywords).append("\n");
    sb.append("  tags: ").append(tags).append("\n");
    sb.append("  deliveryCode: ").append(deliveryCode).append("\n");
    sb.append("  packageDetails: ").append(packageDetails).append("\n");
    sb.append("  countryOfOrigin: ").append(countryOfOrigin).append("\n");
    sb.append("  harmonizedSystemCode: ").append(harmonizedSystemCode).append("\n");
    sb.append("  shippingTemplateId: ").append(shippingTemplateId).append("\n");
    sb.append("  whenMade: ").append(whenMade).append("\n");
    sb.append("  isSupply: ").append(isSupply).append("\n");
    sb.append("  downloadable: ").append(downloadable).append("\n");
    sb.append("  materials: ").append(materials).append("\n");
    sb.append("  autoRenew: ").append(autoRenew).append("\n");
    sb.append("  onSale: ").append(onSale).append("\n");
    sb.append("  productionPartnerIds: ").append(productionPartnerIds).append("\n");
    sb.append("  manufacturerInfo: ").append(manufacturerInfo).append("\n");
    sb.append("  reportRequestId: ").append(reportRequestId).append("\n");
    sb.append("  disableReportCache: ").append(disableReportCache).append("\n");
    sb.append("  reindex: ").append(reindex).append("\n");
    sb.append("  clearCache: ").append(clearCache).append("\n");
    sb.append("  checkProcessStatus: ").append(checkProcessStatus).append("\n");
    sb.append("  specifics: ").append(specifics).append("\n");
    sb.append("  shopSectionId: ").append(shopSectionId).append("\n");
    sb.append("  personalizationDetails: ").append(personalizationDetails).append("\n");
    sb.append("  marketplaceItemProperties: ").append(marketplaceItemProperties).append("\n");
    sb.append("  minOrderQuantity: ").append(minOrderQuantity).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
