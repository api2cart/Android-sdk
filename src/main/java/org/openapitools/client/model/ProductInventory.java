/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.math.BigDecimal;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ProductInventory {
  
  @SerializedName("warehouse_id")
  private String warehouseId = null;
  @SerializedName("quantity")
  private BigDecimal quantity = null;
  @SerializedName("in_stock")
  private Boolean inStock = null;
  @SerializedName("priority")
  private Integer priority = null;
  @SerializedName("additional_fields")
  private Object additionalFields = null;
  @SerializedName("custom_fields")
  private Object customFields = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getWarehouseId() {
    return warehouseId;
  }
  public void setWarehouseId(String warehouseId) {
    this.warehouseId = warehouseId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getQuantity() {
    return quantity;
  }
  public void setQuantity(BigDecimal quantity) {
    this.quantity = quantity;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getInStock() {
    return inStock;
  }
  public void setInStock(Boolean inStock) {
    this.inStock = inStock;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getPriority() {
    return priority;
  }
  public void setPriority(Integer priority) {
    this.priority = priority;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Object getAdditionalFields() {
    return additionalFields;
  }
  public void setAdditionalFields(Object additionalFields) {
    this.additionalFields = additionalFields;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Object getCustomFields() {
    return customFields;
  }
  public void setCustomFields(Object customFields) {
    this.customFields = customFields;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductInventory productInventory = (ProductInventory) o;
    return (this.warehouseId == null ? productInventory.warehouseId == null : this.warehouseId.equals(productInventory.warehouseId)) &&
        (this.quantity == null ? productInventory.quantity == null : this.quantity.equals(productInventory.quantity)) &&
        (this.inStock == null ? productInventory.inStock == null : this.inStock.equals(productInventory.inStock)) &&
        (this.priority == null ? productInventory.priority == null : this.priority.equals(productInventory.priority)) &&
        (this.additionalFields == null ? productInventory.additionalFields == null : this.additionalFields.equals(productInventory.additionalFields)) &&
        (this.customFields == null ? productInventory.customFields == null : this.customFields.equals(productInventory.customFields));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.warehouseId == null ? 0: this.warehouseId.hashCode());
    result = 31 * result + (this.quantity == null ? 0: this.quantity.hashCode());
    result = 31 * result + (this.inStock == null ? 0: this.inStock.hashCode());
    result = 31 * result + (this.priority == null ? 0: this.priority.hashCode());
    result = 31 * result + (this.additionalFields == null ? 0: this.additionalFields.hashCode());
    result = 31 * result + (this.customFields == null ? 0: this.customFields.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductInventory {\n");
    
    sb.append("  warehouseId: ").append(warehouseId).append("\n");
    sb.append("  quantity: ").append(quantity).append("\n");
    sb.append("  inStock: ").append(inStock).append("\n");
    sb.append("  priority: ").append(priority).append("\n");
    sb.append("  additionalFields: ").append(additionalFields).append("\n");
    sb.append("  customFields: ").append(customFields).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
