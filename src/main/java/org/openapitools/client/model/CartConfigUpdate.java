/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class CartConfigUpdate {
  
  @SerializedName("db_tables_prefix")
  private String dbTablesPrefix = null;
  @SerializedName("custom_fields")
  private Object customFields = null;
  @SerializedName("store_id")
  private String storeId = null;
  @SerializedName("user_agent")
  private String userAgent = null;

  /**
   * This parameter is deprecated for this method. Please, use this parameter in method account.config.update
   **/
  @ApiModelProperty(value = "This parameter is deprecated for this method. Please, use this parameter in method account.config.update")
  public String getDbTablesPrefix() {
    return dbTablesPrefix;
  }
  public void setDbTablesPrefix(String dbTablesPrefix) {
    this.dbTablesPrefix = dbTablesPrefix;
  }

  /**
   * This parameter sets the list of params to the shopping cart.
   **/
  @ApiModelProperty(value = "This parameter sets the list of params to the shopping cart.")
  public Object getCustomFields() {
    return customFields;
  }
  public void setCustomFields(Object customFields) {
    this.customFields = customFields;
  }

  /**
   * Store Id
   **/
  @ApiModelProperty(value = "Store Id")
  public String getStoreId() {
    return storeId;
  }
  public void setStoreId(String storeId) {
    this.storeId = storeId;
  }

  /**
   * This parameter allows you to set your custom user agent, which will be used in requests to the store. Please use it cautiously, as the store's firewall may block specific values.
   **/
  @ApiModelProperty(value = "This parameter allows you to set your custom user agent, which will be used in requests to the store. Please use it cautiously, as the store's firewall may block specific values.")
  public String getUserAgent() {
    return userAgent;
  }
  public void setUserAgent(String userAgent) {
    this.userAgent = userAgent;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CartConfigUpdate cartConfigUpdate = (CartConfigUpdate) o;
    return (this.dbTablesPrefix == null ? cartConfigUpdate.dbTablesPrefix == null : this.dbTablesPrefix.equals(cartConfigUpdate.dbTablesPrefix)) &&
        (this.customFields == null ? cartConfigUpdate.customFields == null : this.customFields.equals(cartConfigUpdate.customFields)) &&
        (this.storeId == null ? cartConfigUpdate.storeId == null : this.storeId.equals(cartConfigUpdate.storeId)) &&
        (this.userAgent == null ? cartConfigUpdate.userAgent == null : this.userAgent.equals(cartConfigUpdate.userAgent));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.dbTablesPrefix == null ? 0: this.dbTablesPrefix.hashCode());
    result = 31 * result + (this.customFields == null ? 0: this.customFields.hashCode());
    result = 31 * result + (this.storeId == null ? 0: this.storeId.hashCode());
    result = 31 * result + (this.userAgent == null ? 0: this.userAgent.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CartConfigUpdate {\n");
    
    sb.append("  dbTablesPrefix: ").append(dbTablesPrefix).append("\n");
    sb.append("  customFields: ").append(customFields).append("\n");
    sb.append("  storeId: ").append(storeId).append("\n");
    sb.append("  userAgent: ").append(userAgent).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
