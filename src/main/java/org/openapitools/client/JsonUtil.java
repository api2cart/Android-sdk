/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonParseException;
import com.google.gson.reflect.TypeToken;
import java.lang.reflect.Type;
import java.util.List;
import java.util.Date;
import org.openapitools.client.model.*;

public class JsonUtil {
  public static GsonBuilder gsonBuilder;

  static {
    gsonBuilder = new GsonBuilder();
    gsonBuilder.serializeNulls();
    gsonBuilder.setDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
    gsonBuilder.registerTypeAdapter(Date.class, new JsonDeserializer<Date>() {
      public Date deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
        return new Date(json.getAsJsonPrimitive().getAsLong());
      }
    });
  }

  public static Gson getGson() {
    return gsonBuilder.create();
  }

  public static String serialize(Object obj){
    return getGson().toJson(obj);
  }

  public static <T> T deserializeToList(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getListTypeForDeserialization(cls));
  }

  public static <T> T deserializeToObject(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getTypeForDeserialization(cls));
  }

  public static Type getListTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("A2CDateTime".equalsIgnoreCase(className)) {
      return new TypeToken<List<A2CDateTime>>(){}.getType();
    }
    
    if ("AccountCartAdd".equalsIgnoreCase(className)) {
      return new TypeToken<List<AccountCartAdd>>(){}.getType();
    }
    
    if ("AccountCartAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<AccountCartAdd200Response>>(){}.getType();
    }
    
    if ("AccountCartAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<AccountCartAdd200ResponseResult>>(){}.getType();
    }
    
    if ("AccountCartAddHybrisWebsitesInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<AccountCartAddHybrisWebsitesInner>>(){}.getType();
    }
    
    if ("AccountCartList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<AccountCartList200Response>>(){}.getType();
    }
    
    if ("AccountCartList200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<AccountCartList200ResponseResult>>(){}.getType();
    }
    
    if ("AccountCartList200ResponseResultCartsInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<AccountCartList200ResponseResultCartsInner>>(){}.getType();
    }
    
    if ("AccountConfigUpdate200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<AccountConfigUpdate200Response>>(){}.getType();
    }
    
    if ("AccountConfigUpdate200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<AccountConfigUpdate200ResponseResult>>(){}.getType();
    }
    
    if ("AccountFailedWebhooks200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<AccountFailedWebhooks200Response>>(){}.getType();
    }
    
    if ("AccountFailedWebhooks200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<AccountFailedWebhooks200ResponseResult>>(){}.getType();
    }
    
    if ("AccountFailedWebhooks200ResponseResultWebhookInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<AccountFailedWebhooks200ResponseResultWebhookInner>>(){}.getType();
    }
    
    if ("AccountSupportedPlatforms200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<AccountSupportedPlatforms200Response>>(){}.getType();
    }
    
    if ("AccountSupportedPlatforms200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<AccountSupportedPlatforms200ResponseResult>>(){}.getType();
    }
    
    if ("AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner>>(){}.getType();
    }
    
    if ("AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParams".equalsIgnoreCase(className)) {
      return new TypeToken<List<AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParams>>(){}.getType();
    }
    
    if ("AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParamsRequiredInnerInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParamsRequiredInnerInner>>(){}.getType();
    }
    
    if ("AttributeAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<AttributeAdd200Response>>(){}.getType();
    }
    
    if ("AttributeAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<AttributeAdd200ResponseResult>>(){}.getType();
    }
    
    if ("AttributeAssignGroup200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<AttributeAssignGroup200Response>>(){}.getType();
    }
    
    if ("AttributeAssignGroup200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<AttributeAssignGroup200ResponseResult>>(){}.getType();
    }
    
    if ("AttributeCount200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<AttributeCount200Response>>(){}.getType();
    }
    
    if ("AttributeCount200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<AttributeCount200ResponseResult>>(){}.getType();
    }
    
    if ("AttributeDelete200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<AttributeDelete200Response>>(){}.getType();
    }
    
    if ("AttributeDelete200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<AttributeDelete200ResponseResult>>(){}.getType();
    }
    
    if ("AttributeInfo200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<AttributeInfo200Response>>(){}.getType();
    }
    
    if ("AttributeTypeList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<AttributeTypeList200Response>>(){}.getType();
    }
    
    if ("AttributeTypeList200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<AttributeTypeList200ResponseResult>>(){}.getType();
    }
    
    if ("AttributeUnassignGroup200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<AttributeUnassignGroup200Response>>(){}.getType();
    }
    
    if ("AttributeUnassignGroup200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<AttributeUnassignGroup200ResponseResult>>(){}.getType();
    }
    
    if ("AttributeUpdate200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<AttributeUpdate200Response>>(){}.getType();
    }
    
    if ("AttributeUpdate200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<AttributeUpdate200ResponseResult>>(){}.getType();
    }
    
    if ("AttributeValueDelete200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<AttributeValueDelete200Response>>(){}.getType();
    }
    
    if ("AttributeValueDelete200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<AttributeValueDelete200ResponseResult>>(){}.getType();
    }
    
    if ("BaseCustomer".equalsIgnoreCase(className)) {
      return new TypeToken<List<BaseCustomer>>(){}.getType();
    }
    
    if ("Basket".equalsIgnoreCase(className)) {
      return new TypeToken<List<Basket>>(){}.getType();
    }
    
    if ("BasketInfo200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<BasketInfo200Response>>(){}.getType();
    }
    
    if ("BasketItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<BasketItem>>(){}.getType();
    }
    
    if ("BasketItemAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<BasketItemAdd200Response>>(){}.getType();
    }
    
    if ("BasketItemAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<BasketItemAdd200ResponseResult>>(){}.getType();
    }
    
    if ("BasketItemOption".equalsIgnoreCase(className)) {
      return new TypeToken<List<BasketItemOption>>(){}.getType();
    }
    
    if ("BasketLiveShippingService".equalsIgnoreCase(className)) {
      return new TypeToken<List<BasketLiveShippingService>>(){}.getType();
    }
    
    if ("BasketLiveShippingServiceCreate200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<BasketLiveShippingServiceCreate200Response>>(){}.getType();
    }
    
    if ("BasketLiveShippingServiceCreate200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<BasketLiveShippingServiceCreate200ResponseResult>>(){}.getType();
    }
    
    if ("BasketLiveShippingServiceDelete200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<BasketLiveShippingServiceDelete200Response>>(){}.getType();
    }
    
    if ("BasketLiveShippingServiceDelete200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<BasketLiveShippingServiceDelete200ResponseResult>>(){}.getType();
    }
    
    if ("BasketLiveShippingServiceList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<BasketLiveShippingServiceList200Response>>(){}.getType();
    }
    
    if ("BasketLiveShippingServiceList200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<BasketLiveShippingServiceList200ResponseResult>>(){}.getType();
    }
    
    if ("BatchJob".equalsIgnoreCase(className)) {
      return new TypeToken<List<BatchJob>>(){}.getType();
    }
    
    if ("BatchJobResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<BatchJobResult>>(){}.getType();
    }
    
    if ("BatchJobResultItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<BatchJobResultItem>>(){}.getType();
    }
    
    if ("Brand".equalsIgnoreCase(className)) {
      return new TypeToken<List<Brand>>(){}.getType();
    }
    
    if ("Carrier".equalsIgnoreCase(className)) {
      return new TypeToken<List<Carrier>>(){}.getType();
    }
    
    if ("Cart".equalsIgnoreCase(className)) {
      return new TypeToken<List<Cart>>(){}.getType();
    }
    
    if ("CartCatalogPriceRulesCount200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<CartCatalogPriceRulesCount200Response>>(){}.getType();
    }
    
    if ("CartCatalogPriceRulesCount200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<CartCatalogPriceRulesCount200ResponseResult>>(){}.getType();
    }
    
    if ("CartChannel".equalsIgnoreCase(className)) {
      return new TypeToken<List<CartChannel>>(){}.getType();
    }
    
    if ("CartCouponAdd".equalsIgnoreCase(className)) {
      return new TypeToken<List<CartCouponAdd>>(){}.getType();
    }
    
    if ("CartCouponAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<CartCouponAdd200Response>>(){}.getType();
    }
    
    if ("CartCouponAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<CartCouponAdd200ResponseResult>>(){}.getType();
    }
    
    if ("CartCouponCount200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<CartCouponCount200Response>>(){}.getType();
    }
    
    if ("CartCouponCount200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<CartCouponCount200ResponseResult>>(){}.getType();
    }
    
    if ("CartDelete200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<CartDelete200Response>>(){}.getType();
    }
    
    if ("CartDelete200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<CartDelete200ResponseResult>>(){}.getType();
    }
    
    if ("CartGiftcardAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<CartGiftcardAdd200Response>>(){}.getType();
    }
    
    if ("CartGiftcardAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<CartGiftcardAdd200ResponseResult>>(){}.getType();
    }
    
    if ("CartGiftcardCount200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<CartGiftcardCount200Response>>(){}.getType();
    }
    
    if ("CartGiftcardCount200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<CartGiftcardCount200ResponseResult>>(){}.getType();
    }
    
    if ("CartInfo200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<CartInfo200Response>>(){}.getType();
    }
    
    if ("CartMetaData".equalsIgnoreCase(className)) {
      return new TypeToken<List<CartMetaData>>(){}.getType();
    }
    
    if ("CartMethods200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<CartMethods200Response>>(){}.getType();
    }
    
    if ("CartMethods200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<CartMethods200ResponseResult>>(){}.getType();
    }
    
    if ("CartPluginList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<CartPluginList200Response>>(){}.getType();
    }
    
    if ("CartPluginList200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<CartPluginList200ResponseResult>>(){}.getType();
    }
    
    if ("CartScriptAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<CartScriptAdd200Response>>(){}.getType();
    }
    
    if ("CartScriptAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<CartScriptAdd200ResponseResult>>(){}.getType();
    }
    
    if ("CartShippingMethod".equalsIgnoreCase(className)) {
      return new TypeToken<List<CartShippingMethod>>(){}.getType();
    }
    
    if ("CartShippingMethodRate".equalsIgnoreCase(className)) {
      return new TypeToken<List<CartShippingMethodRate>>(){}.getType();
    }
    
    if ("CartShippingZone".equalsIgnoreCase(className)) {
      return new TypeToken<List<CartShippingZone>>(){}.getType();
    }
    
    if ("CartShippingZone2".equalsIgnoreCase(className)) {
      return new TypeToken<List<CartShippingZone2>>(){}.getType();
    }
    
    if ("CartStoreInfo".equalsIgnoreCase(className)) {
      return new TypeToken<List<CartStoreInfo>>(){}.getType();
    }
    
    if ("CartValidate200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<CartValidate200Response>>(){}.getType();
    }
    
    if ("CartValidate200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<CartValidate200ResponseResult>>(){}.getType();
    }
    
    if ("CartWarehouse".equalsIgnoreCase(className)) {
      return new TypeToken<List<CartWarehouse>>(){}.getType();
    }
    
    if ("CatalogPriceRule".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogPriceRule>>(){}.getType();
    }
    
    if ("CatalogPriceRuleAction".equalsIgnoreCase(className)) {
      return new TypeToken<List<CatalogPriceRuleAction>>(){}.getType();
    }
    
    if ("Category".equalsIgnoreCase(className)) {
      return new TypeToken<List<Category>>(){}.getType();
    }
    
    if ("CategoryAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<CategoryAdd200Response>>(){}.getType();
    }
    
    if ("CategoryAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<CategoryAdd200ResponseResult>>(){}.getType();
    }
    
    if ("CategoryAddBatch".equalsIgnoreCase(className)) {
      return new TypeToken<List<CategoryAddBatch>>(){}.getType();
    }
    
    if ("CategoryAddBatch200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<CategoryAddBatch200Response>>(){}.getType();
    }
    
    if ("CategoryAddBatch200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<CategoryAddBatch200ResponseResult>>(){}.getType();
    }
    
    if ("CategoryAddBatchPayloadInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<CategoryAddBatchPayloadInner>>(){}.getType();
    }
    
    if ("CategoryAddBatchPayloadInnerImagesInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<CategoryAddBatchPayloadInnerImagesInner>>(){}.getType();
    }
    
    if ("CategoryAssign200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<CategoryAssign200Response>>(){}.getType();
    }
    
    if ("CategoryCount200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<CategoryCount200Response>>(){}.getType();
    }
    
    if ("CategoryCount200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<CategoryCount200ResponseResult>>(){}.getType();
    }
    
    if ("CategoryDelete200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<CategoryDelete200Response>>(){}.getType();
    }
    
    if ("CategoryDelete200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<CategoryDelete200ResponseResult>>(){}.getType();
    }
    
    if ("CategoryFind200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<CategoryFind200Response>>(){}.getType();
    }
    
    if ("CategoryFind200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<CategoryFind200ResponseResult>>(){}.getType();
    }
    
    if ("CategoryFind200ResponseResultCategoryInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<CategoryFind200ResponseResultCategoryInner>>(){}.getType();
    }
    
    if ("CategoryImageAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<CategoryImageAdd200Response>>(){}.getType();
    }
    
    if ("CategoryImageAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<CategoryImageAdd200ResponseResult>>(){}.getType();
    }
    
    if ("CategoryInfo200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<CategoryInfo200Response>>(){}.getType();
    }
    
    if ("Child".equalsIgnoreCase(className)) {
      return new TypeToken<List<Child>>(){}.getType();
    }
    
    if ("Country".equalsIgnoreCase(className)) {
      return new TypeToken<List<Country>>(){}.getType();
    }
    
    if ("Coupon".equalsIgnoreCase(className)) {
      return new TypeToken<List<Coupon>>(){}.getType();
    }
    
    if ("CouponAction".equalsIgnoreCase(className)) {
      return new TypeToken<List<CouponAction>>(){}.getType();
    }
    
    if ("CouponCode".equalsIgnoreCase(className)) {
      return new TypeToken<List<CouponCode>>(){}.getType();
    }
    
    if ("CouponCondition".equalsIgnoreCase(className)) {
      return new TypeToken<List<CouponCondition>>(){}.getType();
    }
    
    if ("CouponHistory".equalsIgnoreCase(className)) {
      return new TypeToken<List<CouponHistory>>(){}.getType();
    }
    
    if ("Currency".equalsIgnoreCase(className)) {
      return new TypeToken<List<Currency>>(){}.getType();
    }
    
    if ("Customer".equalsIgnoreCase(className)) {
      return new TypeToken<List<Customer>>(){}.getType();
    }
    
    if ("CustomerAdd".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomerAdd>>(){}.getType();
    }
    
    if ("CustomerAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomerAdd200Response>>(){}.getType();
    }
    
    if ("CustomerAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomerAdd200ResponseResult>>(){}.getType();
    }
    
    if ("CustomerAddAddressInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomerAddAddressInner>>(){}.getType();
    }
    
    if ("CustomerAddConsentsInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomerAddConsentsInner>>(){}.getType();
    }
    
    if ("CustomerAddress".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomerAddress>>(){}.getType();
    }
    
    if ("CustomerAddressAdd".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomerAddressAdd>>(){}.getType();
    }
    
    if ("CustomerAttribute".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomerAttribute>>(){}.getType();
    }
    
    if ("CustomerAttributeValue".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomerAttributeValue>>(){}.getType();
    }
    
    if ("CustomerConsent".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomerConsent>>(){}.getType();
    }
    
    if ("CustomerCount200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomerCount200Response>>(){}.getType();
    }
    
    if ("CustomerCount200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomerCount200ResponseResult>>(){}.getType();
    }
    
    if ("CustomerDelete200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomerDelete200Response>>(){}.getType();
    }
    
    if ("CustomerDelete200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomerDelete200ResponseResult>>(){}.getType();
    }
    
    if ("CustomerFind200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomerFind200Response>>(){}.getType();
    }
    
    if ("CustomerFind200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomerFind200ResponseResult>>(){}.getType();
    }
    
    if ("CustomerGroup".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomerGroup>>(){}.getType();
    }
    
    if ("CustomerGroupAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomerGroupAdd200Response>>(){}.getType();
    }
    
    if ("CustomerGroupAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomerGroupAdd200ResponseResult>>(){}.getType();
    }
    
    if ("CustomerInfo200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomerInfo200Response>>(){}.getType();
    }
    
    if ("CustomerUpdate".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomerUpdate>>(){}.getType();
    }
    
    if ("CustomerUpdateAddressInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomerUpdateAddressInner>>(){}.getType();
    }
    
    if ("CustomerWishList".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomerWishList>>(){}.getType();
    }
    
    if ("CustomerWishListItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<CustomerWishListItem>>(){}.getType();
    }
    
    if ("Discount".equalsIgnoreCase(className)) {
      return new TypeToken<List<Discount>>(){}.getType();
    }
    
    if ("GiftCard".equalsIgnoreCase(className)) {
      return new TypeToken<List<GiftCard>>(){}.getType();
    }
    
    if ("Image".equalsIgnoreCase(className)) {
      return new TypeToken<List<Image>>(){}.getType();
    }
    
    if ("Info".equalsIgnoreCase(className)) {
      return new TypeToken<List<Info>>(){}.getType();
    }
    
    if ("Language".equalsIgnoreCase(className)) {
      return new TypeToken<List<Language>>(){}.getType();
    }
    
    if ("MarketplaceProduct".equalsIgnoreCase(className)) {
      return new TypeToken<List<MarketplaceProduct>>(){}.getType();
    }
    
    if ("Media".equalsIgnoreCase(className)) {
      return new TypeToken<List<Media>>(){}.getType();
    }
    
    if ("ModelResponseAttributeAttributesetList".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelResponseAttributeAttributesetList>>(){}.getType();
    }
    
    if ("ModelResponseAttributeGroupList".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelResponseAttributeGroupList>>(){}.getType();
    }
    
    if ("ModelResponseAttributeList".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelResponseAttributeList>>(){}.getType();
    }
    
    if ("ModelResponseBatchJobList".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelResponseBatchJobList>>(){}.getType();
    }
    
    if ("ModelResponseCartCatalogPriceRulesList".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelResponseCartCatalogPriceRulesList>>(){}.getType();
    }
    
    if ("ModelResponseCartCouponList".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelResponseCartCouponList>>(){}.getType();
    }
    
    if ("ModelResponseCartGiftCardList".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelResponseCartGiftCardList>>(){}.getType();
    }
    
    if ("ModelResponseCartMetaDataList".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelResponseCartMetaDataList>>(){}.getType();
    }
    
    if ("ModelResponseCartScriptList".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelResponseCartScriptList>>(){}.getType();
    }
    
    if ("ModelResponseCartShippingZonesList".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelResponseCartShippingZonesList>>(){}.getType();
    }
    
    if ("ModelResponseCategoryList".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelResponseCategoryList>>(){}.getType();
    }
    
    if ("ModelResponseCustomerAttributeList".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelResponseCustomerAttributeList>>(){}.getType();
    }
    
    if ("ModelResponseCustomerGroupList".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelResponseCustomerGroupList>>(){}.getType();
    }
    
    if ("ModelResponseCustomerList".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelResponseCustomerList>>(){}.getType();
    }
    
    if ("ModelResponseCustomerWishlistList".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelResponseCustomerWishlistList>>(){}.getType();
    }
    
    if ("ModelResponseMarketplaceProductFind".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelResponseMarketplaceProductFind>>(){}.getType();
    }
    
    if ("ModelResponseOrderAbandonedList".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelResponseOrderAbandonedList>>(){}.getType();
    }
    
    if ("ModelResponseOrderList".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelResponseOrderList>>(){}.getType();
    }
    
    if ("ModelResponseOrderPreestimateShippingList".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelResponseOrderPreestimateShippingList>>(){}.getType();
    }
    
    if ("ModelResponseOrderShipmentList".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelResponseOrderShipmentList>>(){}.getType();
    }
    
    if ("ModelResponseOrderStatusList".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelResponseOrderStatusList>>(){}.getType();
    }
    
    if ("ModelResponseOrderTransactionList".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelResponseOrderTransactionList>>(){}.getType();
    }
    
    if ("ModelResponseProductAttributeList".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelResponseProductAttributeList>>(){}.getType();
    }
    
    if ("ModelResponseProductBrandList".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelResponseProductBrandList>>(){}.getType();
    }
    
    if ("ModelResponseProductChildItemList".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelResponseProductChildItemList>>(){}.getType();
    }
    
    if ("ModelResponseProductCurrencyList".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelResponseProductCurrencyList>>(){}.getType();
    }
    
    if ("ModelResponseProductList".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelResponseProductList>>(){}.getType();
    }
    
    if ("ModelResponseProductOptionList".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelResponseProductOptionList>>(){}.getType();
    }
    
    if ("ModelResponseProductReviewList".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelResponseProductReviewList>>(){}.getType();
    }
    
    if ("ModelResponseReturnList".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelResponseReturnList>>(){}.getType();
    }
    
    if ("ModelResponseSubscriberList".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelResponseSubscriberList>>(){}.getType();
    }
    
    if ("ModelResponseTaxClassInfo".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelResponseTaxClassInfo>>(){}.getType();
    }
    
    if ("ModelResponseTaxClassList".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelResponseTaxClassList>>(){}.getType();
    }
    
    if ("ModelReturn".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelReturn>>(){}.getType();
    }
    
    if ("Order".equalsIgnoreCase(className)) {
      return new TypeToken<List<Order>>(){}.getType();
    }
    
    if ("OrderAbandoned".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderAbandoned>>(){}.getType();
    }
    
    if ("OrderAdd".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderAdd>>(){}.getType();
    }
    
    if ("OrderAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderAdd200Response>>(){}.getType();
    }
    
    if ("OrderAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderAdd200ResponseResult>>(){}.getType();
    }
    
    if ("OrderAddNoteAttributesInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderAddNoteAttributesInner>>(){}.getType();
    }
    
    if ("OrderAddOrderItemInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderAddOrderItemInner>>(){}.getType();
    }
    
    if ("OrderAddOrderItemInnerOrderItemOptionInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderAddOrderItemInnerOrderItemOptionInner>>(){}.getType();
    }
    
    if ("OrderAddOrderItemInnerOrderItemPropertyInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderAddOrderItemInnerOrderItemPropertyInner>>(){}.getType();
    }
    
    if ("OrderCount200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderCount200Response>>(){}.getType();
    }
    
    if ("OrderCount200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderCount200ResponseResult>>(){}.getType();
    }
    
    if ("OrderFinancialStatusList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderFinancialStatusList200Response>>(){}.getType();
    }
    
    if ("OrderFinancialStatusList200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderFinancialStatusList200ResponseResult>>(){}.getType();
    }
    
    if ("OrderFinancialStatusList200ResponseResultOrderFinancialStatusesInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderFinancialStatusList200ResponseResultOrderFinancialStatusesInner>>(){}.getType();
    }
    
    if ("OrderFulfillmentStatusList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderFulfillmentStatusList200Response>>(){}.getType();
    }
    
    if ("OrderFulfillmentStatusList200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderFulfillmentStatusList200ResponseResult>>(){}.getType();
    }
    
    if ("OrderInfo200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderInfo200Response>>(){}.getType();
    }
    
    if ("OrderItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderItem>>(){}.getType();
    }
    
    if ("OrderItemOption".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderItemOption>>(){}.getType();
    }
    
    if ("OrderPaymentMethod".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderPaymentMethod>>(){}.getType();
    }
    
    if ("OrderPreestimateShipping".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderPreestimateShipping>>(){}.getType();
    }
    
    if ("OrderPreestimateShippingList".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderPreestimateShippingList>>(){}.getType();
    }
    
    if ("OrderPreestimateShippingListOrderItemInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderPreestimateShippingListOrderItemInner>>(){}.getType();
    }
    
    if ("OrderPreestimateShippingListOrderItemInnerOrderItemOptionInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderPreestimateShippingListOrderItemInnerOrderItemOptionInner>>(){}.getType();
    }
    
    if ("OrderRefund".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderRefund>>(){}.getType();
    }
    
    if ("OrderRefundAdd".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderRefundAdd>>(){}.getType();
    }
    
    if ("OrderRefundAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderRefundAdd200Response>>(){}.getType();
    }
    
    if ("OrderRefundAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderRefundAdd200ResponseResult>>(){}.getType();
    }
    
    if ("OrderRefundAddItemsInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderRefundAddItemsInner>>(){}.getType();
    }
    
    if ("OrderReturnAdd".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderReturnAdd>>(){}.getType();
    }
    
    if ("OrderReturnAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderReturnAdd200Response>>(){}.getType();
    }
    
    if ("OrderReturnAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderReturnAdd200ResponseResult>>(){}.getType();
    }
    
    if ("OrderReturnAddOrderProductsInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderReturnAddOrderProductsInner>>(){}.getType();
    }
    
    if ("OrderReturnUpdate".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderReturnUpdate>>(){}.getType();
    }
    
    if ("OrderReturnUpdateOrderProductsInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderReturnUpdateOrderProductsInner>>(){}.getType();
    }
    
    if ("OrderShipmentAdd".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderShipmentAdd>>(){}.getType();
    }
    
    if ("OrderShipmentAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderShipmentAdd200Response>>(){}.getType();
    }
    
    if ("OrderShipmentAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderShipmentAdd200ResponseResult>>(){}.getType();
    }
    
    if ("OrderShipmentAddBatch".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderShipmentAddBatch>>(){}.getType();
    }
    
    if ("OrderShipmentAddBatchPayloadInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderShipmentAddBatchPayloadInner>>(){}.getType();
    }
    
    if ("OrderShipmentAddBatchPayloadInnerItemsInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderShipmentAddBatchPayloadInnerItemsInner>>(){}.getType();
    }
    
    if ("OrderShipmentAddItemsInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderShipmentAddItemsInner>>(){}.getType();
    }
    
    if ("OrderShipmentAddTrackingNumbersInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderShipmentAddTrackingNumbersInner>>(){}.getType();
    }
    
    if ("OrderShipmentDelete200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderShipmentDelete200Response>>(){}.getType();
    }
    
    if ("OrderShipmentDelete200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderShipmentDelete200ResponseResult>>(){}.getType();
    }
    
    if ("OrderShipmentInfo200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderShipmentInfo200Response>>(){}.getType();
    }
    
    if ("OrderShipmentTrackingAdd".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderShipmentTrackingAdd>>(){}.getType();
    }
    
    if ("OrderShipmentTrackingAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderShipmentTrackingAdd200Response>>(){}.getType();
    }
    
    if ("OrderShipmentTrackingAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderShipmentTrackingAdd200ResponseResult>>(){}.getType();
    }
    
    if ("OrderShipmentUpdate".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderShipmentUpdate>>(){}.getType();
    }
    
    if ("OrderShippingMethod".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderShippingMethod>>(){}.getType();
    }
    
    if ("OrderStatus".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderStatus>>(){}.getType();
    }
    
    if ("OrderStatusHistoryItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderStatusHistoryItem>>(){}.getType();
    }
    
    if ("OrderStatusRefund".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderStatusRefund>>(){}.getType();
    }
    
    if ("OrderStatusRefundItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderStatusRefundItem>>(){}.getType();
    }
    
    if ("OrderTotal".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderTotal>>(){}.getType();
    }
    
    if ("OrderTotals".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderTotals>>(){}.getType();
    }
    
    if ("OrderTotalsNewDiscount".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderTotalsNewDiscount>>(){}.getType();
    }
    
    if ("OrderTransaction".equalsIgnoreCase(className)) {
      return new TypeToken<List<OrderTransaction>>(){}.getType();
    }
    
    if ("Pagination".equalsIgnoreCase(className)) {
      return new TypeToken<List<Pagination>>(){}.getType();
    }
    
    if ("Plugin".equalsIgnoreCase(className)) {
      return new TypeToken<List<Plugin>>(){}.getType();
    }
    
    if ("PluginList".equalsIgnoreCase(className)) {
      return new TypeToken<List<PluginList>>(){}.getType();
    }
    
    if ("Product".equalsIgnoreCase(className)) {
      return new TypeToken<List<Product>>(){}.getType();
    }
    
    if ("ProductAdd".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductAdd>>(){}.getType();
    }
    
    if ("ProductAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductAdd200Response>>(){}.getType();
    }
    
    if ("ProductAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductAdd200ResponseResult>>(){}.getType();
    }
    
    if ("ProductAddBatch".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductAddBatch>>(){}.getType();
    }
    
    if ("ProductAddBatchPayloadInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductAddBatchPayloadInner>>(){}.getType();
    }
    
    if ("ProductAddBatchPayloadInnerAdvancedPricesInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductAddBatchPayloadInnerAdvancedPricesInner>>(){}.getType();
    }
    
    if ("ProductAddBatchPayloadInnerImagesInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductAddBatchPayloadInnerImagesInner>>(){}.getType();
    }
    
    if ("ProductAddBestOffer".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductAddBestOffer>>(){}.getType();
    }
    
    if ("ProductAddCertificationsInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductAddCertificationsInner>>(){}.getType();
    }
    
    if ("ProductAddCertificationsInnerFilesInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductAddCertificationsInnerFilesInner>>(){}.getType();
    }
    
    if ("ProductAddCertificationsInnerImagesInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductAddCertificationsInnerImagesInner>>(){}.getType();
    }
    
    if ("ProductAddFilesInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductAddFilesInner>>(){}.getType();
    }
    
    if ("ProductAddGroupPricesInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductAddGroupPricesInner>>(){}.getType();
    }
    
    if ("ProductAddLogisticInfoInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductAddLogisticInfoInner>>(){}.getType();
    }
    
    if ("ProductAddManufacturerInfo".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductAddManufacturerInfo>>(){}.getType();
    }
    
    if ("ProductAddPackageDetails".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductAddPackageDetails>>(){}.getType();
    }
    
    if ("ProductAddPersonalizationDetails".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductAddPersonalizationDetails>>(){}.getType();
    }
    
    if ("ProductAddSalesTax".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductAddSalesTax>>(){}.getType();
    }
    
    if ("ProductAddSellerProfiles".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductAddSellerProfiles>>(){}.getType();
    }
    
    if ("ProductAddShippingDetailsInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductAddShippingDetailsInner>>(){}.getType();
    }
    
    if ("ProductAddSizeChart".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductAddSizeChart>>(){}.getType();
    }
    
    if ("ProductAddSpecificsInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductAddSpecificsInner>>(){}.getType();
    }
    
    if ("ProductAddSpecificsInnerBookingDetails".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductAddSpecificsInnerBookingDetails>>(){}.getType();
    }
    
    if ("ProductAddSpecificsInnerBookingDetailsAvailabilitiesInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductAddSpecificsInnerBookingDetailsAvailabilitiesInner>>(){}.getType();
    }
    
    if ("ProductAddSpecificsInnerBookingDetailsAvailabilitiesInnerTimesInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductAddSpecificsInnerBookingDetailsAvailabilitiesInnerTimesInner>>(){}.getType();
    }
    
    if ("ProductAddSpecificsInnerBookingDetailsOverridesInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductAddSpecificsInnerBookingDetailsOverridesInner>>(){}.getType();
    }
    
    if ("ProductAddSpecificsInnerFoodDetails".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductAddSpecificsInnerFoodDetails>>(){}.getType();
    }
    
    if ("ProductAddSpecificsInnerGroupProductsDetailsInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductAddSpecificsInnerGroupProductsDetailsInner>>(){}.getType();
    }
    
    if ("ProductAddTierPricesInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductAddTierPricesInner>>(){}.getType();
    }
    
    if ("ProductAdvancedPrice".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductAdvancedPrice>>(){}.getType();
    }
    
    if ("ProductAttribute".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductAttribute>>(){}.getType();
    }
    
    if ("ProductAttributeValueSet200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductAttributeValueSet200Response>>(){}.getType();
    }
    
    if ("ProductAttributeValueSet200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductAttributeValueSet200ResponseResult>>(){}.getType();
    }
    
    if ("ProductAttributeValueUnset200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductAttributeValueUnset200Response>>(){}.getType();
    }
    
    if ("ProductAttributeValueUnset200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductAttributeValueUnset200ResponseResult>>(){}.getType();
    }
    
    if ("ProductChildItemCombination".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductChildItemCombination>>(){}.getType();
    }
    
    if ("ProductChildItemFind200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductChildItemFind200Response>>(){}.getType();
    }
    
    if ("ProductChildItemFind200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductChildItemFind200ResponseResult>>(){}.getType();
    }
    
    if ("ProductChildItemInfo200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductChildItemInfo200Response>>(){}.getType();
    }
    
    if ("ProductCount200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductCount200Response>>(){}.getType();
    }
    
    if ("ProductCount200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductCount200ResponseResult>>(){}.getType();
    }
    
    if ("ProductCurrencyAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductCurrencyAdd200Response>>(){}.getType();
    }
    
    if ("ProductCurrencyAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductCurrencyAdd200ResponseResult>>(){}.getType();
    }
    
    if ("ProductDeleteBatch".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductDeleteBatch>>(){}.getType();
    }
    
    if ("ProductDeleteBatchPayloadInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductDeleteBatchPayloadInner>>(){}.getType();
    }
    
    if ("ProductFind200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductFind200Response>>(){}.getType();
    }
    
    if ("ProductFind200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductFind200ResponseResult>>(){}.getType();
    }
    
    if ("ProductFind200ResponseResultProductInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductFind200ResponseResultProductInner>>(){}.getType();
    }
    
    if ("ProductGroupItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductGroupItem>>(){}.getType();
    }
    
    if ("ProductGroupPrice".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductGroupPrice>>(){}.getType();
    }
    
    if ("ProductImageAdd".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductImageAdd>>(){}.getType();
    }
    
    if ("ProductImageAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductImageAdd200Response>>(){}.getType();
    }
    
    if ("ProductImageAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductImageAdd200ResponseResult>>(){}.getType();
    }
    
    if ("ProductImageUpdate200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductImageUpdate200Response>>(){}.getType();
    }
    
    if ("ProductImageUpdate200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductImageUpdate200ResponseResult>>(){}.getType();
    }
    
    if ("ProductInfo200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductInfo200Response>>(){}.getType();
    }
    
    if ("ProductInventory".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductInventory>>(){}.getType();
    }
    
    if ("ProductManufacturerAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductManufacturerAdd200Response>>(){}.getType();
    }
    
    if ("ProductManufacturerAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductManufacturerAdd200ResponseResult>>(){}.getType();
    }
    
    if ("ProductOption".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductOption>>(){}.getType();
    }
    
    if ("ProductOptionAdd".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductOptionAdd>>(){}.getType();
    }
    
    if ("ProductOptionAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductOptionAdd200Response>>(){}.getType();
    }
    
    if ("ProductOptionAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductOptionAdd200ResponseResult>>(){}.getType();
    }
    
    if ("ProductOptionAddValuesInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductOptionAddValuesInner>>(){}.getType();
    }
    
    if ("ProductOptionAssign200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductOptionAssign200Response>>(){}.getType();
    }
    
    if ("ProductOptionAssign200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductOptionAssign200ResponseResult>>(){}.getType();
    }
    
    if ("ProductOptionItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductOptionItem>>(){}.getType();
    }
    
    if ("ProductOptionValueAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductOptionValueAdd200Response>>(){}.getType();
    }
    
    if ("ProductOptionValueAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductOptionValueAdd200ResponseResult>>(){}.getType();
    }
    
    if ("ProductOptionValueAssign200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductOptionValueAssign200Response>>(){}.getType();
    }
    
    if ("ProductOptionValueAssign200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductOptionValueAssign200ResponseResult>>(){}.getType();
    }
    
    if ("ProductPriceAdd".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductPriceAdd>>(){}.getType();
    }
    
    if ("ProductPriceUpdate".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductPriceUpdate>>(){}.getType();
    }
    
    if ("ProductPriceUpdateGroupPricesInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductPriceUpdateGroupPricesInner>>(){}.getType();
    }
    
    if ("ProductReview".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductReview>>(){}.getType();
    }
    
    if ("ProductReviewRating".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductReviewRating>>(){}.getType();
    }
    
    if ("ProductTaxAdd".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductTaxAdd>>(){}.getType();
    }
    
    if ("ProductTaxAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductTaxAdd200Response>>(){}.getType();
    }
    
    if ("ProductTaxAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductTaxAdd200ResponseResult>>(){}.getType();
    }
    
    if ("ProductTaxAddTaxRatesInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductTaxAddTaxRatesInner>>(){}.getType();
    }
    
    if ("ProductTierPrice".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductTierPrice>>(){}.getType();
    }
    
    if ("ProductUpdate".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductUpdate>>(){}.getType();
    }
    
    if ("ProductUpdateBatch".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductUpdateBatch>>(){}.getType();
    }
    
    if ("ProductUpdateBatchPayloadInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductUpdateBatchPayloadInner>>(){}.getType();
    }
    
    if ("ProductUpdateBatchPayloadInnerAdvancedPricesInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductUpdateBatchPayloadInnerAdvancedPricesInner>>(){}.getType();
    }
    
    if ("ProductUpdateBatchPayloadInnerImagesInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductUpdateBatchPayloadInnerImagesInner>>(){}.getType();
    }
    
    if ("ProductVariantAdd".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductVariantAdd>>(){}.getType();
    }
    
    if ("ProductVariantAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductVariantAdd200Response>>(){}.getType();
    }
    
    if ("ProductVariantAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductVariantAdd200ResponseResult>>(){}.getType();
    }
    
    if ("ProductVariantAddAttributesInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductVariantAddAttributesInner>>(){}.getType();
    }
    
    if ("ProductVariantAddBatch".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductVariantAddBatch>>(){}.getType();
    }
    
    if ("ProductVariantAddBatchPayloadInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductVariantAddBatchPayloadInner>>(){}.getType();
    }
    
    if ("ProductVariantAddBatchPayloadInnerCombinationInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductVariantAddBatchPayloadInnerCombinationInner>>(){}.getType();
    }
    
    if ("ProductVariantDeleteBatch".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductVariantDeleteBatch>>(){}.getType();
    }
    
    if ("ProductVariantDeleteBatchPayloadInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductVariantDeleteBatchPayloadInner>>(){}.getType();
    }
    
    if ("ProductVariantImageAdd".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductVariantImageAdd>>(){}.getType();
    }
    
    if ("ProductVariantImageAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductVariantImageAdd200Response>>(){}.getType();
    }
    
    if ("ProductVariantImageAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductVariantImageAdd200ResponseResult>>(){}.getType();
    }
    
    if ("ProductVariantPriceAdd".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductVariantPriceAdd>>(){}.getType();
    }
    
    if ("ProductVariantPriceUpdate".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductVariantPriceUpdate>>(){}.getType();
    }
    
    if ("ProductVariantUpdate".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductVariantUpdate>>(){}.getType();
    }
    
    if ("ProductVariantUpdateBatch".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductVariantUpdateBatch>>(){}.getType();
    }
    
    if ("ProductVariantUpdateBatchPayloadInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductVariantUpdateBatchPayloadInner>>(){}.getType();
    }
    
    if ("ProductVariantUpdateOptionsInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProductVariantUpdateOptionsInner>>(){}.getType();
    }
    
    if ("ResponseAttributeAttributesetListResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ResponseAttributeAttributesetListResult>>(){}.getType();
    }
    
    if ("ResponseAttributeGroupListResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ResponseAttributeGroupListResult>>(){}.getType();
    }
    
    if ("ResponseAttributeListResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ResponseAttributeListResult>>(){}.getType();
    }
    
    if ("ResponseBatchJobListResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ResponseBatchJobListResult>>(){}.getType();
    }
    
    if ("ResponseBatchJobResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ResponseBatchJobResult>>(){}.getType();
    }
    
    if ("ResponseCartCatalogPriceRulesListResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ResponseCartCatalogPriceRulesListResult>>(){}.getType();
    }
    
    if ("ResponseCartCouponListResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ResponseCartCouponListResult>>(){}.getType();
    }
    
    if ("ResponseCartGiftcardListResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ResponseCartGiftcardListResult>>(){}.getType();
    }
    
    if ("ResponseCartMetaDataListResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ResponseCartMetaDataListResult>>(){}.getType();
    }
    
    if ("ResponseCartScriptListResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ResponseCartScriptListResult>>(){}.getType();
    }
    
    if ("ResponseCartShippingZonesListResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ResponseCartShippingZonesListResult>>(){}.getType();
    }
    
    if ("ResponseCategoryListResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ResponseCategoryListResult>>(){}.getType();
    }
    
    if ("ResponseCustomerAttributeListResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ResponseCustomerAttributeListResult>>(){}.getType();
    }
    
    if ("ResponseCustomerGroupListResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ResponseCustomerGroupListResult>>(){}.getType();
    }
    
    if ("ResponseCustomerListResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ResponseCustomerListResult>>(){}.getType();
    }
    
    if ("ResponseCustomerWishlistListResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ResponseCustomerWishlistListResult>>(){}.getType();
    }
    
    if ("ResponseMarketplaceProductFindResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ResponseMarketplaceProductFindResult>>(){}.getType();
    }
    
    if ("ResponseOrderAbandonedListResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ResponseOrderAbandonedListResult>>(){}.getType();
    }
    
    if ("ResponseOrderListResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ResponseOrderListResult>>(){}.getType();
    }
    
    if ("ResponseOrderPreestimateShippingListResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ResponseOrderPreestimateShippingListResult>>(){}.getType();
    }
    
    if ("ResponseOrderShipmentListResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ResponseOrderShipmentListResult>>(){}.getType();
    }
    
    if ("ResponseOrderStatusListResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ResponseOrderStatusListResult>>(){}.getType();
    }
    
    if ("ResponseOrderTransactionListResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ResponseOrderTransactionListResult>>(){}.getType();
    }
    
    if ("ResponseProductAttributeListResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ResponseProductAttributeListResult>>(){}.getType();
    }
    
    if ("ResponseProductBrandListResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ResponseProductBrandListResult>>(){}.getType();
    }
    
    if ("ResponseProductChildItemListResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ResponseProductChildItemListResult>>(){}.getType();
    }
    
    if ("ResponseProductCurrencyListResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ResponseProductCurrencyListResult>>(){}.getType();
    }
    
    if ("ResponseProductListResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ResponseProductListResult>>(){}.getType();
    }
    
    if ("ResponseProductOptionListResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ResponseProductOptionListResult>>(){}.getType();
    }
    
    if ("ResponseProductReviewListResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ResponseProductReviewListResult>>(){}.getType();
    }
    
    if ("ResponseReturnListResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ResponseReturnListResult>>(){}.getType();
    }
    
    if ("ResponseSubscriberListResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ResponseSubscriberListResult>>(){}.getType();
    }
    
    if ("ResponseTaxClassInfoResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ResponseTaxClassInfoResult>>(){}.getType();
    }
    
    if ("ResponseTaxClassListResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ResponseTaxClassListResult>>(){}.getType();
    }
    
    if ("ReturnAction".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReturnAction>>(){}.getType();
    }
    
    if ("ReturnActionList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReturnActionList200Response>>(){}.getType();
    }
    
    if ("ReturnActionList200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReturnActionList200ResponseResult>>(){}.getType();
    }
    
    if ("ReturnCount200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReturnCount200Response>>(){}.getType();
    }
    
    if ("ReturnCount200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReturnCount200ResponseResult>>(){}.getType();
    }
    
    if ("ReturnInfo200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReturnInfo200Response>>(){}.getType();
    }
    
    if ("ReturnOrderProduct".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReturnOrderProduct>>(){}.getType();
    }
    
    if ("ReturnReason".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReturnReason>>(){}.getType();
    }
    
    if ("ReturnReasonList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReturnReasonList200Response>>(){}.getType();
    }
    
    if ("ReturnReasonList200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReturnReasonList200ResponseResult>>(){}.getType();
    }
    
    if ("ReturnStatus".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReturnStatus>>(){}.getType();
    }
    
    if ("ReturnStatusList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReturnStatusList200Response>>(){}.getType();
    }
    
    if ("ReturnStatusList200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReturnStatusList200ResponseResult>>(){}.getType();
    }
    
    if ("Script".equalsIgnoreCase(className)) {
      return new TypeToken<List<Script>>(){}.getType();
    }
    
    if ("Shipment".equalsIgnoreCase(className)) {
      return new TypeToken<List<Shipment>>(){}.getType();
    }
    
    if ("ShipmentItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<ShipmentItem>>(){}.getType();
    }
    
    if ("ShipmentTrackingNumber".equalsIgnoreCase(className)) {
      return new TypeToken<List<ShipmentTrackingNumber>>(){}.getType();
    }
    
    if ("SpecialPrice".equalsIgnoreCase(className)) {
      return new TypeToken<List<SpecialPrice>>(){}.getType();
    }
    
    if ("State".equalsIgnoreCase(className)) {
      return new TypeToken<List<State>>(){}.getType();
    }
    
    if ("Status".equalsIgnoreCase(className)) {
      return new TypeToken<List<Status>>(){}.getType();
    }
    
    if ("StoreAttribute".equalsIgnoreCase(className)) {
      return new TypeToken<List<StoreAttribute>>(){}.getType();
    }
    
    if ("StoreAttributeAttributeSet".equalsIgnoreCase(className)) {
      return new TypeToken<List<StoreAttributeAttributeSet>>(){}.getType();
    }
    
    if ("StoreAttributeGroup".equalsIgnoreCase(className)) {
      return new TypeToken<List<StoreAttributeGroup>>(){}.getType();
    }
    
    if ("Subscriber".equalsIgnoreCase(className)) {
      return new TypeToken<List<Subscriber>>(){}.getType();
    }
    
    if ("TaxClass".equalsIgnoreCase(className)) {
      return new TypeToken<List<TaxClass>>(){}.getType();
    }
    
    if ("TaxClassCountries".equalsIgnoreCase(className)) {
      return new TypeToken<List<TaxClassCountries>>(){}.getType();
    }
    
    if ("TaxClassRate".equalsIgnoreCase(className)) {
      return new TypeToken<List<TaxClassRate>>(){}.getType();
    }
    
    if ("TaxClassStates".equalsIgnoreCase(className)) {
      return new TypeToken<List<TaxClassStates>>(){}.getType();
    }
    
    if ("TaxClassZipCodes".equalsIgnoreCase(className)) {
      return new TypeToken<List<TaxClassZipCodes>>(){}.getType();
    }
    
    if ("TaxClassZipCodesRange".equalsIgnoreCase(className)) {
      return new TypeToken<List<TaxClassZipCodesRange>>(){}.getType();
    }
    
    if ("Webhook".equalsIgnoreCase(className)) {
      return new TypeToken<List<Webhook>>(){}.getType();
    }
    
    if ("WebhookCount200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<WebhookCount200Response>>(){}.getType();
    }
    
    if ("WebhookCount200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<WebhookCount200ResponseResult>>(){}.getType();
    }
    
    if ("WebhookEvents200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<WebhookEvents200Response>>(){}.getType();
    }
    
    if ("WebhookEvents200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<WebhookEvents200ResponseResult>>(){}.getType();
    }
    
    if ("WebhookEvents200ResponseResultEventsInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<WebhookEvents200ResponseResultEventsInner>>(){}.getType();
    }
    
    if ("WebhookList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<List<WebhookList200Response>>(){}.getType();
    }
    
    if ("WebhookList200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<WebhookList200ResponseResult>>(){}.getType();
    }
    
    return new TypeToken<List<Object>>(){}.getType();
  }

  public static Type getTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("A2CDateTime".equalsIgnoreCase(className)) {
      return new TypeToken<A2CDateTime>(){}.getType();
    }
    
    if ("AccountCartAdd".equalsIgnoreCase(className)) {
      return new TypeToken<AccountCartAdd>(){}.getType();
    }
    
    if ("AccountCartAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<AccountCartAdd200Response>(){}.getType();
    }
    
    if ("AccountCartAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<AccountCartAdd200ResponseResult>(){}.getType();
    }
    
    if ("AccountCartAddHybrisWebsitesInner".equalsIgnoreCase(className)) {
      return new TypeToken<AccountCartAddHybrisWebsitesInner>(){}.getType();
    }
    
    if ("AccountCartList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<AccountCartList200Response>(){}.getType();
    }
    
    if ("AccountCartList200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<AccountCartList200ResponseResult>(){}.getType();
    }
    
    if ("AccountCartList200ResponseResultCartsInner".equalsIgnoreCase(className)) {
      return new TypeToken<AccountCartList200ResponseResultCartsInner>(){}.getType();
    }
    
    if ("AccountConfigUpdate200Response".equalsIgnoreCase(className)) {
      return new TypeToken<AccountConfigUpdate200Response>(){}.getType();
    }
    
    if ("AccountConfigUpdate200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<AccountConfigUpdate200ResponseResult>(){}.getType();
    }
    
    if ("AccountFailedWebhooks200Response".equalsIgnoreCase(className)) {
      return new TypeToken<AccountFailedWebhooks200Response>(){}.getType();
    }
    
    if ("AccountFailedWebhooks200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<AccountFailedWebhooks200ResponseResult>(){}.getType();
    }
    
    if ("AccountFailedWebhooks200ResponseResultWebhookInner".equalsIgnoreCase(className)) {
      return new TypeToken<AccountFailedWebhooks200ResponseResultWebhookInner>(){}.getType();
    }
    
    if ("AccountSupportedPlatforms200Response".equalsIgnoreCase(className)) {
      return new TypeToken<AccountSupportedPlatforms200Response>(){}.getType();
    }
    
    if ("AccountSupportedPlatforms200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<AccountSupportedPlatforms200ResponseResult>(){}.getType();
    }
    
    if ("AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner".equalsIgnoreCase(className)) {
      return new TypeToken<AccountSupportedPlatforms200ResponseResultSupportedPlatformsInner>(){}.getType();
    }
    
    if ("AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParams".equalsIgnoreCase(className)) {
      return new TypeToken<AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParams>(){}.getType();
    }
    
    if ("AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParamsRequiredInnerInner".equalsIgnoreCase(className)) {
      return new TypeToken<AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParamsRequiredInnerInner>(){}.getType();
    }
    
    if ("AttributeAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<AttributeAdd200Response>(){}.getType();
    }
    
    if ("AttributeAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<AttributeAdd200ResponseResult>(){}.getType();
    }
    
    if ("AttributeAssignGroup200Response".equalsIgnoreCase(className)) {
      return new TypeToken<AttributeAssignGroup200Response>(){}.getType();
    }
    
    if ("AttributeAssignGroup200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<AttributeAssignGroup200ResponseResult>(){}.getType();
    }
    
    if ("AttributeCount200Response".equalsIgnoreCase(className)) {
      return new TypeToken<AttributeCount200Response>(){}.getType();
    }
    
    if ("AttributeCount200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<AttributeCount200ResponseResult>(){}.getType();
    }
    
    if ("AttributeDelete200Response".equalsIgnoreCase(className)) {
      return new TypeToken<AttributeDelete200Response>(){}.getType();
    }
    
    if ("AttributeDelete200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<AttributeDelete200ResponseResult>(){}.getType();
    }
    
    if ("AttributeInfo200Response".equalsIgnoreCase(className)) {
      return new TypeToken<AttributeInfo200Response>(){}.getType();
    }
    
    if ("AttributeTypeList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<AttributeTypeList200Response>(){}.getType();
    }
    
    if ("AttributeTypeList200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<AttributeTypeList200ResponseResult>(){}.getType();
    }
    
    if ("AttributeUnassignGroup200Response".equalsIgnoreCase(className)) {
      return new TypeToken<AttributeUnassignGroup200Response>(){}.getType();
    }
    
    if ("AttributeUnassignGroup200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<AttributeUnassignGroup200ResponseResult>(){}.getType();
    }
    
    if ("AttributeUpdate200Response".equalsIgnoreCase(className)) {
      return new TypeToken<AttributeUpdate200Response>(){}.getType();
    }
    
    if ("AttributeUpdate200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<AttributeUpdate200ResponseResult>(){}.getType();
    }
    
    if ("AttributeValueDelete200Response".equalsIgnoreCase(className)) {
      return new TypeToken<AttributeValueDelete200Response>(){}.getType();
    }
    
    if ("AttributeValueDelete200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<AttributeValueDelete200ResponseResult>(){}.getType();
    }
    
    if ("BaseCustomer".equalsIgnoreCase(className)) {
      return new TypeToken<BaseCustomer>(){}.getType();
    }
    
    if ("Basket".equalsIgnoreCase(className)) {
      return new TypeToken<Basket>(){}.getType();
    }
    
    if ("BasketInfo200Response".equalsIgnoreCase(className)) {
      return new TypeToken<BasketInfo200Response>(){}.getType();
    }
    
    if ("BasketItem".equalsIgnoreCase(className)) {
      return new TypeToken<BasketItem>(){}.getType();
    }
    
    if ("BasketItemAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<BasketItemAdd200Response>(){}.getType();
    }
    
    if ("BasketItemAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<BasketItemAdd200ResponseResult>(){}.getType();
    }
    
    if ("BasketItemOption".equalsIgnoreCase(className)) {
      return new TypeToken<BasketItemOption>(){}.getType();
    }
    
    if ("BasketLiveShippingService".equalsIgnoreCase(className)) {
      return new TypeToken<BasketLiveShippingService>(){}.getType();
    }
    
    if ("BasketLiveShippingServiceCreate200Response".equalsIgnoreCase(className)) {
      return new TypeToken<BasketLiveShippingServiceCreate200Response>(){}.getType();
    }
    
    if ("BasketLiveShippingServiceCreate200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<BasketLiveShippingServiceCreate200ResponseResult>(){}.getType();
    }
    
    if ("BasketLiveShippingServiceDelete200Response".equalsIgnoreCase(className)) {
      return new TypeToken<BasketLiveShippingServiceDelete200Response>(){}.getType();
    }
    
    if ("BasketLiveShippingServiceDelete200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<BasketLiveShippingServiceDelete200ResponseResult>(){}.getType();
    }
    
    if ("BasketLiveShippingServiceList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<BasketLiveShippingServiceList200Response>(){}.getType();
    }
    
    if ("BasketLiveShippingServiceList200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<BasketLiveShippingServiceList200ResponseResult>(){}.getType();
    }
    
    if ("BatchJob".equalsIgnoreCase(className)) {
      return new TypeToken<BatchJob>(){}.getType();
    }
    
    if ("BatchJobResult".equalsIgnoreCase(className)) {
      return new TypeToken<BatchJobResult>(){}.getType();
    }
    
    if ("BatchJobResultItem".equalsIgnoreCase(className)) {
      return new TypeToken<BatchJobResultItem>(){}.getType();
    }
    
    if ("Brand".equalsIgnoreCase(className)) {
      return new TypeToken<Brand>(){}.getType();
    }
    
    if ("Carrier".equalsIgnoreCase(className)) {
      return new TypeToken<Carrier>(){}.getType();
    }
    
    if ("Cart".equalsIgnoreCase(className)) {
      return new TypeToken<Cart>(){}.getType();
    }
    
    if ("CartCatalogPriceRulesCount200Response".equalsIgnoreCase(className)) {
      return new TypeToken<CartCatalogPriceRulesCount200Response>(){}.getType();
    }
    
    if ("CartCatalogPriceRulesCount200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<CartCatalogPriceRulesCount200ResponseResult>(){}.getType();
    }
    
    if ("CartChannel".equalsIgnoreCase(className)) {
      return new TypeToken<CartChannel>(){}.getType();
    }
    
    if ("CartCouponAdd".equalsIgnoreCase(className)) {
      return new TypeToken<CartCouponAdd>(){}.getType();
    }
    
    if ("CartCouponAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<CartCouponAdd200Response>(){}.getType();
    }
    
    if ("CartCouponAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<CartCouponAdd200ResponseResult>(){}.getType();
    }
    
    if ("CartCouponCount200Response".equalsIgnoreCase(className)) {
      return new TypeToken<CartCouponCount200Response>(){}.getType();
    }
    
    if ("CartCouponCount200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<CartCouponCount200ResponseResult>(){}.getType();
    }
    
    if ("CartDelete200Response".equalsIgnoreCase(className)) {
      return new TypeToken<CartDelete200Response>(){}.getType();
    }
    
    if ("CartDelete200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<CartDelete200ResponseResult>(){}.getType();
    }
    
    if ("CartGiftcardAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<CartGiftcardAdd200Response>(){}.getType();
    }
    
    if ("CartGiftcardAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<CartGiftcardAdd200ResponseResult>(){}.getType();
    }
    
    if ("CartGiftcardCount200Response".equalsIgnoreCase(className)) {
      return new TypeToken<CartGiftcardCount200Response>(){}.getType();
    }
    
    if ("CartGiftcardCount200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<CartGiftcardCount200ResponseResult>(){}.getType();
    }
    
    if ("CartInfo200Response".equalsIgnoreCase(className)) {
      return new TypeToken<CartInfo200Response>(){}.getType();
    }
    
    if ("CartMetaData".equalsIgnoreCase(className)) {
      return new TypeToken<CartMetaData>(){}.getType();
    }
    
    if ("CartMethods200Response".equalsIgnoreCase(className)) {
      return new TypeToken<CartMethods200Response>(){}.getType();
    }
    
    if ("CartMethods200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<CartMethods200ResponseResult>(){}.getType();
    }
    
    if ("CartPluginList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<CartPluginList200Response>(){}.getType();
    }
    
    if ("CartPluginList200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<CartPluginList200ResponseResult>(){}.getType();
    }
    
    if ("CartScriptAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<CartScriptAdd200Response>(){}.getType();
    }
    
    if ("CartScriptAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<CartScriptAdd200ResponseResult>(){}.getType();
    }
    
    if ("CartShippingMethod".equalsIgnoreCase(className)) {
      return new TypeToken<CartShippingMethod>(){}.getType();
    }
    
    if ("CartShippingMethodRate".equalsIgnoreCase(className)) {
      return new TypeToken<CartShippingMethodRate>(){}.getType();
    }
    
    if ("CartShippingZone".equalsIgnoreCase(className)) {
      return new TypeToken<CartShippingZone>(){}.getType();
    }
    
    if ("CartShippingZone2".equalsIgnoreCase(className)) {
      return new TypeToken<CartShippingZone2>(){}.getType();
    }
    
    if ("CartStoreInfo".equalsIgnoreCase(className)) {
      return new TypeToken<CartStoreInfo>(){}.getType();
    }
    
    if ("CartValidate200Response".equalsIgnoreCase(className)) {
      return new TypeToken<CartValidate200Response>(){}.getType();
    }
    
    if ("CartValidate200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<CartValidate200ResponseResult>(){}.getType();
    }
    
    if ("CartWarehouse".equalsIgnoreCase(className)) {
      return new TypeToken<CartWarehouse>(){}.getType();
    }
    
    if ("CatalogPriceRule".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogPriceRule>(){}.getType();
    }
    
    if ("CatalogPriceRuleAction".equalsIgnoreCase(className)) {
      return new TypeToken<CatalogPriceRuleAction>(){}.getType();
    }
    
    if ("Category".equalsIgnoreCase(className)) {
      return new TypeToken<Category>(){}.getType();
    }
    
    if ("CategoryAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<CategoryAdd200Response>(){}.getType();
    }
    
    if ("CategoryAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<CategoryAdd200ResponseResult>(){}.getType();
    }
    
    if ("CategoryAddBatch".equalsIgnoreCase(className)) {
      return new TypeToken<CategoryAddBatch>(){}.getType();
    }
    
    if ("CategoryAddBatch200Response".equalsIgnoreCase(className)) {
      return new TypeToken<CategoryAddBatch200Response>(){}.getType();
    }
    
    if ("CategoryAddBatch200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<CategoryAddBatch200ResponseResult>(){}.getType();
    }
    
    if ("CategoryAddBatchPayloadInner".equalsIgnoreCase(className)) {
      return new TypeToken<CategoryAddBatchPayloadInner>(){}.getType();
    }
    
    if ("CategoryAddBatchPayloadInnerImagesInner".equalsIgnoreCase(className)) {
      return new TypeToken<CategoryAddBatchPayloadInnerImagesInner>(){}.getType();
    }
    
    if ("CategoryAssign200Response".equalsIgnoreCase(className)) {
      return new TypeToken<CategoryAssign200Response>(){}.getType();
    }
    
    if ("CategoryCount200Response".equalsIgnoreCase(className)) {
      return new TypeToken<CategoryCount200Response>(){}.getType();
    }
    
    if ("CategoryCount200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<CategoryCount200ResponseResult>(){}.getType();
    }
    
    if ("CategoryDelete200Response".equalsIgnoreCase(className)) {
      return new TypeToken<CategoryDelete200Response>(){}.getType();
    }
    
    if ("CategoryDelete200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<CategoryDelete200ResponseResult>(){}.getType();
    }
    
    if ("CategoryFind200Response".equalsIgnoreCase(className)) {
      return new TypeToken<CategoryFind200Response>(){}.getType();
    }
    
    if ("CategoryFind200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<CategoryFind200ResponseResult>(){}.getType();
    }
    
    if ("CategoryFind200ResponseResultCategoryInner".equalsIgnoreCase(className)) {
      return new TypeToken<CategoryFind200ResponseResultCategoryInner>(){}.getType();
    }
    
    if ("CategoryImageAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<CategoryImageAdd200Response>(){}.getType();
    }
    
    if ("CategoryImageAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<CategoryImageAdd200ResponseResult>(){}.getType();
    }
    
    if ("CategoryInfo200Response".equalsIgnoreCase(className)) {
      return new TypeToken<CategoryInfo200Response>(){}.getType();
    }
    
    if ("Child".equalsIgnoreCase(className)) {
      return new TypeToken<Child>(){}.getType();
    }
    
    if ("Country".equalsIgnoreCase(className)) {
      return new TypeToken<Country>(){}.getType();
    }
    
    if ("Coupon".equalsIgnoreCase(className)) {
      return new TypeToken<Coupon>(){}.getType();
    }
    
    if ("CouponAction".equalsIgnoreCase(className)) {
      return new TypeToken<CouponAction>(){}.getType();
    }
    
    if ("CouponCode".equalsIgnoreCase(className)) {
      return new TypeToken<CouponCode>(){}.getType();
    }
    
    if ("CouponCondition".equalsIgnoreCase(className)) {
      return new TypeToken<CouponCondition>(){}.getType();
    }
    
    if ("CouponHistory".equalsIgnoreCase(className)) {
      return new TypeToken<CouponHistory>(){}.getType();
    }
    
    if ("Currency".equalsIgnoreCase(className)) {
      return new TypeToken<Currency>(){}.getType();
    }
    
    if ("Customer".equalsIgnoreCase(className)) {
      return new TypeToken<Customer>(){}.getType();
    }
    
    if ("CustomerAdd".equalsIgnoreCase(className)) {
      return new TypeToken<CustomerAdd>(){}.getType();
    }
    
    if ("CustomerAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<CustomerAdd200Response>(){}.getType();
    }
    
    if ("CustomerAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<CustomerAdd200ResponseResult>(){}.getType();
    }
    
    if ("CustomerAddAddressInner".equalsIgnoreCase(className)) {
      return new TypeToken<CustomerAddAddressInner>(){}.getType();
    }
    
    if ("CustomerAddConsentsInner".equalsIgnoreCase(className)) {
      return new TypeToken<CustomerAddConsentsInner>(){}.getType();
    }
    
    if ("CustomerAddress".equalsIgnoreCase(className)) {
      return new TypeToken<CustomerAddress>(){}.getType();
    }
    
    if ("CustomerAddressAdd".equalsIgnoreCase(className)) {
      return new TypeToken<CustomerAddressAdd>(){}.getType();
    }
    
    if ("CustomerAttribute".equalsIgnoreCase(className)) {
      return new TypeToken<CustomerAttribute>(){}.getType();
    }
    
    if ("CustomerAttributeValue".equalsIgnoreCase(className)) {
      return new TypeToken<CustomerAttributeValue>(){}.getType();
    }
    
    if ("CustomerConsent".equalsIgnoreCase(className)) {
      return new TypeToken<CustomerConsent>(){}.getType();
    }
    
    if ("CustomerCount200Response".equalsIgnoreCase(className)) {
      return new TypeToken<CustomerCount200Response>(){}.getType();
    }
    
    if ("CustomerCount200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<CustomerCount200ResponseResult>(){}.getType();
    }
    
    if ("CustomerDelete200Response".equalsIgnoreCase(className)) {
      return new TypeToken<CustomerDelete200Response>(){}.getType();
    }
    
    if ("CustomerDelete200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<CustomerDelete200ResponseResult>(){}.getType();
    }
    
    if ("CustomerFind200Response".equalsIgnoreCase(className)) {
      return new TypeToken<CustomerFind200Response>(){}.getType();
    }
    
    if ("CustomerFind200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<CustomerFind200ResponseResult>(){}.getType();
    }
    
    if ("CustomerGroup".equalsIgnoreCase(className)) {
      return new TypeToken<CustomerGroup>(){}.getType();
    }
    
    if ("CustomerGroupAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<CustomerGroupAdd200Response>(){}.getType();
    }
    
    if ("CustomerGroupAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<CustomerGroupAdd200ResponseResult>(){}.getType();
    }
    
    if ("CustomerInfo200Response".equalsIgnoreCase(className)) {
      return new TypeToken<CustomerInfo200Response>(){}.getType();
    }
    
    if ("CustomerUpdate".equalsIgnoreCase(className)) {
      return new TypeToken<CustomerUpdate>(){}.getType();
    }
    
    if ("CustomerUpdateAddressInner".equalsIgnoreCase(className)) {
      return new TypeToken<CustomerUpdateAddressInner>(){}.getType();
    }
    
    if ("CustomerWishList".equalsIgnoreCase(className)) {
      return new TypeToken<CustomerWishList>(){}.getType();
    }
    
    if ("CustomerWishListItem".equalsIgnoreCase(className)) {
      return new TypeToken<CustomerWishListItem>(){}.getType();
    }
    
    if ("Discount".equalsIgnoreCase(className)) {
      return new TypeToken<Discount>(){}.getType();
    }
    
    if ("GiftCard".equalsIgnoreCase(className)) {
      return new TypeToken<GiftCard>(){}.getType();
    }
    
    if ("Image".equalsIgnoreCase(className)) {
      return new TypeToken<Image>(){}.getType();
    }
    
    if ("Info".equalsIgnoreCase(className)) {
      return new TypeToken<Info>(){}.getType();
    }
    
    if ("Language".equalsIgnoreCase(className)) {
      return new TypeToken<Language>(){}.getType();
    }
    
    if ("MarketplaceProduct".equalsIgnoreCase(className)) {
      return new TypeToken<MarketplaceProduct>(){}.getType();
    }
    
    if ("Media".equalsIgnoreCase(className)) {
      return new TypeToken<Media>(){}.getType();
    }
    
    if ("ModelResponseAttributeAttributesetList".equalsIgnoreCase(className)) {
      return new TypeToken<ModelResponseAttributeAttributesetList>(){}.getType();
    }
    
    if ("ModelResponseAttributeGroupList".equalsIgnoreCase(className)) {
      return new TypeToken<ModelResponseAttributeGroupList>(){}.getType();
    }
    
    if ("ModelResponseAttributeList".equalsIgnoreCase(className)) {
      return new TypeToken<ModelResponseAttributeList>(){}.getType();
    }
    
    if ("ModelResponseBatchJobList".equalsIgnoreCase(className)) {
      return new TypeToken<ModelResponseBatchJobList>(){}.getType();
    }
    
    if ("ModelResponseCartCatalogPriceRulesList".equalsIgnoreCase(className)) {
      return new TypeToken<ModelResponseCartCatalogPriceRulesList>(){}.getType();
    }
    
    if ("ModelResponseCartCouponList".equalsIgnoreCase(className)) {
      return new TypeToken<ModelResponseCartCouponList>(){}.getType();
    }
    
    if ("ModelResponseCartGiftCardList".equalsIgnoreCase(className)) {
      return new TypeToken<ModelResponseCartGiftCardList>(){}.getType();
    }
    
    if ("ModelResponseCartMetaDataList".equalsIgnoreCase(className)) {
      return new TypeToken<ModelResponseCartMetaDataList>(){}.getType();
    }
    
    if ("ModelResponseCartScriptList".equalsIgnoreCase(className)) {
      return new TypeToken<ModelResponseCartScriptList>(){}.getType();
    }
    
    if ("ModelResponseCartShippingZonesList".equalsIgnoreCase(className)) {
      return new TypeToken<ModelResponseCartShippingZonesList>(){}.getType();
    }
    
    if ("ModelResponseCategoryList".equalsIgnoreCase(className)) {
      return new TypeToken<ModelResponseCategoryList>(){}.getType();
    }
    
    if ("ModelResponseCustomerAttributeList".equalsIgnoreCase(className)) {
      return new TypeToken<ModelResponseCustomerAttributeList>(){}.getType();
    }
    
    if ("ModelResponseCustomerGroupList".equalsIgnoreCase(className)) {
      return new TypeToken<ModelResponseCustomerGroupList>(){}.getType();
    }
    
    if ("ModelResponseCustomerList".equalsIgnoreCase(className)) {
      return new TypeToken<ModelResponseCustomerList>(){}.getType();
    }
    
    if ("ModelResponseCustomerWishlistList".equalsIgnoreCase(className)) {
      return new TypeToken<ModelResponseCustomerWishlistList>(){}.getType();
    }
    
    if ("ModelResponseMarketplaceProductFind".equalsIgnoreCase(className)) {
      return new TypeToken<ModelResponseMarketplaceProductFind>(){}.getType();
    }
    
    if ("ModelResponseOrderAbandonedList".equalsIgnoreCase(className)) {
      return new TypeToken<ModelResponseOrderAbandonedList>(){}.getType();
    }
    
    if ("ModelResponseOrderList".equalsIgnoreCase(className)) {
      return new TypeToken<ModelResponseOrderList>(){}.getType();
    }
    
    if ("ModelResponseOrderPreestimateShippingList".equalsIgnoreCase(className)) {
      return new TypeToken<ModelResponseOrderPreestimateShippingList>(){}.getType();
    }
    
    if ("ModelResponseOrderShipmentList".equalsIgnoreCase(className)) {
      return new TypeToken<ModelResponseOrderShipmentList>(){}.getType();
    }
    
    if ("ModelResponseOrderStatusList".equalsIgnoreCase(className)) {
      return new TypeToken<ModelResponseOrderStatusList>(){}.getType();
    }
    
    if ("ModelResponseOrderTransactionList".equalsIgnoreCase(className)) {
      return new TypeToken<ModelResponseOrderTransactionList>(){}.getType();
    }
    
    if ("ModelResponseProductAttributeList".equalsIgnoreCase(className)) {
      return new TypeToken<ModelResponseProductAttributeList>(){}.getType();
    }
    
    if ("ModelResponseProductBrandList".equalsIgnoreCase(className)) {
      return new TypeToken<ModelResponseProductBrandList>(){}.getType();
    }
    
    if ("ModelResponseProductChildItemList".equalsIgnoreCase(className)) {
      return new TypeToken<ModelResponseProductChildItemList>(){}.getType();
    }
    
    if ("ModelResponseProductCurrencyList".equalsIgnoreCase(className)) {
      return new TypeToken<ModelResponseProductCurrencyList>(){}.getType();
    }
    
    if ("ModelResponseProductList".equalsIgnoreCase(className)) {
      return new TypeToken<ModelResponseProductList>(){}.getType();
    }
    
    if ("ModelResponseProductOptionList".equalsIgnoreCase(className)) {
      return new TypeToken<ModelResponseProductOptionList>(){}.getType();
    }
    
    if ("ModelResponseProductReviewList".equalsIgnoreCase(className)) {
      return new TypeToken<ModelResponseProductReviewList>(){}.getType();
    }
    
    if ("ModelResponseReturnList".equalsIgnoreCase(className)) {
      return new TypeToken<ModelResponseReturnList>(){}.getType();
    }
    
    if ("ModelResponseSubscriberList".equalsIgnoreCase(className)) {
      return new TypeToken<ModelResponseSubscriberList>(){}.getType();
    }
    
    if ("ModelResponseTaxClassInfo".equalsIgnoreCase(className)) {
      return new TypeToken<ModelResponseTaxClassInfo>(){}.getType();
    }
    
    if ("ModelResponseTaxClassList".equalsIgnoreCase(className)) {
      return new TypeToken<ModelResponseTaxClassList>(){}.getType();
    }
    
    if ("ModelReturn".equalsIgnoreCase(className)) {
      return new TypeToken<ModelReturn>(){}.getType();
    }
    
    if ("Order".equalsIgnoreCase(className)) {
      return new TypeToken<Order>(){}.getType();
    }
    
    if ("OrderAbandoned".equalsIgnoreCase(className)) {
      return new TypeToken<OrderAbandoned>(){}.getType();
    }
    
    if ("OrderAdd".equalsIgnoreCase(className)) {
      return new TypeToken<OrderAdd>(){}.getType();
    }
    
    if ("OrderAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<OrderAdd200Response>(){}.getType();
    }
    
    if ("OrderAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<OrderAdd200ResponseResult>(){}.getType();
    }
    
    if ("OrderAddNoteAttributesInner".equalsIgnoreCase(className)) {
      return new TypeToken<OrderAddNoteAttributesInner>(){}.getType();
    }
    
    if ("OrderAddOrderItemInner".equalsIgnoreCase(className)) {
      return new TypeToken<OrderAddOrderItemInner>(){}.getType();
    }
    
    if ("OrderAddOrderItemInnerOrderItemOptionInner".equalsIgnoreCase(className)) {
      return new TypeToken<OrderAddOrderItemInnerOrderItemOptionInner>(){}.getType();
    }
    
    if ("OrderAddOrderItemInnerOrderItemPropertyInner".equalsIgnoreCase(className)) {
      return new TypeToken<OrderAddOrderItemInnerOrderItemPropertyInner>(){}.getType();
    }
    
    if ("OrderCount200Response".equalsIgnoreCase(className)) {
      return new TypeToken<OrderCount200Response>(){}.getType();
    }
    
    if ("OrderCount200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<OrderCount200ResponseResult>(){}.getType();
    }
    
    if ("OrderFinancialStatusList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<OrderFinancialStatusList200Response>(){}.getType();
    }
    
    if ("OrderFinancialStatusList200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<OrderFinancialStatusList200ResponseResult>(){}.getType();
    }
    
    if ("OrderFinancialStatusList200ResponseResultOrderFinancialStatusesInner".equalsIgnoreCase(className)) {
      return new TypeToken<OrderFinancialStatusList200ResponseResultOrderFinancialStatusesInner>(){}.getType();
    }
    
    if ("OrderFulfillmentStatusList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<OrderFulfillmentStatusList200Response>(){}.getType();
    }
    
    if ("OrderFulfillmentStatusList200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<OrderFulfillmentStatusList200ResponseResult>(){}.getType();
    }
    
    if ("OrderInfo200Response".equalsIgnoreCase(className)) {
      return new TypeToken<OrderInfo200Response>(){}.getType();
    }
    
    if ("OrderItem".equalsIgnoreCase(className)) {
      return new TypeToken<OrderItem>(){}.getType();
    }
    
    if ("OrderItemOption".equalsIgnoreCase(className)) {
      return new TypeToken<OrderItemOption>(){}.getType();
    }
    
    if ("OrderPaymentMethod".equalsIgnoreCase(className)) {
      return new TypeToken<OrderPaymentMethod>(){}.getType();
    }
    
    if ("OrderPreestimateShipping".equalsIgnoreCase(className)) {
      return new TypeToken<OrderPreestimateShipping>(){}.getType();
    }
    
    if ("OrderPreestimateShippingList".equalsIgnoreCase(className)) {
      return new TypeToken<OrderPreestimateShippingList>(){}.getType();
    }
    
    if ("OrderPreestimateShippingListOrderItemInner".equalsIgnoreCase(className)) {
      return new TypeToken<OrderPreestimateShippingListOrderItemInner>(){}.getType();
    }
    
    if ("OrderPreestimateShippingListOrderItemInnerOrderItemOptionInner".equalsIgnoreCase(className)) {
      return new TypeToken<OrderPreestimateShippingListOrderItemInnerOrderItemOptionInner>(){}.getType();
    }
    
    if ("OrderRefund".equalsIgnoreCase(className)) {
      return new TypeToken<OrderRefund>(){}.getType();
    }
    
    if ("OrderRefundAdd".equalsIgnoreCase(className)) {
      return new TypeToken<OrderRefundAdd>(){}.getType();
    }
    
    if ("OrderRefundAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<OrderRefundAdd200Response>(){}.getType();
    }
    
    if ("OrderRefundAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<OrderRefundAdd200ResponseResult>(){}.getType();
    }
    
    if ("OrderRefundAddItemsInner".equalsIgnoreCase(className)) {
      return new TypeToken<OrderRefundAddItemsInner>(){}.getType();
    }
    
    if ("OrderReturnAdd".equalsIgnoreCase(className)) {
      return new TypeToken<OrderReturnAdd>(){}.getType();
    }
    
    if ("OrderReturnAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<OrderReturnAdd200Response>(){}.getType();
    }
    
    if ("OrderReturnAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<OrderReturnAdd200ResponseResult>(){}.getType();
    }
    
    if ("OrderReturnAddOrderProductsInner".equalsIgnoreCase(className)) {
      return new TypeToken<OrderReturnAddOrderProductsInner>(){}.getType();
    }
    
    if ("OrderReturnUpdate".equalsIgnoreCase(className)) {
      return new TypeToken<OrderReturnUpdate>(){}.getType();
    }
    
    if ("OrderReturnUpdateOrderProductsInner".equalsIgnoreCase(className)) {
      return new TypeToken<OrderReturnUpdateOrderProductsInner>(){}.getType();
    }
    
    if ("OrderShipmentAdd".equalsIgnoreCase(className)) {
      return new TypeToken<OrderShipmentAdd>(){}.getType();
    }
    
    if ("OrderShipmentAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<OrderShipmentAdd200Response>(){}.getType();
    }
    
    if ("OrderShipmentAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<OrderShipmentAdd200ResponseResult>(){}.getType();
    }
    
    if ("OrderShipmentAddBatch".equalsIgnoreCase(className)) {
      return new TypeToken<OrderShipmentAddBatch>(){}.getType();
    }
    
    if ("OrderShipmentAddBatchPayloadInner".equalsIgnoreCase(className)) {
      return new TypeToken<OrderShipmentAddBatchPayloadInner>(){}.getType();
    }
    
    if ("OrderShipmentAddBatchPayloadInnerItemsInner".equalsIgnoreCase(className)) {
      return new TypeToken<OrderShipmentAddBatchPayloadInnerItemsInner>(){}.getType();
    }
    
    if ("OrderShipmentAddItemsInner".equalsIgnoreCase(className)) {
      return new TypeToken<OrderShipmentAddItemsInner>(){}.getType();
    }
    
    if ("OrderShipmentAddTrackingNumbersInner".equalsIgnoreCase(className)) {
      return new TypeToken<OrderShipmentAddTrackingNumbersInner>(){}.getType();
    }
    
    if ("OrderShipmentDelete200Response".equalsIgnoreCase(className)) {
      return new TypeToken<OrderShipmentDelete200Response>(){}.getType();
    }
    
    if ("OrderShipmentDelete200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<OrderShipmentDelete200ResponseResult>(){}.getType();
    }
    
    if ("OrderShipmentInfo200Response".equalsIgnoreCase(className)) {
      return new TypeToken<OrderShipmentInfo200Response>(){}.getType();
    }
    
    if ("OrderShipmentTrackingAdd".equalsIgnoreCase(className)) {
      return new TypeToken<OrderShipmentTrackingAdd>(){}.getType();
    }
    
    if ("OrderShipmentTrackingAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<OrderShipmentTrackingAdd200Response>(){}.getType();
    }
    
    if ("OrderShipmentTrackingAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<OrderShipmentTrackingAdd200ResponseResult>(){}.getType();
    }
    
    if ("OrderShipmentUpdate".equalsIgnoreCase(className)) {
      return new TypeToken<OrderShipmentUpdate>(){}.getType();
    }
    
    if ("OrderShippingMethod".equalsIgnoreCase(className)) {
      return new TypeToken<OrderShippingMethod>(){}.getType();
    }
    
    if ("OrderStatus".equalsIgnoreCase(className)) {
      return new TypeToken<OrderStatus>(){}.getType();
    }
    
    if ("OrderStatusHistoryItem".equalsIgnoreCase(className)) {
      return new TypeToken<OrderStatusHistoryItem>(){}.getType();
    }
    
    if ("OrderStatusRefund".equalsIgnoreCase(className)) {
      return new TypeToken<OrderStatusRefund>(){}.getType();
    }
    
    if ("OrderStatusRefundItem".equalsIgnoreCase(className)) {
      return new TypeToken<OrderStatusRefundItem>(){}.getType();
    }
    
    if ("OrderTotal".equalsIgnoreCase(className)) {
      return new TypeToken<OrderTotal>(){}.getType();
    }
    
    if ("OrderTotals".equalsIgnoreCase(className)) {
      return new TypeToken<OrderTotals>(){}.getType();
    }
    
    if ("OrderTotalsNewDiscount".equalsIgnoreCase(className)) {
      return new TypeToken<OrderTotalsNewDiscount>(){}.getType();
    }
    
    if ("OrderTransaction".equalsIgnoreCase(className)) {
      return new TypeToken<OrderTransaction>(){}.getType();
    }
    
    if ("Pagination".equalsIgnoreCase(className)) {
      return new TypeToken<Pagination>(){}.getType();
    }
    
    if ("Plugin".equalsIgnoreCase(className)) {
      return new TypeToken<Plugin>(){}.getType();
    }
    
    if ("PluginList".equalsIgnoreCase(className)) {
      return new TypeToken<PluginList>(){}.getType();
    }
    
    if ("Product".equalsIgnoreCase(className)) {
      return new TypeToken<Product>(){}.getType();
    }
    
    if ("ProductAdd".equalsIgnoreCase(className)) {
      return new TypeToken<ProductAdd>(){}.getType();
    }
    
    if ("ProductAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<ProductAdd200Response>(){}.getType();
    }
    
    if ("ProductAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<ProductAdd200ResponseResult>(){}.getType();
    }
    
    if ("ProductAddBatch".equalsIgnoreCase(className)) {
      return new TypeToken<ProductAddBatch>(){}.getType();
    }
    
    if ("ProductAddBatchPayloadInner".equalsIgnoreCase(className)) {
      return new TypeToken<ProductAddBatchPayloadInner>(){}.getType();
    }
    
    if ("ProductAddBatchPayloadInnerAdvancedPricesInner".equalsIgnoreCase(className)) {
      return new TypeToken<ProductAddBatchPayloadInnerAdvancedPricesInner>(){}.getType();
    }
    
    if ("ProductAddBatchPayloadInnerImagesInner".equalsIgnoreCase(className)) {
      return new TypeToken<ProductAddBatchPayloadInnerImagesInner>(){}.getType();
    }
    
    if ("ProductAddBestOffer".equalsIgnoreCase(className)) {
      return new TypeToken<ProductAddBestOffer>(){}.getType();
    }
    
    if ("ProductAddCertificationsInner".equalsIgnoreCase(className)) {
      return new TypeToken<ProductAddCertificationsInner>(){}.getType();
    }
    
    if ("ProductAddCertificationsInnerFilesInner".equalsIgnoreCase(className)) {
      return new TypeToken<ProductAddCertificationsInnerFilesInner>(){}.getType();
    }
    
    if ("ProductAddCertificationsInnerImagesInner".equalsIgnoreCase(className)) {
      return new TypeToken<ProductAddCertificationsInnerImagesInner>(){}.getType();
    }
    
    if ("ProductAddFilesInner".equalsIgnoreCase(className)) {
      return new TypeToken<ProductAddFilesInner>(){}.getType();
    }
    
    if ("ProductAddGroupPricesInner".equalsIgnoreCase(className)) {
      return new TypeToken<ProductAddGroupPricesInner>(){}.getType();
    }
    
    if ("ProductAddLogisticInfoInner".equalsIgnoreCase(className)) {
      return new TypeToken<ProductAddLogisticInfoInner>(){}.getType();
    }
    
    if ("ProductAddManufacturerInfo".equalsIgnoreCase(className)) {
      return new TypeToken<ProductAddManufacturerInfo>(){}.getType();
    }
    
    if ("ProductAddPackageDetails".equalsIgnoreCase(className)) {
      return new TypeToken<ProductAddPackageDetails>(){}.getType();
    }
    
    if ("ProductAddPersonalizationDetails".equalsIgnoreCase(className)) {
      return new TypeToken<ProductAddPersonalizationDetails>(){}.getType();
    }
    
    if ("ProductAddSalesTax".equalsIgnoreCase(className)) {
      return new TypeToken<ProductAddSalesTax>(){}.getType();
    }
    
    if ("ProductAddSellerProfiles".equalsIgnoreCase(className)) {
      return new TypeToken<ProductAddSellerProfiles>(){}.getType();
    }
    
    if ("ProductAddShippingDetailsInner".equalsIgnoreCase(className)) {
      return new TypeToken<ProductAddShippingDetailsInner>(){}.getType();
    }
    
    if ("ProductAddSizeChart".equalsIgnoreCase(className)) {
      return new TypeToken<ProductAddSizeChart>(){}.getType();
    }
    
    if ("ProductAddSpecificsInner".equalsIgnoreCase(className)) {
      return new TypeToken<ProductAddSpecificsInner>(){}.getType();
    }
    
    if ("ProductAddSpecificsInnerBookingDetails".equalsIgnoreCase(className)) {
      return new TypeToken<ProductAddSpecificsInnerBookingDetails>(){}.getType();
    }
    
    if ("ProductAddSpecificsInnerBookingDetailsAvailabilitiesInner".equalsIgnoreCase(className)) {
      return new TypeToken<ProductAddSpecificsInnerBookingDetailsAvailabilitiesInner>(){}.getType();
    }
    
    if ("ProductAddSpecificsInnerBookingDetailsAvailabilitiesInnerTimesInner".equalsIgnoreCase(className)) {
      return new TypeToken<ProductAddSpecificsInnerBookingDetailsAvailabilitiesInnerTimesInner>(){}.getType();
    }
    
    if ("ProductAddSpecificsInnerBookingDetailsOverridesInner".equalsIgnoreCase(className)) {
      return new TypeToken<ProductAddSpecificsInnerBookingDetailsOverridesInner>(){}.getType();
    }
    
    if ("ProductAddSpecificsInnerFoodDetails".equalsIgnoreCase(className)) {
      return new TypeToken<ProductAddSpecificsInnerFoodDetails>(){}.getType();
    }
    
    if ("ProductAddSpecificsInnerGroupProductsDetailsInner".equalsIgnoreCase(className)) {
      return new TypeToken<ProductAddSpecificsInnerGroupProductsDetailsInner>(){}.getType();
    }
    
    if ("ProductAddTierPricesInner".equalsIgnoreCase(className)) {
      return new TypeToken<ProductAddTierPricesInner>(){}.getType();
    }
    
    if ("ProductAdvancedPrice".equalsIgnoreCase(className)) {
      return new TypeToken<ProductAdvancedPrice>(){}.getType();
    }
    
    if ("ProductAttribute".equalsIgnoreCase(className)) {
      return new TypeToken<ProductAttribute>(){}.getType();
    }
    
    if ("ProductAttributeValueSet200Response".equalsIgnoreCase(className)) {
      return new TypeToken<ProductAttributeValueSet200Response>(){}.getType();
    }
    
    if ("ProductAttributeValueSet200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<ProductAttributeValueSet200ResponseResult>(){}.getType();
    }
    
    if ("ProductAttributeValueUnset200Response".equalsIgnoreCase(className)) {
      return new TypeToken<ProductAttributeValueUnset200Response>(){}.getType();
    }
    
    if ("ProductAttributeValueUnset200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<ProductAttributeValueUnset200ResponseResult>(){}.getType();
    }
    
    if ("ProductChildItemCombination".equalsIgnoreCase(className)) {
      return new TypeToken<ProductChildItemCombination>(){}.getType();
    }
    
    if ("ProductChildItemFind200Response".equalsIgnoreCase(className)) {
      return new TypeToken<ProductChildItemFind200Response>(){}.getType();
    }
    
    if ("ProductChildItemFind200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<ProductChildItemFind200ResponseResult>(){}.getType();
    }
    
    if ("ProductChildItemInfo200Response".equalsIgnoreCase(className)) {
      return new TypeToken<ProductChildItemInfo200Response>(){}.getType();
    }
    
    if ("ProductCount200Response".equalsIgnoreCase(className)) {
      return new TypeToken<ProductCount200Response>(){}.getType();
    }
    
    if ("ProductCount200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<ProductCount200ResponseResult>(){}.getType();
    }
    
    if ("ProductCurrencyAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<ProductCurrencyAdd200Response>(){}.getType();
    }
    
    if ("ProductCurrencyAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<ProductCurrencyAdd200ResponseResult>(){}.getType();
    }
    
    if ("ProductDeleteBatch".equalsIgnoreCase(className)) {
      return new TypeToken<ProductDeleteBatch>(){}.getType();
    }
    
    if ("ProductDeleteBatchPayloadInner".equalsIgnoreCase(className)) {
      return new TypeToken<ProductDeleteBatchPayloadInner>(){}.getType();
    }
    
    if ("ProductFind200Response".equalsIgnoreCase(className)) {
      return new TypeToken<ProductFind200Response>(){}.getType();
    }
    
    if ("ProductFind200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<ProductFind200ResponseResult>(){}.getType();
    }
    
    if ("ProductFind200ResponseResultProductInner".equalsIgnoreCase(className)) {
      return new TypeToken<ProductFind200ResponseResultProductInner>(){}.getType();
    }
    
    if ("ProductGroupItem".equalsIgnoreCase(className)) {
      return new TypeToken<ProductGroupItem>(){}.getType();
    }
    
    if ("ProductGroupPrice".equalsIgnoreCase(className)) {
      return new TypeToken<ProductGroupPrice>(){}.getType();
    }
    
    if ("ProductImageAdd".equalsIgnoreCase(className)) {
      return new TypeToken<ProductImageAdd>(){}.getType();
    }
    
    if ("ProductImageAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<ProductImageAdd200Response>(){}.getType();
    }
    
    if ("ProductImageAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<ProductImageAdd200ResponseResult>(){}.getType();
    }
    
    if ("ProductImageUpdate200Response".equalsIgnoreCase(className)) {
      return new TypeToken<ProductImageUpdate200Response>(){}.getType();
    }
    
    if ("ProductImageUpdate200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<ProductImageUpdate200ResponseResult>(){}.getType();
    }
    
    if ("ProductInfo200Response".equalsIgnoreCase(className)) {
      return new TypeToken<ProductInfo200Response>(){}.getType();
    }
    
    if ("ProductInventory".equalsIgnoreCase(className)) {
      return new TypeToken<ProductInventory>(){}.getType();
    }
    
    if ("ProductManufacturerAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<ProductManufacturerAdd200Response>(){}.getType();
    }
    
    if ("ProductManufacturerAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<ProductManufacturerAdd200ResponseResult>(){}.getType();
    }
    
    if ("ProductOption".equalsIgnoreCase(className)) {
      return new TypeToken<ProductOption>(){}.getType();
    }
    
    if ("ProductOptionAdd".equalsIgnoreCase(className)) {
      return new TypeToken<ProductOptionAdd>(){}.getType();
    }
    
    if ("ProductOptionAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<ProductOptionAdd200Response>(){}.getType();
    }
    
    if ("ProductOptionAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<ProductOptionAdd200ResponseResult>(){}.getType();
    }
    
    if ("ProductOptionAddValuesInner".equalsIgnoreCase(className)) {
      return new TypeToken<ProductOptionAddValuesInner>(){}.getType();
    }
    
    if ("ProductOptionAssign200Response".equalsIgnoreCase(className)) {
      return new TypeToken<ProductOptionAssign200Response>(){}.getType();
    }
    
    if ("ProductOptionAssign200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<ProductOptionAssign200ResponseResult>(){}.getType();
    }
    
    if ("ProductOptionItem".equalsIgnoreCase(className)) {
      return new TypeToken<ProductOptionItem>(){}.getType();
    }
    
    if ("ProductOptionValueAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<ProductOptionValueAdd200Response>(){}.getType();
    }
    
    if ("ProductOptionValueAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<ProductOptionValueAdd200ResponseResult>(){}.getType();
    }
    
    if ("ProductOptionValueAssign200Response".equalsIgnoreCase(className)) {
      return new TypeToken<ProductOptionValueAssign200Response>(){}.getType();
    }
    
    if ("ProductOptionValueAssign200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<ProductOptionValueAssign200ResponseResult>(){}.getType();
    }
    
    if ("ProductPriceAdd".equalsIgnoreCase(className)) {
      return new TypeToken<ProductPriceAdd>(){}.getType();
    }
    
    if ("ProductPriceUpdate".equalsIgnoreCase(className)) {
      return new TypeToken<ProductPriceUpdate>(){}.getType();
    }
    
    if ("ProductPriceUpdateGroupPricesInner".equalsIgnoreCase(className)) {
      return new TypeToken<ProductPriceUpdateGroupPricesInner>(){}.getType();
    }
    
    if ("ProductReview".equalsIgnoreCase(className)) {
      return new TypeToken<ProductReview>(){}.getType();
    }
    
    if ("ProductReviewRating".equalsIgnoreCase(className)) {
      return new TypeToken<ProductReviewRating>(){}.getType();
    }
    
    if ("ProductTaxAdd".equalsIgnoreCase(className)) {
      return new TypeToken<ProductTaxAdd>(){}.getType();
    }
    
    if ("ProductTaxAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<ProductTaxAdd200Response>(){}.getType();
    }
    
    if ("ProductTaxAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<ProductTaxAdd200ResponseResult>(){}.getType();
    }
    
    if ("ProductTaxAddTaxRatesInner".equalsIgnoreCase(className)) {
      return new TypeToken<ProductTaxAddTaxRatesInner>(){}.getType();
    }
    
    if ("ProductTierPrice".equalsIgnoreCase(className)) {
      return new TypeToken<ProductTierPrice>(){}.getType();
    }
    
    if ("ProductUpdate".equalsIgnoreCase(className)) {
      return new TypeToken<ProductUpdate>(){}.getType();
    }
    
    if ("ProductUpdateBatch".equalsIgnoreCase(className)) {
      return new TypeToken<ProductUpdateBatch>(){}.getType();
    }
    
    if ("ProductUpdateBatchPayloadInner".equalsIgnoreCase(className)) {
      return new TypeToken<ProductUpdateBatchPayloadInner>(){}.getType();
    }
    
    if ("ProductUpdateBatchPayloadInnerAdvancedPricesInner".equalsIgnoreCase(className)) {
      return new TypeToken<ProductUpdateBatchPayloadInnerAdvancedPricesInner>(){}.getType();
    }
    
    if ("ProductUpdateBatchPayloadInnerImagesInner".equalsIgnoreCase(className)) {
      return new TypeToken<ProductUpdateBatchPayloadInnerImagesInner>(){}.getType();
    }
    
    if ("ProductVariantAdd".equalsIgnoreCase(className)) {
      return new TypeToken<ProductVariantAdd>(){}.getType();
    }
    
    if ("ProductVariantAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<ProductVariantAdd200Response>(){}.getType();
    }
    
    if ("ProductVariantAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<ProductVariantAdd200ResponseResult>(){}.getType();
    }
    
    if ("ProductVariantAddAttributesInner".equalsIgnoreCase(className)) {
      return new TypeToken<ProductVariantAddAttributesInner>(){}.getType();
    }
    
    if ("ProductVariantAddBatch".equalsIgnoreCase(className)) {
      return new TypeToken<ProductVariantAddBatch>(){}.getType();
    }
    
    if ("ProductVariantAddBatchPayloadInner".equalsIgnoreCase(className)) {
      return new TypeToken<ProductVariantAddBatchPayloadInner>(){}.getType();
    }
    
    if ("ProductVariantAddBatchPayloadInnerCombinationInner".equalsIgnoreCase(className)) {
      return new TypeToken<ProductVariantAddBatchPayloadInnerCombinationInner>(){}.getType();
    }
    
    if ("ProductVariantDeleteBatch".equalsIgnoreCase(className)) {
      return new TypeToken<ProductVariantDeleteBatch>(){}.getType();
    }
    
    if ("ProductVariantDeleteBatchPayloadInner".equalsIgnoreCase(className)) {
      return new TypeToken<ProductVariantDeleteBatchPayloadInner>(){}.getType();
    }
    
    if ("ProductVariantImageAdd".equalsIgnoreCase(className)) {
      return new TypeToken<ProductVariantImageAdd>(){}.getType();
    }
    
    if ("ProductVariantImageAdd200Response".equalsIgnoreCase(className)) {
      return new TypeToken<ProductVariantImageAdd200Response>(){}.getType();
    }
    
    if ("ProductVariantImageAdd200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<ProductVariantImageAdd200ResponseResult>(){}.getType();
    }
    
    if ("ProductVariantPriceAdd".equalsIgnoreCase(className)) {
      return new TypeToken<ProductVariantPriceAdd>(){}.getType();
    }
    
    if ("ProductVariantPriceUpdate".equalsIgnoreCase(className)) {
      return new TypeToken<ProductVariantPriceUpdate>(){}.getType();
    }
    
    if ("ProductVariantUpdate".equalsIgnoreCase(className)) {
      return new TypeToken<ProductVariantUpdate>(){}.getType();
    }
    
    if ("ProductVariantUpdateBatch".equalsIgnoreCase(className)) {
      return new TypeToken<ProductVariantUpdateBatch>(){}.getType();
    }
    
    if ("ProductVariantUpdateBatchPayloadInner".equalsIgnoreCase(className)) {
      return new TypeToken<ProductVariantUpdateBatchPayloadInner>(){}.getType();
    }
    
    if ("ProductVariantUpdateOptionsInner".equalsIgnoreCase(className)) {
      return new TypeToken<ProductVariantUpdateOptionsInner>(){}.getType();
    }
    
    if ("ResponseAttributeAttributesetListResult".equalsIgnoreCase(className)) {
      return new TypeToken<ResponseAttributeAttributesetListResult>(){}.getType();
    }
    
    if ("ResponseAttributeGroupListResult".equalsIgnoreCase(className)) {
      return new TypeToken<ResponseAttributeGroupListResult>(){}.getType();
    }
    
    if ("ResponseAttributeListResult".equalsIgnoreCase(className)) {
      return new TypeToken<ResponseAttributeListResult>(){}.getType();
    }
    
    if ("ResponseBatchJobListResult".equalsIgnoreCase(className)) {
      return new TypeToken<ResponseBatchJobListResult>(){}.getType();
    }
    
    if ("ResponseBatchJobResult".equalsIgnoreCase(className)) {
      return new TypeToken<ResponseBatchJobResult>(){}.getType();
    }
    
    if ("ResponseCartCatalogPriceRulesListResult".equalsIgnoreCase(className)) {
      return new TypeToken<ResponseCartCatalogPriceRulesListResult>(){}.getType();
    }
    
    if ("ResponseCartCouponListResult".equalsIgnoreCase(className)) {
      return new TypeToken<ResponseCartCouponListResult>(){}.getType();
    }
    
    if ("ResponseCartGiftcardListResult".equalsIgnoreCase(className)) {
      return new TypeToken<ResponseCartGiftcardListResult>(){}.getType();
    }
    
    if ("ResponseCartMetaDataListResult".equalsIgnoreCase(className)) {
      return new TypeToken<ResponseCartMetaDataListResult>(){}.getType();
    }
    
    if ("ResponseCartScriptListResult".equalsIgnoreCase(className)) {
      return new TypeToken<ResponseCartScriptListResult>(){}.getType();
    }
    
    if ("ResponseCartShippingZonesListResult".equalsIgnoreCase(className)) {
      return new TypeToken<ResponseCartShippingZonesListResult>(){}.getType();
    }
    
    if ("ResponseCategoryListResult".equalsIgnoreCase(className)) {
      return new TypeToken<ResponseCategoryListResult>(){}.getType();
    }
    
    if ("ResponseCustomerAttributeListResult".equalsIgnoreCase(className)) {
      return new TypeToken<ResponseCustomerAttributeListResult>(){}.getType();
    }
    
    if ("ResponseCustomerGroupListResult".equalsIgnoreCase(className)) {
      return new TypeToken<ResponseCustomerGroupListResult>(){}.getType();
    }
    
    if ("ResponseCustomerListResult".equalsIgnoreCase(className)) {
      return new TypeToken<ResponseCustomerListResult>(){}.getType();
    }
    
    if ("ResponseCustomerWishlistListResult".equalsIgnoreCase(className)) {
      return new TypeToken<ResponseCustomerWishlistListResult>(){}.getType();
    }
    
    if ("ResponseMarketplaceProductFindResult".equalsIgnoreCase(className)) {
      return new TypeToken<ResponseMarketplaceProductFindResult>(){}.getType();
    }
    
    if ("ResponseOrderAbandonedListResult".equalsIgnoreCase(className)) {
      return new TypeToken<ResponseOrderAbandonedListResult>(){}.getType();
    }
    
    if ("ResponseOrderListResult".equalsIgnoreCase(className)) {
      return new TypeToken<ResponseOrderListResult>(){}.getType();
    }
    
    if ("ResponseOrderPreestimateShippingListResult".equalsIgnoreCase(className)) {
      return new TypeToken<ResponseOrderPreestimateShippingListResult>(){}.getType();
    }
    
    if ("ResponseOrderShipmentListResult".equalsIgnoreCase(className)) {
      return new TypeToken<ResponseOrderShipmentListResult>(){}.getType();
    }
    
    if ("ResponseOrderStatusListResult".equalsIgnoreCase(className)) {
      return new TypeToken<ResponseOrderStatusListResult>(){}.getType();
    }
    
    if ("ResponseOrderTransactionListResult".equalsIgnoreCase(className)) {
      return new TypeToken<ResponseOrderTransactionListResult>(){}.getType();
    }
    
    if ("ResponseProductAttributeListResult".equalsIgnoreCase(className)) {
      return new TypeToken<ResponseProductAttributeListResult>(){}.getType();
    }
    
    if ("ResponseProductBrandListResult".equalsIgnoreCase(className)) {
      return new TypeToken<ResponseProductBrandListResult>(){}.getType();
    }
    
    if ("ResponseProductChildItemListResult".equalsIgnoreCase(className)) {
      return new TypeToken<ResponseProductChildItemListResult>(){}.getType();
    }
    
    if ("ResponseProductCurrencyListResult".equalsIgnoreCase(className)) {
      return new TypeToken<ResponseProductCurrencyListResult>(){}.getType();
    }
    
    if ("ResponseProductListResult".equalsIgnoreCase(className)) {
      return new TypeToken<ResponseProductListResult>(){}.getType();
    }
    
    if ("ResponseProductOptionListResult".equalsIgnoreCase(className)) {
      return new TypeToken<ResponseProductOptionListResult>(){}.getType();
    }
    
    if ("ResponseProductReviewListResult".equalsIgnoreCase(className)) {
      return new TypeToken<ResponseProductReviewListResult>(){}.getType();
    }
    
    if ("ResponseReturnListResult".equalsIgnoreCase(className)) {
      return new TypeToken<ResponseReturnListResult>(){}.getType();
    }
    
    if ("ResponseSubscriberListResult".equalsIgnoreCase(className)) {
      return new TypeToken<ResponseSubscriberListResult>(){}.getType();
    }
    
    if ("ResponseTaxClassInfoResult".equalsIgnoreCase(className)) {
      return new TypeToken<ResponseTaxClassInfoResult>(){}.getType();
    }
    
    if ("ResponseTaxClassListResult".equalsIgnoreCase(className)) {
      return new TypeToken<ResponseTaxClassListResult>(){}.getType();
    }
    
    if ("ReturnAction".equalsIgnoreCase(className)) {
      return new TypeToken<ReturnAction>(){}.getType();
    }
    
    if ("ReturnActionList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<ReturnActionList200Response>(){}.getType();
    }
    
    if ("ReturnActionList200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<ReturnActionList200ResponseResult>(){}.getType();
    }
    
    if ("ReturnCount200Response".equalsIgnoreCase(className)) {
      return new TypeToken<ReturnCount200Response>(){}.getType();
    }
    
    if ("ReturnCount200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<ReturnCount200ResponseResult>(){}.getType();
    }
    
    if ("ReturnInfo200Response".equalsIgnoreCase(className)) {
      return new TypeToken<ReturnInfo200Response>(){}.getType();
    }
    
    if ("ReturnOrderProduct".equalsIgnoreCase(className)) {
      return new TypeToken<ReturnOrderProduct>(){}.getType();
    }
    
    if ("ReturnReason".equalsIgnoreCase(className)) {
      return new TypeToken<ReturnReason>(){}.getType();
    }
    
    if ("ReturnReasonList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<ReturnReasonList200Response>(){}.getType();
    }
    
    if ("ReturnReasonList200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<ReturnReasonList200ResponseResult>(){}.getType();
    }
    
    if ("ReturnStatus".equalsIgnoreCase(className)) {
      return new TypeToken<ReturnStatus>(){}.getType();
    }
    
    if ("ReturnStatusList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<ReturnStatusList200Response>(){}.getType();
    }
    
    if ("ReturnStatusList200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<ReturnStatusList200ResponseResult>(){}.getType();
    }
    
    if ("Script".equalsIgnoreCase(className)) {
      return new TypeToken<Script>(){}.getType();
    }
    
    if ("Shipment".equalsIgnoreCase(className)) {
      return new TypeToken<Shipment>(){}.getType();
    }
    
    if ("ShipmentItem".equalsIgnoreCase(className)) {
      return new TypeToken<ShipmentItem>(){}.getType();
    }
    
    if ("ShipmentTrackingNumber".equalsIgnoreCase(className)) {
      return new TypeToken<ShipmentTrackingNumber>(){}.getType();
    }
    
    if ("SpecialPrice".equalsIgnoreCase(className)) {
      return new TypeToken<SpecialPrice>(){}.getType();
    }
    
    if ("State".equalsIgnoreCase(className)) {
      return new TypeToken<State>(){}.getType();
    }
    
    if ("Status".equalsIgnoreCase(className)) {
      return new TypeToken<Status>(){}.getType();
    }
    
    if ("StoreAttribute".equalsIgnoreCase(className)) {
      return new TypeToken<StoreAttribute>(){}.getType();
    }
    
    if ("StoreAttributeAttributeSet".equalsIgnoreCase(className)) {
      return new TypeToken<StoreAttributeAttributeSet>(){}.getType();
    }
    
    if ("StoreAttributeGroup".equalsIgnoreCase(className)) {
      return new TypeToken<StoreAttributeGroup>(){}.getType();
    }
    
    if ("Subscriber".equalsIgnoreCase(className)) {
      return new TypeToken<Subscriber>(){}.getType();
    }
    
    if ("TaxClass".equalsIgnoreCase(className)) {
      return new TypeToken<TaxClass>(){}.getType();
    }
    
    if ("TaxClassCountries".equalsIgnoreCase(className)) {
      return new TypeToken<TaxClassCountries>(){}.getType();
    }
    
    if ("TaxClassRate".equalsIgnoreCase(className)) {
      return new TypeToken<TaxClassRate>(){}.getType();
    }
    
    if ("TaxClassStates".equalsIgnoreCase(className)) {
      return new TypeToken<TaxClassStates>(){}.getType();
    }
    
    if ("TaxClassZipCodes".equalsIgnoreCase(className)) {
      return new TypeToken<TaxClassZipCodes>(){}.getType();
    }
    
    if ("TaxClassZipCodesRange".equalsIgnoreCase(className)) {
      return new TypeToken<TaxClassZipCodesRange>(){}.getType();
    }
    
    if ("Webhook".equalsIgnoreCase(className)) {
      return new TypeToken<Webhook>(){}.getType();
    }
    
    if ("WebhookCount200Response".equalsIgnoreCase(className)) {
      return new TypeToken<WebhookCount200Response>(){}.getType();
    }
    
    if ("WebhookCount200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<WebhookCount200ResponseResult>(){}.getType();
    }
    
    if ("WebhookEvents200Response".equalsIgnoreCase(className)) {
      return new TypeToken<WebhookEvents200Response>(){}.getType();
    }
    
    if ("WebhookEvents200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<WebhookEvents200ResponseResult>(){}.getType();
    }
    
    if ("WebhookEvents200ResponseResultEventsInner".equalsIgnoreCase(className)) {
      return new TypeToken<WebhookEvents200ResponseResultEventsInner>(){}.getType();
    }
    
    if ("WebhookList200Response".equalsIgnoreCase(className)) {
      return new TypeToken<WebhookList200Response>(){}.getType();
    }
    
    if ("WebhookList200ResponseResult".equalsIgnoreCase(className)) {
      return new TypeToken<WebhookList200ResponseResult>(){}.getType();
    }
    
    return new TypeToken<Object>(){}.getType();
  }

};
