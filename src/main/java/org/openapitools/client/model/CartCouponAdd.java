/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.math.BigDecimal;
import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class CartCouponAdd {
  
  @SerializedName("code")
  private String code = null;
  public enum ActionTypeEnum {
     percent,  fixed, 
  };
  @SerializedName("action_type")
  private ActionTypeEnum actionType = null;
  public enum ActionApplyToEnum {
     order_total,  item_price,  shipping, 
  };
  @SerializedName("action_apply_to")
  private ActionApplyToEnum actionApplyTo = null;
  public enum ActionScopeEnum {
     order,  matching_items, 
  };
  @SerializedName("action_scope")
  private ActionScopeEnum actionScope = null;
  @SerializedName("action_amount")
  private BigDecimal actionAmount = null;
  @SerializedName("codes")
  private List<String> codes = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("date_start")
  private String dateStart = now;
  @SerializedName("date_end")
  private String dateEnd = null;
  @SerializedName("usage_limit")
  private Integer usageLimit = null;
  @SerializedName("usage_limit_per_customer")
  private Integer usageLimitPerCustomer = null;
  @SerializedName("action_condition_entity")
  private String actionConditionEntity = null;
  @SerializedName("action_condition_key")
  private String actionConditionKey = null;
  @SerializedName("action_condition_operator")
  private String actionConditionOperator = null;
  @SerializedName("action_condition_value")
  private String actionConditionValue = null;
  @SerializedName("include_tax")
  private Boolean includeTax = false;
  @SerializedName("store_id")
  private String storeId = null;
  @SerializedName("free_cash_on_delivery")
  private Boolean freeCashOnDelivery = null;
  @SerializedName("customer_id")
  private String customerId = null;

  /**
   * Coupon code
   **/
  @ApiModelProperty(required = true, value = "Coupon code")
  public String getCode() {
    return code;
  }
  public void setCode(String code) {
    this.code = code;
  }

  /**
   * Coupon discount type
   **/
  @ApiModelProperty(required = true, value = "Coupon discount type")
  public ActionTypeEnum getActionType() {
    return actionType;
  }
  public void setActionType(ActionTypeEnum actionType) {
    this.actionType = actionType;
  }

  /**
   * Defines where discount should be applied
   **/
  @ApiModelProperty(required = true, value = "Defines where discount should be applied")
  public ActionApplyToEnum getActionApplyTo() {
    return actionApplyTo;
  }
  public void setActionApplyTo(ActionApplyToEnum actionApplyTo) {
    this.actionApplyTo = actionApplyTo;
  }

  /**
   * Specify how discount should be applied. If scope=matching_items, then discount will be applied to each of the items that match action conditions. Scope order means that discount will be applied once.
   **/
  @ApiModelProperty(required = true, value = "Specify how discount should be applied. If scope=matching_items, then discount will be applied to each of the items that match action conditions. Scope order means that discount will be applied once.")
  public ActionScopeEnum getActionScope() {
    return actionScope;
  }
  public void setActionScope(ActionScopeEnum actionScope) {
    this.actionScope = actionScope;
  }

  /**
   * Defines the discount amount value.
   **/
  @ApiModelProperty(required = true, value = "Defines the discount amount value.")
  public BigDecimal getActionAmount() {
    return actionAmount;
  }
  public void setActionAmount(BigDecimal actionAmount) {
    this.actionAmount = actionAmount;
  }

  /**
   * Entity codes
   **/
  @ApiModelProperty(value = "Entity codes")
  public List<String> getCodes() {
    return codes;
  }
  public void setCodes(List<String> codes) {
    this.codes = codes;
  }

  /**
   * Coupon name
   **/
  @ApiModelProperty(value = "Coupon name")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * Date start
   **/
  @ApiModelProperty(value = "Date start")
  public String getDateStart() {
    return dateStart;
  }
  public void setDateStart(String dateStart) {
    this.dateStart = dateStart;
  }

  /**
   * Defines when discount code will be expired.
   **/
  @ApiModelProperty(value = "Defines when discount code will be expired.")
  public String getDateEnd() {
    return dateEnd;
  }
  public void setDateEnd(String dateEnd) {
    this.dateEnd = dateEnd;
  }

  /**
   * Usage limit for coupon.
   **/
  @ApiModelProperty(value = "Usage limit for coupon.")
  public Integer getUsageLimit() {
    return usageLimit;
  }
  public void setUsageLimit(Integer usageLimit) {
    this.usageLimit = usageLimit;
  }

  /**
   * Usage limit per customer.
   **/
  @ApiModelProperty(value = "Usage limit per customer.")
  public Integer getUsageLimitPerCustomer() {
    return usageLimitPerCustomer;
  }
  public void setUsageLimitPerCustomer(Integer usageLimitPerCustomer) {
    this.usageLimitPerCustomer = usageLimitPerCustomer;
  }

  /**
   * Defines entity for action condition.
   **/
  @ApiModelProperty(value = "Defines entity for action condition.")
  public String getActionConditionEntity() {
    return actionConditionEntity;
  }
  public void setActionConditionEntity(String actionConditionEntity) {
    this.actionConditionEntity = actionConditionEntity;
  }

  /**
   * Defines entity attribute code for action condition.
   **/
  @ApiModelProperty(value = "Defines entity attribute code for action condition.")
  public String getActionConditionKey() {
    return actionConditionKey;
  }
  public void setActionConditionKey(String actionConditionKey) {
    this.actionConditionKey = actionConditionKey;
  }

  /**
   * Defines condition operator.
   **/
  @ApiModelProperty(value = "Defines condition operator.")
  public String getActionConditionOperator() {
    return actionConditionOperator;
  }
  public void setActionConditionOperator(String actionConditionOperator) {
    this.actionConditionOperator = actionConditionOperator;
  }

  /**
   * Defines condition attribute value/s. Can be comma separated string.
   **/
  @ApiModelProperty(value = "Defines condition attribute value/s. Can be comma separated string.")
  public String getActionConditionValue() {
    return actionConditionValue;
  }
  public void setActionConditionValue(String actionConditionValue) {
    this.actionConditionValue = actionConditionValue;
  }

  /**
   * Indicates whether to apply a discount for taxes.
   **/
  @ApiModelProperty(value = "Indicates whether to apply a discount for taxes.")
  public Boolean getIncludeTax() {
    return includeTax;
  }
  public void setIncludeTax(Boolean includeTax) {
    this.includeTax = includeTax;
  }

  /**
   * Store Id
   **/
  @ApiModelProperty(value = "Store Id")
  public String getStoreId() {
    return storeId;
  }
  public void setStoreId(String storeId) {
    this.storeId = storeId;
  }

  /**
   * Defines whether the coupon provides free cash on delivery
   **/
  @ApiModelProperty(value = "Defines whether the coupon provides free cash on delivery")
  public Boolean getFreeCashOnDelivery() {
    return freeCashOnDelivery;
  }
  public void setFreeCashOnDelivery(Boolean freeCashOnDelivery) {
    this.freeCashOnDelivery = freeCashOnDelivery;
  }

  /**
   * Retrieves orders specified by customer id
   **/
  @ApiModelProperty(value = "Retrieves orders specified by customer id")
  public String getCustomerId() {
    return customerId;
  }
  public void setCustomerId(String customerId) {
    this.customerId = customerId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CartCouponAdd cartCouponAdd = (CartCouponAdd) o;
    return (this.code == null ? cartCouponAdd.code == null : this.code.equals(cartCouponAdd.code)) &&
        (this.actionType == null ? cartCouponAdd.actionType == null : this.actionType.equals(cartCouponAdd.actionType)) &&
        (this.actionApplyTo == null ? cartCouponAdd.actionApplyTo == null : this.actionApplyTo.equals(cartCouponAdd.actionApplyTo)) &&
        (this.actionScope == null ? cartCouponAdd.actionScope == null : this.actionScope.equals(cartCouponAdd.actionScope)) &&
        (this.actionAmount == null ? cartCouponAdd.actionAmount == null : this.actionAmount.equals(cartCouponAdd.actionAmount)) &&
        (this.codes == null ? cartCouponAdd.codes == null : this.codes.equals(cartCouponAdd.codes)) &&
        (this.name == null ? cartCouponAdd.name == null : this.name.equals(cartCouponAdd.name)) &&
        (this.dateStart == null ? cartCouponAdd.dateStart == null : this.dateStart.equals(cartCouponAdd.dateStart)) &&
        (this.dateEnd == null ? cartCouponAdd.dateEnd == null : this.dateEnd.equals(cartCouponAdd.dateEnd)) &&
        (this.usageLimit == null ? cartCouponAdd.usageLimit == null : this.usageLimit.equals(cartCouponAdd.usageLimit)) &&
        (this.usageLimitPerCustomer == null ? cartCouponAdd.usageLimitPerCustomer == null : this.usageLimitPerCustomer.equals(cartCouponAdd.usageLimitPerCustomer)) &&
        (this.actionConditionEntity == null ? cartCouponAdd.actionConditionEntity == null : this.actionConditionEntity.equals(cartCouponAdd.actionConditionEntity)) &&
        (this.actionConditionKey == null ? cartCouponAdd.actionConditionKey == null : this.actionConditionKey.equals(cartCouponAdd.actionConditionKey)) &&
        (this.actionConditionOperator == null ? cartCouponAdd.actionConditionOperator == null : this.actionConditionOperator.equals(cartCouponAdd.actionConditionOperator)) &&
        (this.actionConditionValue == null ? cartCouponAdd.actionConditionValue == null : this.actionConditionValue.equals(cartCouponAdd.actionConditionValue)) &&
        (this.includeTax == null ? cartCouponAdd.includeTax == null : this.includeTax.equals(cartCouponAdd.includeTax)) &&
        (this.storeId == null ? cartCouponAdd.storeId == null : this.storeId.equals(cartCouponAdd.storeId)) &&
        (this.freeCashOnDelivery == null ? cartCouponAdd.freeCashOnDelivery == null : this.freeCashOnDelivery.equals(cartCouponAdd.freeCashOnDelivery)) &&
        (this.customerId == null ? cartCouponAdd.customerId == null : this.customerId.equals(cartCouponAdd.customerId));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.code == null ? 0: this.code.hashCode());
    result = 31 * result + (this.actionType == null ? 0: this.actionType.hashCode());
    result = 31 * result + (this.actionApplyTo == null ? 0: this.actionApplyTo.hashCode());
    result = 31 * result + (this.actionScope == null ? 0: this.actionScope.hashCode());
    result = 31 * result + (this.actionAmount == null ? 0: this.actionAmount.hashCode());
    result = 31 * result + (this.codes == null ? 0: this.codes.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.dateStart == null ? 0: this.dateStart.hashCode());
    result = 31 * result + (this.dateEnd == null ? 0: this.dateEnd.hashCode());
    result = 31 * result + (this.usageLimit == null ? 0: this.usageLimit.hashCode());
    result = 31 * result + (this.usageLimitPerCustomer == null ? 0: this.usageLimitPerCustomer.hashCode());
    result = 31 * result + (this.actionConditionEntity == null ? 0: this.actionConditionEntity.hashCode());
    result = 31 * result + (this.actionConditionKey == null ? 0: this.actionConditionKey.hashCode());
    result = 31 * result + (this.actionConditionOperator == null ? 0: this.actionConditionOperator.hashCode());
    result = 31 * result + (this.actionConditionValue == null ? 0: this.actionConditionValue.hashCode());
    result = 31 * result + (this.includeTax == null ? 0: this.includeTax.hashCode());
    result = 31 * result + (this.storeId == null ? 0: this.storeId.hashCode());
    result = 31 * result + (this.freeCashOnDelivery == null ? 0: this.freeCashOnDelivery.hashCode());
    result = 31 * result + (this.customerId == null ? 0: this.customerId.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CartCouponAdd {\n");
    
    sb.append("  code: ").append(code).append("\n");
    sb.append("  actionType: ").append(actionType).append("\n");
    sb.append("  actionApplyTo: ").append(actionApplyTo).append("\n");
    sb.append("  actionScope: ").append(actionScope).append("\n");
    sb.append("  actionAmount: ").append(actionAmount).append("\n");
    sb.append("  codes: ").append(codes).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  dateStart: ").append(dateStart).append("\n");
    sb.append("  dateEnd: ").append(dateEnd).append("\n");
    sb.append("  usageLimit: ").append(usageLimit).append("\n");
    sb.append("  usageLimitPerCustomer: ").append(usageLimitPerCustomer).append("\n");
    sb.append("  actionConditionEntity: ").append(actionConditionEntity).append("\n");
    sb.append("  actionConditionKey: ").append(actionConditionKey).append("\n");
    sb.append("  actionConditionOperator: ").append(actionConditionOperator).append("\n");
    sb.append("  actionConditionValue: ").append(actionConditionValue).append("\n");
    sb.append("  includeTax: ").append(includeTax).append("\n");
    sb.append("  storeId: ").append(storeId).append("\n");
    sb.append("  freeCashOnDelivery: ").append(freeCashOnDelivery).append("\n");
    sb.append("  customerId: ").append(customerId).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
