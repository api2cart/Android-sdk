/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ProductVariantImageAdd200ResponseResult {
  
  @SerializedName("id")
  private String id = null;
  @SerializedName("image_path")
  private String imagePath = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getImagePath() {
    return imagePath;
  }
  public void setImagePath(String imagePath) {
    this.imagePath = imagePath;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductVariantImageAdd200ResponseResult productVariantImageAdd200ResponseResult = (ProductVariantImageAdd200ResponseResult) o;
    return (this.id == null ? productVariantImageAdd200ResponseResult.id == null : this.id.equals(productVariantImageAdd200ResponseResult.id)) &&
        (this.imagePath == null ? productVariantImageAdd200ResponseResult.imagePath == null : this.imagePath.equals(productVariantImageAdd200ResponseResult.imagePath));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.imagePath == null ? 0: this.imagePath.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductVariantImageAdd200ResponseResult {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  imagePath: ").append(imagePath).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
